// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class AccountInfo;
@class AccountInfo_Builder;
@class BestBidOffer;
@class BestBidOffer_Builder;
@class BuySell;
@class BuySell_Builder;
@class BuyingPower;
@class BuyingPower_Builder;
@class COMessage;
@class COMessage_Builder;
@class CashFlow;
@class CashFlow_Builder;
@class CashMutation;
@class CashMutation_Builder;
@class CashWithdraw;
@class CashWithdraw_Builder;
@class ClientList;
@class ClientList_Builder;
@class ClientOverdue;
@class ClientOverdue_Builder;
@class CustomerExposure;
@class CustomerExposure_Builder;
@class CustomerPosition;
@class CustomerPosition_Builder;
@class FDSummary;
@class FDSummary_Builder;
@class ForeignDomestic;
@class ForeignDomestic_Builder;
@class ForeignHistory;
@class ForeignHistory_Builder;
@class GroupOrder;
@class GroupOrderDetail;
@class GroupOrderDetail_Builder;
@class GroupOrder_Builder;
@class IdxBrokerData;
@class IdxBrokerData_Builder;
@class IdxContractData;
@class IdxContractData_Builder;
@class IdxContractSummary;
@class IdxContractSummary_Builder;
@class IdxIndices;
@class IdxIndices_Builder;
@class IdxMarketDepth;
@class IdxMarketDepth_Builder;
@class IdxNewsMessage;
@class IdxNewsMessage_Builder;
@class IdxOrder;
@class IdxOrder_Builder;
@class IdxRecord;
@class IdxRecord_Builder;
@class IdxStockData;
@class IdxStockData_Builder;
@class IdxStockSummary;
@class IdxStockSummary_Builder;
@class IdxSuspendReleaseBroker;
@class IdxSuspendReleaseBroker_Builder;
@class IdxSuspendReleaseStock;
@class IdxSuspendReleaseStock_Builder;
@class IdxTrade;
@class IdxTrade_Builder;
@class IdxTradingStatus;
@class IdxTradingStatus_Builder;
@class Indices;
@class IndicesHistory;
@class IndicesHistory_Builder;
@class Indices_Builder;
@class KiBrokerData;
@class KiBrokerData_Builder;
@class KiComodity;
@class KiComodity_Builder;
@class KiCurrency;
@class KiCurrencyData;
@class KiCurrencyData_Builder;
@class KiCurrency_Builder;
@class KiFuture;
@class KiFuture_Builder;
@class KiIndices;
@class KiIndicesData;
@class KiIndicesData_Builder;
@class KiIndices_Builder;
@class KiOrder;
@class KiOrderDetail;
@class KiOrderDetail_Builder;
@class KiOrder_Builder;
@class KiRecord;
@class KiRecord_Builder;
@class KiRegionalIndices;
@class KiRegionalIndicesData;
@class KiRegionalIndicesData_Builder;
@class KiRegionalIndices_Builder;
@class KiRequest;
@class KiRequest_Builder;
@class KiStockData;
@class KiStockData_Builder;
@class KiStockSummary;
@class KiStockSummary_Builder;
@class KiTrade;
@class KiTradeDetail;
@class KiTradeDetail_Builder;
@class KiTrade_Builder;
@class KiWk52104;
@class KiWk52104_Builder;
@class Level2;
@class Level2_Builder;
@class Level3;
@class Level3Detail;
@class Level3Detail_Builder;
@class Level3_Builder;
@class LoginData;
@class LoginData_Builder;
@class MarginAlert;
@class MarginAlert_Builder;
@class MarketCapping;
@class MarketCapping_Builder;
@class MarketSummary;
@class MarketSummary_Builder;
@class MasterBranch;
@class MasterBranch_Builder;
@class MasterData;
@class MasterData_Builder;
@class MasterUserlist;
@class MasterUserlist_Builder;
@class MenuData;
@class MenuData_Builder;
@class MessageBroadcastData;
@class MessageBroadcastData_Builder;
@class NetBuySell;
@class NetBuySell_Builder;
@class OHLC;
@class OHLCFloat;
@class OHLCFloat_Builder;
@class OHLC_Builder;
@class Order;
@class OrderConditional;
@class OrderConditional_Builder;
@class OrderGtc;
@class OrderGtc_Builder;
@class OrderInfo;
@class OrderInfo_Builder;
@class OrderLifeCycle;
@class OrderLifeCycle_Builder;
@class OrderMobile;
@class OrderMobile_Builder;
@class Order_Builder;
@class Portfolio;
@class Portfolio_Builder;
@class PotonganPajak;
@class PotonganPajak_Builder;
@class RDNList;
@class RDNList_Builder;
@class RequestData;
@class RequestData_Builder;
@class SharesInfo;
@class SharesInfo_Builder;
@class StockHistory;
@class StockHistory_Builder;
@class StockSummary;
@class StockSummary_Builder;
@class SubmitOrder;
@class SubmitOrder_Builder;
@class TNumber;
@class TNumber_Builder;
@class Trade;
@class TradeDetail;
@class TradeDetail_Builder;
@class Trade_Builder;
@class TradingMessage;
@class TradingMessage_Builder;
@class TradingTarget;
@class TradingTarget_Builder;
@class Transaction;
@class TransactionDetail;
@class TransactionDetail_Builder;
@class Transaction_Builder;
@class TxOrder;
@class TxOrder_Builder;
@class TxTrade;
@class TxTrade_Builder;
@class UnregularStocklist;
@class UnregularStocklist_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  DeviceTypeDesktop = 0,
  DeviceTypeIpad = 1,
  DeviceTypeIphone = 2,
  DeviceTypeAndroid = 3,
  DeviceTypeBb = 4,
} DeviceType;

BOOL DeviceTypeIsValidValue(DeviceType value);

typedef enum {
  StatusReturnNoresult = 0,
  StatusReturnResult = 1,
  StatusReturnError = 2,
  StatusReturnSessionexp = 3,
  StatusReturnDoublelogin = 4,
  StatusReturnUpdateversion = 5,
  StatusReturnForcelogout = 6,
} StatusReturn;

BOOL StatusReturnIsValidValue(StatusReturn value);

typedef enum {
  UserLoginStatusIsLogin = 0,
  UserLoginStatusIsLogout = 1,
  UserLoginStatusIsDoubleLogin = 2,
  UserLoginStatusIsSessionExp = 3,
  UserLoginStatusIsForceLogoutApp = 4,
  UserLoginStatusIsForceLogoutPriv = 5,
} UserLoginStatus;

BOOL UserLoginStatusIsValidValue(UserLoginStatus value);

typedef enum {
  ChangePasswordSuccess = 0,
  ChangePasswordSessionExpired = 1,
  ChangePasswordNotCorrect = 2,
} ChangePassword;

BOOL ChangePasswordIsValidValue(ChangePassword value);

typedef enum {
  ServerTypeSystemAdmin = 0,
  ServerTypeTradingChannel = 1,
  ServerTypeMarketInfo = 2,
  ServerTypeOms = 3,
  ServerTypeRisk = 4,
  ServerTypeProxy = 5,
  ServerTypeMartin = 6,
} ServerType;

BOOL ServerTypeIsValidValue(ServerType value);

typedef enum {
  BoardRg = 0,
  BoardTn = 1,
  BoardNg = 2,
  BoardRo = 3,
  BoardRf = 4,
} Board;

BOOL BoardIsValidValue(Board value);

typedef enum {
  InvestorTypeD = 0,
  InvestorTypeF = 1,
} InvestorType;

BOOL InvestorTypeIsValidValue(InvestorType value);

typedef enum {
  SortOlder = 0,
  SortNewer = 1,
  SortNow = 2,
} Sort;

BOOL SortIsValidValue(Sort value);

typedef enum {
  OrderCommandBid = 0,
  OrderCommandOffer = 1,
  OrderCommandCancelAmendBid = 2,
  OrderCommandCancelAmendOffer = 3,
  OrderCommandAll = 4,
} OrderCommand;

BOOL OrderCommandIsValidValue(OrderCommand value);

typedef enum {
  TradeCommandMatched = 0,
  TradeCommandWithdrawn = 1,
} TradeCommand;

BOOL TradeCommandIsValidValue(TradeCommand value);

typedef enum {
  SecurityTypeOrdi = 0,
  SecurityTypeOrdiPreopen = 1,
  SecurityTypeRghi = 2,
  SecurityTypeWari = 3,
  SecurityTypeMuti = 4,
} SecurityType;

BOOL SecurityTypeIsValidValue(SecurityType value);

typedef enum {
  StatusActive = 0,
  StatusSuspend = 1,
} Status;

BOOL StatusIsValidValue(Status value);

typedef enum {
  OrderStatusOpen = 0,
  OrderStatusPartial = 1,
  OrderStatusDone = 2,
  OrderStatusCancel = 3,
  OrderStatusAmmend = 4,
} OrderStatus;

BOOL OrderStatusIsValidValue(OrderStatus value);

typedef enum {
  SuspendReleaseStatusSuspended = 0,
  SuspendReleaseStatusReleased = 1,
} SuspendReleaseStatus;

BOOL SuspendReleaseStatusIsValidValue(SuspendReleaseStatus value);

typedef enum {
  RequestSubscribe = 0,
  RequestUnsubscribe = 1,
  RequestGet = 2,
} Request;

BOOL RequestIsValidValue(Request value);

typedef enum {
  RecordTypeIdxTradingStatus = 0,
  RecordTypeIdxOrder = 1,
  RecordTypeIdxTrade = 2,
  RecordTypeIdxStockData = 3,
  RecordTypeIdxBrokerData = 4,
  RecordTypeIdxStockSummary = 5,
  RecordTypeIdxIndices = 6,
  RecordTypeIdxSuspendReleaseBroker = 7,
  RecordTypeIdxSuspendReleaseStock = 8,
  RecordTypeIdxNewsMessage = 9,
  RecordTypeKiTrade = 10,
  RecordTypeKiOrder = 11,
  RecordTypeKiIndices = 12,
  RecordTypeKiStockData = 13,
  RecordTypeKiBrokerData = 14,
  RecordTypeKiIndicesData = 15,
  RecordTypeKiRegionalIndicesData = 16,
  RecordTypeKiCurrencyData = 17,
  RecordTypeKiRegionalIndices = 18,
  RecordTypeKiCurrency = 19,
  RecordTypeLevel2 = 20,
  RecordTypeOrderStatus = 21,
  RecordTypeStockHistory = 22,
  RecordTypeIndicesHistory = 23,
  RecordTypeBrokerSummary = 24,
  RecordTypeStockNetbuysell = 25,
  RecordTypeBrokerNetbuysell = 26,
  RecordTypeForeignDomestic = 27,
  RecordTypeTradeDetail = 28,
  RecordTypeOrderDetail = 29,
  RecordTypeKiStockSummary = 30,
  RecordTypeKiRequest = 31,
  RecordTypeKiLastTrade = 32,
  RecordTypeCompareHistory = 33,
  RecordTypeLevel3 = 34,
  RecordTypeStopSignal = 35,
  RecordTypeOrderTracking = 36,
  RecordTypeFutures = 37,
  RecordTypeComodity = 38,
  RecordTypeFdSummary = 39,
  RecordTypeStockHistNetbuysell = 40,
  RecordTypeBrokerHistNetbuysell = 41,
  RecordTypeForeignHistory = 42,
  RecordTypeMarketSummary = 43,
  RecordTypeKey = 44,
  RecordTypeWk52104 = 45,
  RecordTypeIdxContractData = 46,
  RecordTypeIdxContractSummary = 47,
  RecordTypeIdxMarketDepth = 48,
  RecordTypeKiContractData = 49,
  RecordTypeKiContractSummary = 50,
  RecordTypeKiDerivativeTrade = 51,
  RecordTypeDerivativeLevel2 = 52,
  RecordTypeDerivativeLevel3 = 53,
  RecordTypeKiLastDerivativeTrade = 54,
  RecordTypeIdxDerivativeTrade = 55,
  RecordTypeKiTopBrokerByFreq = 56,
  RecordTypeKiTopBrokerByVol = 57,
  RecordTypeKiTopBrokerByVal = 58,
  RecordTypeKiTopLooser = 59,
  RecordTypeKiTopGainer = 60,
  RecordTypeKiTopActive = 61,
  RecordTypeKiTopValue = 62,
  RecordTypeRequest = 100,
  RecordTypeMPrevilleges = 101,
  RecordTypeMOrderstatus = 102,
  RecordTypeMOrdertype = 103,
  RecordTypeMMenu = 104,
  RecordTypeMarketCapping = 105,
  RecordTypeSharesInfo = 106,
  RecordTypeMessageBroadcast = 107,
  RecordTypeLoginMi = 108,
  RecordTypeLoginOl = 109,
  RecordTypeClientList = 110,
  RecordTypeLogoutMi = 111,
  RecordTypeLogoutOl = 112,
  RecordTypeChangePassword = 113,
  RecordTypeChangePin = 114,
  RecordTypeGetStatusSession = 115,
  RecordTypeUpdateSessionTrade = 116,
  RecordTypeGetStockInHand = 117,
  RecordTypeGetPrivilegeUser = 118,
  RecordTypeGetPortfolioOrder = 119,
  RecordTypeGetOrderPower = 120,
  RecordTypeGetAvaiableStock = 121,
  RecordTypeSendSubmitOrder = 122,
  RecordTypeGetCustomerPosition = 123,
  RecordTypeGetCustomerExposure = 124,
  RecordTypeGetOrders = 125,
  RecordTypeGetTrades = 126,
  RecordTypeGetOrderLifeCycle = 127,
  RecordTypeGetTradesDetail = 128,
  RecordTypeGetAdvList = 129,
  RecordTypeGetNegoReceived = 130,
  RecordTypeGetAccountInfo = 131,
  RecordTypeGetPortfolioList = 132,
  RecordTypeGetProfitloss = 133,
  RecordTypeGetOrderGtc = 134,
  RecordTypeGetMarginAlert = 135,
  RecordTypeGetCashFlow = 136,
  RecordTypeGetCashMutation = 137,
  RecordTypeGetCash = 138,
  RecordTypeSendCashMutation = 139,
  RecordTypeGetGroupOrder = 140,
  RecordTypeGetGroupOrderDetail = 141,
  RecordTypeGetClientOverdue = 142,
  RecordTypeGetCustomerPositionPortfolio = 143,
  RecordTypeLogoutReset = 144,
  RecordTypeGetHoliday = 145,
  RecordTypeGetMBranch = 146,
  RecordTypeGetMUserlist = 147,
  RecordTypeGetStockInHandCash = 148,
  RecordTypeGetConditionalOrders = 149,
  RecordTypeGetTradingTarget = 150,
  RecordTypeSendMultipleOrder = 151,
  RecordTypeGetPotonganPajak = 152,
  RecordTypeGetCustomerPositionAvgpricePortfolio = 153,
  RecordTypeGetResendOrders = 154,
  RecordTypeGetOrdersDrc = 155,
  RecordTypeGetOrderPowerMatrix = 156,
  RecordTypeGetAvaiableStockMatrix = 157,
  RecordTypeGetRdnList = 158,
  RecordTypeGetOrderPowerAndRdn = 159,
  RecordTypeSubmitCashWithdraw = 160,
  RecordTypeGetCashWithdraw = 161,
  RecordTypeGetCashWithdrawList = 162,
  RecordTypeChangePinPassword = 163,
} RecordType;

BOOL RecordTypeIsValidValue(RecordType value);

typedef enum {
  CORulesSimple = 1,
  CORulesIfDoneOrderSingleOrder = 2,
  CORulesIfDoneOrderSingleSecurities = 3,
  CORulesTrailingOrder = 4,
} CORules;

BOOL CORulesIsValidValue(CORules value);

typedef enum {
  COWhenLastPrice = 0,
  COWhenBestBidPrice = 1,
  COWhenBestOfferPrice = 2,
  COWhenTotalTradeQty = 3,
  COWhenBestBidQty = 4,
  COWhenBestOfferQty = 5,
  COWhenTradeQtyAtPrice = 6,
  COWhenQuantity = 7,
  COWhenFullyMatch = 8,
  COWhenQuantityMoreThan = 9,
} COWhen;

BOOL COWhenIsValidValue(COWhen value);

typedef enum {
  COWhenCompareGreaterEqual = 0,
  COWhenCompareLowerEqual = 1,
} COWhenCompare;

BOOL COWhenCompareIsValidValue(COWhenCompare value);

typedef enum {
  COTrendUpTrend = 0,
  COTrendDownTrend = 1,
} COTrend;

BOOL COTrendIsValidValue(COTrend value);

typedef enum {
  COStatusCoActive = 1,
  COStatusCoNotActive = 2,
} COStatus;

BOOL COStatusIsValidValue(COStatus value);


@interface ProtocolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface IdxRecord : PBGeneratedMessage {
@private
  BOOL hasDate_:1;
  BOOL hasTime_:1;
  BOOL hasSequence_:1;
  BOOL hasContractSummary_:1;
  BOOL hasContractData_:1;
  BOOL hasDerivativeTrade_:1;
  BOOL hasMarketDepth_:1;
  BOOL hasNewsMessage_:1;
  BOOL hasSuspendReleaseStock_:1;
  BOOL hasSuspendReleaseBroker_:1;
  BOOL hasIndices_:1;
  BOOL hasStockSummary_:1;
  BOOL hasBrokerData_:1;
  BOOL hasStockData_:1;
  BOOL hasTrade_:1;
  BOOL hasOrder_:1;
  BOOL hasTradingStatus_:1;
  BOOL hasRecordType_:1;
  int32_t date;
  int32_t time;
  int32_t sequence;
  IdxContractSummary* contractSummary;
  IdxContractData* contractData;
  IdxTrade* derivativeTrade;
  IdxMarketDepth* marketDepth;
  IdxNewsMessage* newsMessage NS_RETURNS_NOT_RETAINED;
  IdxSuspendReleaseStock* suspendReleaseStock;
  IdxSuspendReleaseBroker* suspendReleaseBroker;
  IdxIndices* indices;
  IdxStockSummary* stockSummary;
  IdxBrokerData* brokerData;
  IdxStockData* stockData;
  IdxTrade* trade;
  IdxOrder* order;
  IdxTradingStatus* tradingStatus;
  RecordType recordType;
}
- (BOOL) hasDate;
- (BOOL) hasTime;
- (BOOL) hasSequence;
- (BOOL) hasRecordType;
- (BOOL) hasTradingStatus;
- (BOOL) hasOrder;
- (BOOL) hasTrade;
- (BOOL) hasStockData;
- (BOOL) hasBrokerData;
- (BOOL) hasStockSummary;
- (BOOL) hasIndices;
- (BOOL) hasSuspendReleaseBroker;
- (BOOL) hasSuspendReleaseStock;
- (BOOL) hasNewsMessage;
- (BOOL) hasMarketDepth;
- (BOOL) hasDerivativeTrade;
- (BOOL) hasContractData;
- (BOOL) hasContractSummary;
@property (readonly) int32_t date;
@property (readonly) int32_t time;
@property (readonly) int32_t sequence;
@property (readonly) RecordType recordType;
@property (readonly, strong) IdxTradingStatus* tradingStatus;
@property (readonly, strong) IdxOrder* order;
@property (readonly, strong) IdxTrade* trade;
@property (readonly, strong) IdxStockData* stockData;
@property (readonly, strong) IdxBrokerData* brokerData;
@property (readonly, strong) IdxStockSummary* stockSummary;
@property (readonly, strong) IdxIndices* indices;
@property (readonly, strong) IdxSuspendReleaseBroker* suspendReleaseBroker;
@property (readonly, strong) IdxSuspendReleaseStock* suspendReleaseStock;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED IdxNewsMessage* newsMessage;
@property (readonly, strong) IdxMarketDepth* marketDepth;
@property (readonly, strong) IdxTrade* derivativeTrade;
@property (readonly, strong) IdxContractData* contractData;
@property (readonly, strong) IdxContractSummary* contractSummary;

+ (IdxRecord*) defaultInstance;
- (IdxRecord*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxRecord_Builder*) builder;
+ (IdxRecord_Builder*) builder;
+ (IdxRecord_Builder*) builderWithPrototype:(IdxRecord*) prototype;
- (IdxRecord_Builder*) toBuilder;

+ (IdxRecord*) parseFromData:(NSData*) data;
+ (IdxRecord*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxRecord*) parseFromInputStream:(NSInputStream*) input;
+ (IdxRecord*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxRecord_Builder : PBGeneratedMessage_Builder {
@private
  IdxRecord* result;
}

- (IdxRecord*) defaultInstance;

- (IdxRecord_Builder*) clear;
- (IdxRecord_Builder*) clone;

- (IdxRecord*) build;
- (IdxRecord*) buildPartial;

- (IdxRecord_Builder*) mergeFrom:(IdxRecord*) other;
- (IdxRecord_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxRecord_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDate;
- (int32_t) date;
- (IdxRecord_Builder*) setDate:(int32_t) value;
- (IdxRecord_Builder*) clearDate;

- (BOOL) hasTime;
- (int32_t) time;
- (IdxRecord_Builder*) setTime:(int32_t) value;
- (IdxRecord_Builder*) clearTime;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (IdxRecord_Builder*) setSequence:(int32_t) value;
- (IdxRecord_Builder*) clearSequence;

- (BOOL) hasRecordType;
- (RecordType) recordType;
- (IdxRecord_Builder*) setRecordType:(RecordType) value;
- (IdxRecord_Builder*) clearRecordType;

- (BOOL) hasTradingStatus;
- (IdxTradingStatus*) tradingStatus;
- (IdxRecord_Builder*) setTradingStatus:(IdxTradingStatus*) value;
- (IdxRecord_Builder*) setTradingStatusBuilder:(IdxTradingStatus_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeTradingStatus:(IdxTradingStatus*) value;
- (IdxRecord_Builder*) clearTradingStatus;

- (BOOL) hasOrder;
- (IdxOrder*) order;
- (IdxRecord_Builder*) setOrder:(IdxOrder*) value;
- (IdxRecord_Builder*) setOrderBuilder:(IdxOrder_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeOrder:(IdxOrder*) value;
- (IdxRecord_Builder*) clearOrder;

- (BOOL) hasTrade;
- (IdxTrade*) trade;
- (IdxRecord_Builder*) setTrade:(IdxTrade*) value;
- (IdxRecord_Builder*) setTradeBuilder:(IdxTrade_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeTrade:(IdxTrade*) value;
- (IdxRecord_Builder*) clearTrade;

- (BOOL) hasStockData;
- (IdxStockData*) stockData;
- (IdxRecord_Builder*) setStockData:(IdxStockData*) value;
- (IdxRecord_Builder*) setStockDataBuilder:(IdxStockData_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeStockData:(IdxStockData*) value;
- (IdxRecord_Builder*) clearStockData;

- (BOOL) hasBrokerData;
- (IdxBrokerData*) brokerData;
- (IdxRecord_Builder*) setBrokerData:(IdxBrokerData*) value;
- (IdxRecord_Builder*) setBrokerDataBuilder:(IdxBrokerData_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeBrokerData:(IdxBrokerData*) value;
- (IdxRecord_Builder*) clearBrokerData;

- (BOOL) hasStockSummary;
- (IdxStockSummary*) stockSummary;
- (IdxRecord_Builder*) setStockSummary:(IdxStockSummary*) value;
- (IdxRecord_Builder*) setStockSummaryBuilder:(IdxStockSummary_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeStockSummary:(IdxStockSummary*) value;
- (IdxRecord_Builder*) clearStockSummary;

- (BOOL) hasIndices;
- (IdxIndices*) indices;
- (IdxRecord_Builder*) setIndices:(IdxIndices*) value;
- (IdxRecord_Builder*) setIndicesBuilder:(IdxIndices_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeIndices:(IdxIndices*) value;
- (IdxRecord_Builder*) clearIndices;

- (BOOL) hasSuspendReleaseBroker;
- (IdxSuspendReleaseBroker*) suspendReleaseBroker;
- (IdxRecord_Builder*) setSuspendReleaseBroker:(IdxSuspendReleaseBroker*) value;
- (IdxRecord_Builder*) setSuspendReleaseBrokerBuilder:(IdxSuspendReleaseBroker_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeSuspendReleaseBroker:(IdxSuspendReleaseBroker*) value;
- (IdxRecord_Builder*) clearSuspendReleaseBroker;

- (BOOL) hasSuspendReleaseStock;
- (IdxSuspendReleaseStock*) suspendReleaseStock;
- (IdxRecord_Builder*) setSuspendReleaseStock:(IdxSuspendReleaseStock*) value;
- (IdxRecord_Builder*) setSuspendReleaseStockBuilder:(IdxSuspendReleaseStock_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeSuspendReleaseStock:(IdxSuspendReleaseStock*) value;
- (IdxRecord_Builder*) clearSuspendReleaseStock;

- (BOOL) hasNewsMessage;
- (IdxNewsMessage*) newsMessage;
- (IdxRecord_Builder*) setNewsMessage:(IdxNewsMessage*) value;
- (IdxRecord_Builder*) setNewsMessageBuilder:(IdxNewsMessage_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeNewsMessage:(IdxNewsMessage*) value;
- (IdxRecord_Builder*) clearNewsMessage;

- (BOOL) hasMarketDepth;
- (IdxMarketDepth*) marketDepth;
- (IdxRecord_Builder*) setMarketDepth:(IdxMarketDepth*) value;
- (IdxRecord_Builder*) setMarketDepthBuilder:(IdxMarketDepth_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeMarketDepth:(IdxMarketDepth*) value;
- (IdxRecord_Builder*) clearMarketDepth;

- (BOOL) hasDerivativeTrade;
- (IdxTrade*) derivativeTrade;
- (IdxRecord_Builder*) setDerivativeTrade:(IdxTrade*) value;
- (IdxRecord_Builder*) setDerivativeTradeBuilder:(IdxTrade_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeDerivativeTrade:(IdxTrade*) value;
- (IdxRecord_Builder*) clearDerivativeTrade;

- (BOOL) hasContractData;
- (IdxContractData*) contractData;
- (IdxRecord_Builder*) setContractData:(IdxContractData*) value;
- (IdxRecord_Builder*) setContractDataBuilder:(IdxContractData_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeContractData:(IdxContractData*) value;
- (IdxRecord_Builder*) clearContractData;

- (BOOL) hasContractSummary;
- (IdxContractSummary*) contractSummary;
- (IdxRecord_Builder*) setContractSummary:(IdxContractSummary*) value;
- (IdxRecord_Builder*) setContractSummaryBuilder:(IdxContractSummary_Builder*) builderForValue;
- (IdxRecord_Builder*) mergeContractSummary:(IdxContractSummary*) value;
- (IdxRecord_Builder*) clearContractSummary;
@end

@interface KiRecord : PBGeneratedMessage {
@private
  BOOL hasRequest_:1;
  BOOL hasFdsummary_:1;
  BOOL hasBrokerNetbuysell_:1;
  BOOL hasStockNetbuysell_:1;
  BOOL hasStockHistNetbuysell_:1;
  BOOL hasBrokerHistNetbuysell_:1;
  BOOL hasMarketSummary_:1;
  BOOL hasRecordType_:1;
  KiRequest* request;
  FDSummary* fdsummary;
  NetBuySell* brokerNetbuysell;
  NetBuySell* stockNetbuysell;
  NetBuySell* stockHistNetbuysell;
  NetBuySell* brokerHistNetbuysell;
  MarketSummary* marketSummary;
  RecordType recordType;
  NSMutableArray * conditionalOrderArray;
  NSMutableArray * wk52104Array;
  NSMutableArray * contractDataArray;
  NSMutableArray * foreignHistoryArray;
  NSMutableArray * derivativeTradeArray;
  NSMutableArray * derivativeLevel2Array;
  NSMutableArray * derivativeLevel3Array;
  NSMutableArray * contractSummaryArray;
  NSMutableArray * derivativeLastTradeArray;
  NSMutableArray * comodityArray;
  NSMutableArray * futureArray;
  NSMutableArray * orderTrackArray;
  NSMutableArray * lastTradeArray;
  NSMutableArray * tradingStatusArray;
  NSMutableArray * suspendReleaseStockArray;
  NSMutableArray * stockSummaryArray;
  NSMutableArray * tradeArray;
  NSMutableArray * orderArray;
  NSMutableArray * indicesArray;
  NSMutableArray * level2Array;
  NSMutableArray * level3Array;
  NSMutableArray * regionalIndicesArray;
  NSMutableArray * currencyArray;
  NSMutableArray * stockHistoryArray;
  NSMutableArray * indicesHistoryArray;
  NSMutableArray * brokerSummaryArray;
  NSMutableArray * foreignDomesticArray;
  NSMutableArray * tradeDetailArray;
  NSMutableArray * orderDetailArray;
  NSMutableArray * stockDataArray;
  NSMutableArray * brokerDataArray;
  NSMutableArray * indicesDataArray;
  NSMutableArray * regionalIndicesDataArray;
  NSMutableArray * currencyDataArray;
  NSMutableArray * suspendReleaseBrokerArray;
  PBAppendableArray * orderStatusArray;
}
- (BOOL) hasRecordType;
- (BOOL) hasStockNetbuysell;
- (BOOL) hasBrokerNetbuysell;
- (BOOL) hasRequest;
- (BOOL) hasFdsummary;
- (BOOL) hasStockHistNetbuysell;
- (BOOL) hasBrokerHistNetbuysell;
- (BOOL) hasMarketSummary;
@property (readonly) RecordType recordType;
@property (readonly, strong) NSArray * stockSummary;
@property (readonly, strong) NSArray * trade;
@property (readonly, strong) NSArray * order;
@property (readonly, strong) NSArray * indices;
@property (readonly, strong) NSArray * level2;
@property (readonly, strong) NSArray * level3;
@property (readonly, strong) PBArray * orderStatus;
@property (readonly, strong) NSArray * regionalIndices;
@property (readonly, strong) NSArray * currency;
@property (readonly, strong) NSArray * stockHistory;
@property (readonly, strong) NSArray * indicesHistory;
@property (readonly, strong) NSArray * brokerSummary;
@property (readonly, strong) NetBuySell* stockNetbuysell;
@property (readonly, strong) NetBuySell* brokerNetbuysell;
@property (readonly, strong) NSArray * foreignDomestic;
@property (readonly, strong) NSArray * tradeDetail;
@property (readonly, strong) NSArray * orderDetail;
@property (readonly, strong) NSArray * stockData;
@property (readonly, strong) NSArray * brokerData;
@property (readonly, strong) NSArray * indicesData;
@property (readonly, strong) NSArray * regionalIndicesData;
@property (readonly, strong) NSArray * currencyData;
@property (readonly, strong) NSArray * suspendReleaseBroker;
@property (readonly, strong) NSArray * suspendReleaseStock;
@property (readonly, strong) NSArray * tradingStatus;
@property (readonly, strong) KiRequest* request;
@property (readonly, strong) NSArray * lastTrade;
@property (readonly, strong) NSArray * orderTrack;
@property (readonly, strong) NSArray * future;
@property (readonly, strong) NSArray * comodity;
@property (readonly, strong) FDSummary* fdsummary;
@property (readonly, strong) NetBuySell* stockHistNetbuysell;
@property (readonly, strong) NetBuySell* brokerHistNetbuysell;
@property (readonly, strong) NSArray * foreignHistory;
@property (readonly, strong) MarketSummary* marketSummary;
@property (readonly, strong) NSArray * wk52104;
@property (readonly, strong) NSArray * conditionalOrder;
@property (readonly, strong) NSArray * contractData;
@property (readonly, strong) NSArray * derivativeTrade;
@property (readonly, strong) NSArray * derivativeLevel2;
@property (readonly, strong) NSArray * derivativeLevel3;
@property (readonly, strong) NSArray * contractSummary;
@property (readonly, strong) NSArray * derivativeLastTrade;
- (KiStockSummary*)stockSummaryAtIndex:(NSUInteger)index;
- (KiTrade*)tradeAtIndex:(NSUInteger)index;
- (KiOrder*)orderAtIndex:(NSUInteger)index;
- (KiIndices*)indicesAtIndex:(NSUInteger)index;
- (Level2*)level2AtIndex:(NSUInteger)index;
- (Level3*)level3AtIndex:(NSUInteger)index;
- (OrderStatus)orderStatusAtIndex:(NSUInteger)index;
- (KiRegionalIndices*)regionalIndicesAtIndex:(NSUInteger)index;
- (KiCurrency*)currencyAtIndex:(NSUInteger)index;
- (StockHistory*)stockHistoryAtIndex:(NSUInteger)index;
- (IndicesHistory*)indicesHistoryAtIndex:(NSUInteger)index;
- (Transaction*)brokerSummaryAtIndex:(NSUInteger)index;
- (ForeignDomestic*)foreignDomesticAtIndex:(NSUInteger)index;
- (KiTradeDetail*)tradeDetailAtIndex:(NSUInteger)index;
- (KiOrderDetail*)orderDetailAtIndex:(NSUInteger)index;
- (KiStockData*)stockDataAtIndex:(NSUInteger)index;
- (KiBrokerData*)brokerDataAtIndex:(NSUInteger)index;
- (KiIndicesData*)indicesDataAtIndex:(NSUInteger)index;
- (KiRegionalIndicesData*)regionalIndicesDataAtIndex:(NSUInteger)index;
- (KiCurrencyData*)currencyDataAtIndex:(NSUInteger)index;
- (IdxSuspendReleaseBroker*)suspendReleaseBrokerAtIndex:(NSUInteger)index;
- (IdxSuspendReleaseStock*)suspendReleaseStockAtIndex:(NSUInteger)index;
- (IdxTradingStatus*)tradingStatusAtIndex:(NSUInteger)index;
- (KiTrade*)lastTradeAtIndex:(NSUInteger)index;
- (KiOrderDetail*)orderTrackAtIndex:(NSUInteger)index;
- (KiFuture*)futureAtIndex:(NSUInteger)index;
- (KiComodity*)comodityAtIndex:(NSUInteger)index;
- (ForeignHistory*)foreignHistoryAtIndex:(NSUInteger)index;
- (KiWk52104*)wk52104AtIndex:(NSUInteger)index;
- (COMessage*)conditionalOrderAtIndex:(NSUInteger)index;
- (KiStockData*)contractDataAtIndex:(NSUInteger)index;
- (KiTrade*)derivativeTradeAtIndex:(NSUInteger)index;
- (Level2*)derivativeLevel2AtIndex:(NSUInteger)index;
- (Level3*)derivativeLevel3AtIndex:(NSUInteger)index;
- (KiStockSummary*)contractSummaryAtIndex:(NSUInteger)index;
- (KiTrade*)derivativeLastTradeAtIndex:(NSUInteger)index;

+ (KiRecord*) defaultInstance;
- (KiRecord*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiRecord_Builder*) builder;
+ (KiRecord_Builder*) builder;
+ (KiRecord_Builder*) builderWithPrototype:(KiRecord*) prototype;
- (KiRecord_Builder*) toBuilder;

+ (KiRecord*) parseFromData:(NSData*) data;
+ (KiRecord*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRecord*) parseFromInputStream:(NSInputStream*) input;
+ (KiRecord*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiRecord_Builder : PBGeneratedMessage_Builder {
@private
  KiRecord* result;
}

- (KiRecord*) defaultInstance;

- (KiRecord_Builder*) clear;
- (KiRecord_Builder*) clone;

- (KiRecord*) build;
- (KiRecord*) buildPartial;

- (KiRecord_Builder*) mergeFrom:(KiRecord*) other;
- (KiRecord_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiRecord_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRecordType;
- (RecordType) recordType;
- (KiRecord_Builder*) setRecordType:(RecordType) value;
- (KiRecord_Builder*) clearRecordType;

- (NSMutableArray *)stockSummary;
- (KiStockSummary*)stockSummaryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addStockSummary:(KiStockSummary*)value;
- (KiRecord_Builder *)setStockSummaryArray:(NSArray *)array;
- (KiRecord_Builder *)clearStockSummary;

- (NSMutableArray *)trade;
- (KiTrade*)tradeAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addTrade:(KiTrade*)value;
- (KiRecord_Builder *)setTradeArray:(NSArray *)array;
- (KiRecord_Builder *)clearTrade;

- (NSMutableArray *)order;
- (KiOrder*)orderAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addOrder:(KiOrder*)value;
- (KiRecord_Builder *)setOrderArray:(NSArray *)array;
- (KiRecord_Builder *)clearOrder;

- (NSMutableArray *)indices;
- (KiIndices*)indicesAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addIndices:(KiIndices*)value;
- (KiRecord_Builder *)setIndicesArray:(NSArray *)array;
- (KiRecord_Builder *)clearIndices;

- (NSMutableArray *)level2;
- (Level2*)level2AtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addLevel2:(Level2*)value;
- (KiRecord_Builder *)setLevel2Array:(NSArray *)array;
- (KiRecord_Builder *)clearLevel2;

- (NSMutableArray *)level3;
- (Level3*)level3AtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addLevel3:(Level3*)value;
- (KiRecord_Builder *)setLevel3Array:(NSArray *)array;
- (KiRecord_Builder *)clearLevel3;

- (PBAppendableArray *)orderStatus;
- (OrderStatus)orderStatusAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addOrderStatus:(OrderStatus)value;
- (KiRecord_Builder *)setOrderStatusArray:(NSArray *)array;
- (KiRecord_Builder *)setOrderStatusValues:(const OrderStatus *)values count:(NSUInteger)count;
- (KiRecord_Builder *)clearOrderStatus;

- (NSMutableArray *)regionalIndices;
- (KiRegionalIndices*)regionalIndicesAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addRegionalIndices:(KiRegionalIndices*)value;
- (KiRecord_Builder *)setRegionalIndicesArray:(NSArray *)array;
- (KiRecord_Builder *)clearRegionalIndices;

- (NSMutableArray *)currency;
- (KiCurrency*)currencyAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addCurrency:(KiCurrency*)value;
- (KiRecord_Builder *)setCurrencyArray:(NSArray *)array;
- (KiRecord_Builder *)clearCurrency;

- (NSMutableArray *)stockHistory;
- (StockHistory*)stockHistoryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addStockHistory:(StockHistory*)value;
- (KiRecord_Builder *)setStockHistoryArray:(NSArray *)array;
- (KiRecord_Builder *)clearStockHistory;

- (NSMutableArray *)indicesHistory;
- (IndicesHistory*)indicesHistoryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addIndicesHistory:(IndicesHistory*)value;
- (KiRecord_Builder *)setIndicesHistoryArray:(NSArray *)array;
- (KiRecord_Builder *)clearIndicesHistory;

- (NSMutableArray *)brokerSummary;
- (Transaction*)brokerSummaryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addBrokerSummary:(Transaction*)value;
- (KiRecord_Builder *)setBrokerSummaryArray:(NSArray *)array;
- (KiRecord_Builder *)clearBrokerSummary;

- (BOOL) hasStockNetbuysell;
- (NetBuySell*) stockNetbuysell;
- (KiRecord_Builder*) setStockNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) setStockNetbuysellBuilder:(NetBuySell_Builder*) builderForValue;
- (KiRecord_Builder*) mergeStockNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) clearStockNetbuysell;

- (BOOL) hasBrokerNetbuysell;
- (NetBuySell*) brokerNetbuysell;
- (KiRecord_Builder*) setBrokerNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) setBrokerNetbuysellBuilder:(NetBuySell_Builder*) builderForValue;
- (KiRecord_Builder*) mergeBrokerNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) clearBrokerNetbuysell;

- (NSMutableArray *)foreignDomestic;
- (ForeignDomestic*)foreignDomesticAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addForeignDomestic:(ForeignDomestic*)value;
- (KiRecord_Builder *)setForeignDomesticArray:(NSArray *)array;
- (KiRecord_Builder *)clearForeignDomestic;

- (NSMutableArray *)tradeDetail;
- (KiTradeDetail*)tradeDetailAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addTradeDetail:(KiTradeDetail*)value;
- (KiRecord_Builder *)setTradeDetailArray:(NSArray *)array;
- (KiRecord_Builder *)clearTradeDetail;

- (NSMutableArray *)orderDetail;
- (KiOrderDetail*)orderDetailAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addOrderDetail:(KiOrderDetail*)value;
- (KiRecord_Builder *)setOrderDetailArray:(NSArray *)array;
- (KiRecord_Builder *)clearOrderDetail;

- (NSMutableArray *)stockData;
- (KiStockData*)stockDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addStockData:(KiStockData*)value;
- (KiRecord_Builder *)setStockDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearStockData;

- (NSMutableArray *)brokerData;
- (KiBrokerData*)brokerDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addBrokerData:(KiBrokerData*)value;
- (KiRecord_Builder *)setBrokerDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearBrokerData;

- (NSMutableArray *)indicesData;
- (KiIndicesData*)indicesDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addIndicesData:(KiIndicesData*)value;
- (KiRecord_Builder *)setIndicesDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearIndicesData;

- (NSMutableArray *)regionalIndicesData;
- (KiRegionalIndicesData*)regionalIndicesDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addRegionalIndicesData:(KiRegionalIndicesData*)value;
- (KiRecord_Builder *)setRegionalIndicesDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearRegionalIndicesData;

- (NSMutableArray *)currencyData;
- (KiCurrencyData*)currencyDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addCurrencyData:(KiCurrencyData*)value;
- (KiRecord_Builder *)setCurrencyDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearCurrencyData;

- (NSMutableArray *)suspendReleaseBroker;
- (IdxSuspendReleaseBroker*)suspendReleaseBrokerAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addSuspendReleaseBroker:(IdxSuspendReleaseBroker*)value;
- (KiRecord_Builder *)setSuspendReleaseBrokerArray:(NSArray *)array;
- (KiRecord_Builder *)clearSuspendReleaseBroker;

- (NSMutableArray *)suspendReleaseStock;
- (IdxSuspendReleaseStock*)suspendReleaseStockAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addSuspendReleaseStock:(IdxSuspendReleaseStock*)value;
- (KiRecord_Builder *)setSuspendReleaseStockArray:(NSArray *)array;
- (KiRecord_Builder *)clearSuspendReleaseStock;

- (NSMutableArray *)tradingStatus;
- (IdxTradingStatus*)tradingStatusAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addTradingStatus:(IdxTradingStatus*)value;
- (KiRecord_Builder *)setTradingStatusArray:(NSArray *)array;
- (KiRecord_Builder *)clearTradingStatus;

- (BOOL) hasRequest;
- (KiRequest*) request;
- (KiRecord_Builder*) setRequest:(KiRequest*) value;
- (KiRecord_Builder*) setRequestBuilder:(KiRequest_Builder*) builderForValue;
- (KiRecord_Builder*) mergeRequest:(KiRequest*) value;
- (KiRecord_Builder*) clearRequest;

- (NSMutableArray *)lastTrade;
- (KiTrade*)lastTradeAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addLastTrade:(KiTrade*)value;
- (KiRecord_Builder *)setLastTradeArray:(NSArray *)array;
- (KiRecord_Builder *)clearLastTrade;

- (NSMutableArray *)orderTrack;
- (KiOrderDetail*)orderTrackAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addOrderTrack:(KiOrderDetail*)value;
- (KiRecord_Builder *)setOrderTrackArray:(NSArray *)array;
- (KiRecord_Builder *)clearOrderTrack;

- (NSMutableArray *)future;
- (KiFuture*)futureAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addFuture:(KiFuture*)value;
- (KiRecord_Builder *)setFutureArray:(NSArray *)array;
- (KiRecord_Builder *)clearFuture;

- (NSMutableArray *)comodity;
- (KiComodity*)comodityAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addComodity:(KiComodity*)value;
- (KiRecord_Builder *)setComodityArray:(NSArray *)array;
- (KiRecord_Builder *)clearComodity;

- (BOOL) hasFdsummary;
- (FDSummary*) fdsummary;
- (KiRecord_Builder*) setFdsummary:(FDSummary*) value;
- (KiRecord_Builder*) setFdsummaryBuilder:(FDSummary_Builder*) builderForValue;
- (KiRecord_Builder*) mergeFdsummary:(FDSummary*) value;
- (KiRecord_Builder*) clearFdsummary;

- (BOOL) hasStockHistNetbuysell;
- (NetBuySell*) stockHistNetbuysell;
- (KiRecord_Builder*) setStockHistNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) setStockHistNetbuysellBuilder:(NetBuySell_Builder*) builderForValue;
- (KiRecord_Builder*) mergeStockHistNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) clearStockHistNetbuysell;

- (BOOL) hasBrokerHistNetbuysell;
- (NetBuySell*) brokerHistNetbuysell;
- (KiRecord_Builder*) setBrokerHistNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) setBrokerHistNetbuysellBuilder:(NetBuySell_Builder*) builderForValue;
- (KiRecord_Builder*) mergeBrokerHistNetbuysell:(NetBuySell*) value;
- (KiRecord_Builder*) clearBrokerHistNetbuysell;

- (NSMutableArray *)foreignHistory;
- (ForeignHistory*)foreignHistoryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addForeignHistory:(ForeignHistory*)value;
- (KiRecord_Builder *)setForeignHistoryArray:(NSArray *)array;
- (KiRecord_Builder *)clearForeignHistory;

- (BOOL) hasMarketSummary;
- (MarketSummary*) marketSummary;
- (KiRecord_Builder*) setMarketSummary:(MarketSummary*) value;
- (KiRecord_Builder*) setMarketSummaryBuilder:(MarketSummary_Builder*) builderForValue;
- (KiRecord_Builder*) mergeMarketSummary:(MarketSummary*) value;
- (KiRecord_Builder*) clearMarketSummary;

- (NSMutableArray *)wk52104;
- (KiWk52104*)wk52104AtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addWk52104:(KiWk52104*)value;
- (KiRecord_Builder *)setWk52104Array:(NSArray *)array;
- (KiRecord_Builder *)clearWk52104;

- (NSMutableArray *)conditionalOrder;
- (COMessage*)conditionalOrderAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addConditionalOrder:(COMessage*)value;
- (KiRecord_Builder *)setConditionalOrderArray:(NSArray *)array;
- (KiRecord_Builder *)clearConditionalOrder;

- (NSMutableArray *)contractData;
- (KiStockData*)contractDataAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addContractData:(KiStockData*)value;
- (KiRecord_Builder *)setContractDataArray:(NSArray *)array;
- (KiRecord_Builder *)clearContractData;

- (NSMutableArray *)derivativeTrade;
- (KiTrade*)derivativeTradeAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addDerivativeTrade:(KiTrade*)value;
- (KiRecord_Builder *)setDerivativeTradeArray:(NSArray *)array;
- (KiRecord_Builder *)clearDerivativeTrade;

- (NSMutableArray *)derivativeLevel2;
- (Level2*)derivativeLevel2AtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addDerivativeLevel2:(Level2*)value;
- (KiRecord_Builder *)setDerivativeLevel2Array:(NSArray *)array;
- (KiRecord_Builder *)clearDerivativeLevel2;

- (NSMutableArray *)derivativeLevel3;
- (Level3*)derivativeLevel3AtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addDerivativeLevel3:(Level3*)value;
- (KiRecord_Builder *)setDerivativeLevel3Array:(NSArray *)array;
- (KiRecord_Builder *)clearDerivativeLevel3;

- (NSMutableArray *)contractSummary;
- (KiStockSummary*)contractSummaryAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addContractSummary:(KiStockSummary*)value;
- (KiRecord_Builder *)setContractSummaryArray:(NSArray *)array;
- (KiRecord_Builder *)clearContractSummary;

- (NSMutableArray *)derivativeLastTrade;
- (KiTrade*)derivativeLastTradeAtIndex:(NSUInteger)index;
- (KiRecord_Builder *)addDerivativeLastTrade:(KiTrade*)value;
- (KiRecord_Builder *)setDerivativeLastTradeArray:(NSArray *)array;
- (KiRecord_Builder *)clearDerivativeLastTrade;
@end

@interface KiRequest : PBGeneratedMessage {
@private
  BOOL hasPage_:1;
  BOOL hasRange1_:1;
  BOOL hasRange2_:1;
  BOOL hasNumber_:1;
  BOOL hasPrice_:1;
  BOOL hasMax_:1;
  BOOL hasCode_:1;
  BOOL hasBroker_:1;
  BOOL hasKey_:1;
  BOOL hasType_:1;
  BOOL hasStatus_:1;
  BOOL hasBoard_:1;
  BOOL hasSort_:1;
  BOOL hasCommand_:1;
  int32_t page;
  int32_t range1;
  int32_t range2;
  int32_t number;
  int32_t price;
  int32_t max;
  NSString* code;
  NSString* broker;
  NSString* key;
  RecordType type;
  Request status;
  Board board;
  Sort sort;
  OrderCommand command;
}
- (BOOL) hasType;
- (BOOL) hasStatus;
- (BOOL) hasCode;
- (BOOL) hasBoard;
- (BOOL) hasPage;
- (BOOL) hasRange1;
- (BOOL) hasRange2;
- (BOOL) hasNumber;
- (BOOL) hasPrice;
- (BOOL) hasSort;
- (BOOL) hasBroker;
- (BOOL) hasMax;
- (BOOL) hasCommand;
- (BOOL) hasKey;
@property (readonly) RecordType type;
@property (readonly) Request status;
@property (readonly, strong) NSString* code;
@property (readonly) Board board;
@property (readonly) int32_t page;
@property (readonly) int32_t range1;
@property (readonly) int32_t range2;
@property (readonly) int32_t number;
@property (readonly) int32_t price;
@property (readonly) Sort sort;
@property (readonly, strong) NSString* broker;
@property (readonly) int32_t max;
@property (readonly) OrderCommand command;
@property (readonly, strong) NSString* key;

+ (KiRequest*) defaultInstance;
- (KiRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiRequest_Builder*) builder;
+ (KiRequest_Builder*) builder;
+ (KiRequest_Builder*) builderWithPrototype:(KiRequest*) prototype;
- (KiRequest_Builder*) toBuilder;

+ (KiRequest*) parseFromData:(NSData*) data;
+ (KiRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRequest*) parseFromInputStream:(NSInputStream*) input;
+ (KiRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiRequest_Builder : PBGeneratedMessage_Builder {
@private
  KiRequest* result;
}

- (KiRequest*) defaultInstance;

- (KiRequest_Builder*) clear;
- (KiRequest_Builder*) clone;

- (KiRequest*) build;
- (KiRequest*) buildPartial;

- (KiRequest_Builder*) mergeFrom:(KiRequest*) other;
- (KiRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (RecordType) type;
- (KiRequest_Builder*) setType:(RecordType) value;
- (KiRequest_Builder*) clearType;

- (BOOL) hasStatus;
- (Request) status;
- (KiRequest_Builder*) setStatus:(Request) value;
- (KiRequest_Builder*) clearStatus;

- (BOOL) hasCode;
- (NSString*) code;
- (KiRequest_Builder*) setCode:(NSString*) value;
- (KiRequest_Builder*) clearCode;

- (BOOL) hasBoard;
- (Board) board;
- (KiRequest_Builder*) setBoard:(Board) value;
- (KiRequest_Builder*) clearBoard;

- (BOOL) hasPage;
- (int32_t) page;
- (KiRequest_Builder*) setPage:(int32_t) value;
- (KiRequest_Builder*) clearPage;

- (BOOL) hasRange1;
- (int32_t) range1;
- (KiRequest_Builder*) setRange1:(int32_t) value;
- (KiRequest_Builder*) clearRange1;

- (BOOL) hasRange2;
- (int32_t) range2;
- (KiRequest_Builder*) setRange2:(int32_t) value;
- (KiRequest_Builder*) clearRange2;

- (BOOL) hasNumber;
- (int32_t) number;
- (KiRequest_Builder*) setNumber:(int32_t) value;
- (KiRequest_Builder*) clearNumber;

- (BOOL) hasPrice;
- (int32_t) price;
- (KiRequest_Builder*) setPrice:(int32_t) value;
- (KiRequest_Builder*) clearPrice;

- (BOOL) hasSort;
- (Sort) sort;
- (KiRequest_Builder*) setSort:(Sort) value;
- (KiRequest_Builder*) clearSort;

- (BOOL) hasBroker;
- (NSString*) broker;
- (KiRequest_Builder*) setBroker:(NSString*) value;
- (KiRequest_Builder*) clearBroker;

- (BOOL) hasMax;
- (int32_t) max;
- (KiRequest_Builder*) setMax:(int32_t) value;
- (KiRequest_Builder*) clearMax;

- (BOOL) hasCommand;
- (OrderCommand) command;
- (KiRequest_Builder*) setCommand:(OrderCommand) value;
- (KiRequest_Builder*) clearCommand;

- (BOOL) hasKey;
- (NSString*) key;
- (KiRequest_Builder*) setKey:(NSString*) value;
- (KiRequest_Builder*) clearKey;
@end

@interface COMessage : PBGeneratedMessage {
@private
  BOOL hasTrigered_:1;
  BOOL hasOcid_:1;
  BOOL hasPrice_:1;
  BOOL hasQty_:1;
  BOOL hasDiffFromTop_:1;
  BOOL hasSide_:1;
  BOOL hasTickPrice_:1;
  BOOL hasCode_:1;
  BOOL hasOwnerId_:1;
  BOOL hasRulesCo_:1;
  BOOL hasWhen1_:1;
  BOOL hasWhcomp_:1;
  BOOL hasWhen2_:1;
  BOOL hasWhcomp2_:1;
  BOOL hasStatus_:1;
  BOOL hasTrend_:1;
  BOOL trigered_:1;
  int32_t ocid;
  int32_t price;
  int32_t qty;
  int32_t diffFromTop;
  int32_t side;
  int32_t tickPrice;
  NSString* code;
  NSString* ownerId;
  CORules rulesCo;
  COWhen when1;
  COWhenCompare whcomp;
  COWhen when2;
  COWhenCompare whcomp2;
  COStatus status;
  COTrend trend;
}
- (BOOL) hasOcid;
- (BOOL) hasCode;
- (BOOL) hasRulesCo;
- (BOOL) hasWhen1;
- (BOOL) hasWhcomp;
- (BOOL) hasPrice;
- (BOOL) hasWhen2;
- (BOOL) hasWhcomp2;
- (BOOL) hasQty;
- (BOOL) hasStatus;
- (BOOL) hasTrend;
- (BOOL) hasDiffFromTop;
- (BOOL) hasSide;
- (BOOL) hasTrigered;
- (BOOL) hasTickPrice;
- (BOOL) hasOwnerId;
@property (readonly) int32_t ocid;
@property (readonly, strong) NSString* code;
@property (readonly) CORules rulesCo;
@property (readonly) COWhen when1;
@property (readonly) COWhenCompare whcomp;
@property (readonly) int32_t price;
@property (readonly) COWhen when2;
@property (readonly) COWhenCompare whcomp2;
@property (readonly) int32_t qty;
@property (readonly) COStatus status;
@property (readonly) COTrend trend;
@property (readonly) int32_t diffFromTop;
@property (readonly) int32_t side;
- (BOOL) trigered;
@property (readonly) int32_t tickPrice;
@property (readonly, strong) NSString* ownerId;

+ (COMessage*) defaultInstance;
- (COMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (COMessage_Builder*) builder;
+ (COMessage_Builder*) builder;
+ (COMessage_Builder*) builderWithPrototype:(COMessage*) prototype;
- (COMessage_Builder*) toBuilder;

+ (COMessage*) parseFromData:(NSData*) data;
+ (COMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (COMessage*) parseFromInputStream:(NSInputStream*) input;
+ (COMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (COMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (COMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface COMessage_Builder : PBGeneratedMessage_Builder {
@private
  COMessage* result;
}

- (COMessage*) defaultInstance;

- (COMessage_Builder*) clear;
- (COMessage_Builder*) clone;

- (COMessage*) build;
- (COMessage*) buildPartial;

- (COMessage_Builder*) mergeFrom:(COMessage*) other;
- (COMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (COMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOcid;
- (int32_t) ocid;
- (COMessage_Builder*) setOcid:(int32_t) value;
- (COMessage_Builder*) clearOcid;

- (BOOL) hasCode;
- (NSString*) code;
- (COMessage_Builder*) setCode:(NSString*) value;
- (COMessage_Builder*) clearCode;

- (BOOL) hasRulesCo;
- (CORules) rulesCo;
- (COMessage_Builder*) setRulesCo:(CORules) value;
- (COMessage_Builder*) clearRulesCo;

- (BOOL) hasWhen1;
- (COWhen) when1;
- (COMessage_Builder*) setWhen1:(COWhen) value;
- (COMessage_Builder*) clearWhen1;

- (BOOL) hasWhcomp;
- (COWhenCompare) whcomp;
- (COMessage_Builder*) setWhcomp:(COWhenCompare) value;
- (COMessage_Builder*) clearWhcomp;

- (BOOL) hasPrice;
- (int32_t) price;
- (COMessage_Builder*) setPrice:(int32_t) value;
- (COMessage_Builder*) clearPrice;

- (BOOL) hasWhen2;
- (COWhen) when2;
- (COMessage_Builder*) setWhen2:(COWhen) value;
- (COMessage_Builder*) clearWhen2;

- (BOOL) hasWhcomp2;
- (COWhenCompare) whcomp2;
- (COMessage_Builder*) setWhcomp2:(COWhenCompare) value;
- (COMessage_Builder*) clearWhcomp2;

- (BOOL) hasQty;
- (int32_t) qty;
- (COMessage_Builder*) setQty:(int32_t) value;
- (COMessage_Builder*) clearQty;

- (BOOL) hasStatus;
- (COStatus) status;
- (COMessage_Builder*) setStatus:(COStatus) value;
- (COMessage_Builder*) clearStatus;

- (BOOL) hasTrend;
- (COTrend) trend;
- (COMessage_Builder*) setTrend:(COTrend) value;
- (COMessage_Builder*) clearTrend;

- (BOOL) hasDiffFromTop;
- (int32_t) diffFromTop;
- (COMessage_Builder*) setDiffFromTop:(int32_t) value;
- (COMessage_Builder*) clearDiffFromTop;

- (BOOL) hasSide;
- (int32_t) side;
- (COMessage_Builder*) setSide:(int32_t) value;
- (COMessage_Builder*) clearSide;

- (BOOL) hasTrigered;
- (BOOL) trigered;
- (COMessage_Builder*) setTrigered:(BOOL) value;
- (COMessage_Builder*) clearTrigered;

- (BOOL) hasTickPrice;
- (int32_t) tickPrice;
- (COMessage_Builder*) setTickPrice:(int32_t) value;
- (COMessage_Builder*) clearTickPrice;

- (BOOL) hasOwnerId;
- (NSString*) ownerId;
- (COMessage_Builder*) setOwnerId:(NSString*) value;
- (COMessage_Builder*) clearOwnerId;
@end

@interface IdxNewsMessage : PBGeneratedMessage {
@private
  BOOL hasMessageId_:1;
  BOOL hasSubject_:1;
  BOOL hasTitle_:1;
  BOOL hasContent_:1;
  int32_t messageId;
  NSString* subject;
  NSString* title;
  NSString* content;
}
- (BOOL) hasMessageId;
- (BOOL) hasSubject;
- (BOOL) hasTitle;
- (BOOL) hasContent;
@property (readonly) int32_t messageId;
@property (readonly, strong) NSString* subject;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* content;

+ (IdxNewsMessage*) defaultInstance;
- (IdxNewsMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxNewsMessage_Builder*) builder;
+ (IdxNewsMessage_Builder*) builder;
+ (IdxNewsMessage_Builder*) builderWithPrototype:(IdxNewsMessage*) prototype;
- (IdxNewsMessage_Builder*) toBuilder;

+ (IdxNewsMessage*) parseFromData:(NSData*) data;
+ (IdxNewsMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxNewsMessage*) parseFromInputStream:(NSInputStream*) input;
+ (IdxNewsMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxNewsMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxNewsMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxNewsMessage_Builder : PBGeneratedMessage_Builder {
@private
  IdxNewsMessage* result;
}

- (IdxNewsMessage*) defaultInstance;

- (IdxNewsMessage_Builder*) clear;
- (IdxNewsMessage_Builder*) clone;

- (IdxNewsMessage*) build;
- (IdxNewsMessage*) buildPartial;

- (IdxNewsMessage_Builder*) mergeFrom:(IdxNewsMessage*) other;
- (IdxNewsMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxNewsMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessageId;
- (int32_t) messageId;
- (IdxNewsMessage_Builder*) setMessageId:(int32_t) value;
- (IdxNewsMessage_Builder*) clearMessageId;

- (BOOL) hasSubject;
- (NSString*) subject;
- (IdxNewsMessage_Builder*) setSubject:(NSString*) value;
- (IdxNewsMessage_Builder*) clearSubject;

- (BOOL) hasTitle;
- (NSString*) title;
- (IdxNewsMessage_Builder*) setTitle:(NSString*) value;
- (IdxNewsMessage_Builder*) clearTitle;

- (BOOL) hasContent;
- (NSString*) content;
- (IdxNewsMessage_Builder*) setContent:(NSString*) value;
- (IdxNewsMessage_Builder*) clearContent;
@end

@interface IdxTradingStatus : PBGeneratedMessage {
@private
  BOOL hasStatus_:1;
  BOOL hasMessage_:1;
  NSString* status;
  NSString* message;
}
- (BOOL) hasStatus;
- (BOOL) hasMessage;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* message;

+ (IdxTradingStatus*) defaultInstance;
- (IdxTradingStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxTradingStatus_Builder*) builder;
+ (IdxTradingStatus_Builder*) builder;
+ (IdxTradingStatus_Builder*) builderWithPrototype:(IdxTradingStatus*) prototype;
- (IdxTradingStatus_Builder*) toBuilder;

+ (IdxTradingStatus*) parseFromData:(NSData*) data;
+ (IdxTradingStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxTradingStatus*) parseFromInputStream:(NSInputStream*) input;
+ (IdxTradingStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxTradingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxTradingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxTradingStatus_Builder : PBGeneratedMessage_Builder {
@private
  IdxTradingStatus* result;
}

- (IdxTradingStatus*) defaultInstance;

- (IdxTradingStatus_Builder*) clear;
- (IdxTradingStatus_Builder*) clone;

- (IdxTradingStatus*) build;
- (IdxTradingStatus*) buildPartial;

- (IdxTradingStatus_Builder*) mergeFrom:(IdxTradingStatus*) other;
- (IdxTradingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxTradingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (NSString*) status;
- (IdxTradingStatus_Builder*) setStatus:(NSString*) value;
- (IdxTradingStatus_Builder*) clearStatus;

- (BOOL) hasMessage;
- (NSString*) message;
- (IdxTradingStatus_Builder*) setMessage:(NSString*) value;
- (IdxTradingStatus_Builder*) clearMessage;
@end

@interface IdxSuspendReleaseBroker : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasStatus_:1;
  NSString* code;
  SuspendReleaseStatus status;
}
- (BOOL) hasCode;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* code;
@property (readonly) SuspendReleaseStatus status;

+ (IdxSuspendReleaseBroker*) defaultInstance;
- (IdxSuspendReleaseBroker*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxSuspendReleaseBroker_Builder*) builder;
+ (IdxSuspendReleaseBroker_Builder*) builder;
+ (IdxSuspendReleaseBroker_Builder*) builderWithPrototype:(IdxSuspendReleaseBroker*) prototype;
- (IdxSuspendReleaseBroker_Builder*) toBuilder;

+ (IdxSuspendReleaseBroker*) parseFromData:(NSData*) data;
+ (IdxSuspendReleaseBroker*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxSuspendReleaseBroker*) parseFromInputStream:(NSInputStream*) input;
+ (IdxSuspendReleaseBroker*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxSuspendReleaseBroker*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxSuspendReleaseBroker*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxSuspendReleaseBroker_Builder : PBGeneratedMessage_Builder {
@private
  IdxSuspendReleaseBroker* result;
}

- (IdxSuspendReleaseBroker*) defaultInstance;

- (IdxSuspendReleaseBroker_Builder*) clear;
- (IdxSuspendReleaseBroker_Builder*) clone;

- (IdxSuspendReleaseBroker*) build;
- (IdxSuspendReleaseBroker*) buildPartial;

- (IdxSuspendReleaseBroker_Builder*) mergeFrom:(IdxSuspendReleaseBroker*) other;
- (IdxSuspendReleaseBroker_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxSuspendReleaseBroker_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxSuspendReleaseBroker_Builder*) setCode:(NSString*) value;
- (IdxSuspendReleaseBroker_Builder*) clearCode;

- (BOOL) hasStatus;
- (SuspendReleaseStatus) status;
- (IdxSuspendReleaseBroker_Builder*) setStatus:(SuspendReleaseStatus) value;
- (IdxSuspendReleaseBroker_Builder*) clearStatus;
@end

@interface IdxSuspendReleaseStock : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasStatus_:1;
  BOOL hasBoard_:1;
  NSString* code;
  SuspendReleaseStatus status;
  Board board;
}
- (BOOL) hasCode;
- (BOOL) hasStatus;
- (BOOL) hasBoard;
@property (readonly, strong) NSString* code;
@property (readonly) SuspendReleaseStatus status;
@property (readonly) Board board;

+ (IdxSuspendReleaseStock*) defaultInstance;
- (IdxSuspendReleaseStock*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxSuspendReleaseStock_Builder*) builder;
+ (IdxSuspendReleaseStock_Builder*) builder;
+ (IdxSuspendReleaseStock_Builder*) builderWithPrototype:(IdxSuspendReleaseStock*) prototype;
- (IdxSuspendReleaseStock_Builder*) toBuilder;

+ (IdxSuspendReleaseStock*) parseFromData:(NSData*) data;
+ (IdxSuspendReleaseStock*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxSuspendReleaseStock*) parseFromInputStream:(NSInputStream*) input;
+ (IdxSuspendReleaseStock*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxSuspendReleaseStock*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxSuspendReleaseStock*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxSuspendReleaseStock_Builder : PBGeneratedMessage_Builder {
@private
  IdxSuspendReleaseStock* result;
}

- (IdxSuspendReleaseStock*) defaultInstance;

- (IdxSuspendReleaseStock_Builder*) clear;
- (IdxSuspendReleaseStock_Builder*) clone;

- (IdxSuspendReleaseStock*) build;
- (IdxSuspendReleaseStock*) buildPartial;

- (IdxSuspendReleaseStock_Builder*) mergeFrom:(IdxSuspendReleaseStock*) other;
- (IdxSuspendReleaseStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxSuspendReleaseStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxSuspendReleaseStock_Builder*) setCode:(NSString*) value;
- (IdxSuspendReleaseStock_Builder*) clearCode;

- (BOOL) hasStatus;
- (SuspendReleaseStatus) status;
- (IdxSuspendReleaseStock_Builder*) setStatus:(SuspendReleaseStatus) value;
- (IdxSuspendReleaseStock_Builder*) clearStatus;

- (BOOL) hasBoard;
- (Board) board;
- (IdxSuspendReleaseStock_Builder*) setBoard:(Board) value;
- (IdxSuspendReleaseStock_Builder*) clearBoard;
@end

@interface KiRegionalIndicesData : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasFullname_:1;
  BOOL hasMarket_:1;
  int32_t id;
  NSString* code;
  NSString* name;
  NSString* fullname;
  NSString* market;
}
- (BOOL) hasId;
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasFullname;
- (BOOL) hasMarket;
@property (readonly) int32_t id;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* fullname;
@property (readonly, strong) NSString* market;

+ (KiRegionalIndicesData*) defaultInstance;
- (KiRegionalIndicesData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiRegionalIndicesData_Builder*) builder;
+ (KiRegionalIndicesData_Builder*) builder;
+ (KiRegionalIndicesData_Builder*) builderWithPrototype:(KiRegionalIndicesData*) prototype;
- (KiRegionalIndicesData_Builder*) toBuilder;

+ (KiRegionalIndicesData*) parseFromData:(NSData*) data;
+ (KiRegionalIndicesData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRegionalIndicesData*) parseFromInputStream:(NSInputStream*) input;
+ (KiRegionalIndicesData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRegionalIndicesData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiRegionalIndicesData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiRegionalIndicesData_Builder : PBGeneratedMessage_Builder {
@private
  KiRegionalIndicesData* result;
}

- (KiRegionalIndicesData*) defaultInstance;

- (KiRegionalIndicesData_Builder*) clear;
- (KiRegionalIndicesData_Builder*) clone;

- (KiRegionalIndicesData*) build;
- (KiRegionalIndicesData*) buildPartial;

- (KiRegionalIndicesData_Builder*) mergeFrom:(KiRegionalIndicesData*) other;
- (KiRegionalIndicesData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiRegionalIndicesData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (KiRegionalIndicesData_Builder*) setId:(int32_t) value;
- (KiRegionalIndicesData_Builder*) clearId;

- (BOOL) hasCode;
- (NSString*) code;
- (KiRegionalIndicesData_Builder*) setCode:(NSString*) value;
- (KiRegionalIndicesData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (KiRegionalIndicesData_Builder*) setName:(NSString*) value;
- (KiRegionalIndicesData_Builder*) clearName;

- (BOOL) hasFullname;
- (NSString*) fullname;
- (KiRegionalIndicesData_Builder*) setFullname:(NSString*) value;
- (KiRegionalIndicesData_Builder*) clearFullname;

- (BOOL) hasMarket;
- (NSString*) market;
- (KiRegionalIndicesData_Builder*) setMarket:(NSString*) value;
- (KiRegionalIndicesData_Builder*) clearMarket;
@end

@interface KiRegionalIndices : PBGeneratedMessage {
@private
  BOOL hasChange_:1;
  BOOL hasPrevious_:1;
  BOOL hasSequence_:1;
  BOOL hasCodeId_:1;
  BOOL hasDate_:1;
  BOOL hasTime_:1;
  BOOL hasOhlc_:1;
  Float32 change;
  Float32 previous;
  int32_t sequence;
  int32_t codeId;
  int32_t date;
  int32_t time;
  OHLCFloat* ohlc;
}
- (BOOL) hasSequence;
- (BOOL) hasCodeId;
- (BOOL) hasChange;
- (BOOL) hasPrevious;
- (BOOL) hasOhlc;
- (BOOL) hasDate;
- (BOOL) hasTime;
@property (readonly) int32_t sequence;
@property (readonly) int32_t codeId;
@property (readonly) Float32 change;
@property (readonly) Float32 previous;
@property (readonly, strong) OHLCFloat* ohlc;
@property (readonly) int32_t date;
@property (readonly) int32_t time;

+ (KiRegionalIndices*) defaultInstance;
- (KiRegionalIndices*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiRegionalIndices_Builder*) builder;
+ (KiRegionalIndices_Builder*) builder;
+ (KiRegionalIndices_Builder*) builderWithPrototype:(KiRegionalIndices*) prototype;
- (KiRegionalIndices_Builder*) toBuilder;

+ (KiRegionalIndices*) parseFromData:(NSData*) data;
+ (KiRegionalIndices*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRegionalIndices*) parseFromInputStream:(NSInputStream*) input;
+ (KiRegionalIndices*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiRegionalIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiRegionalIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiRegionalIndices_Builder : PBGeneratedMessage_Builder {
@private
  KiRegionalIndices* result;
}

- (KiRegionalIndices*) defaultInstance;

- (KiRegionalIndices_Builder*) clear;
- (KiRegionalIndices_Builder*) clone;

- (KiRegionalIndices*) build;
- (KiRegionalIndices*) buildPartial;

- (KiRegionalIndices_Builder*) mergeFrom:(KiRegionalIndices*) other;
- (KiRegionalIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiRegionalIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (KiRegionalIndices_Builder*) setSequence:(int32_t) value;
- (KiRegionalIndices_Builder*) clearSequence;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiRegionalIndices_Builder*) setCodeId:(int32_t) value;
- (KiRegionalIndices_Builder*) clearCodeId;

- (BOOL) hasChange;
- (Float32) change;
- (KiRegionalIndices_Builder*) setChange:(Float32) value;
- (KiRegionalIndices_Builder*) clearChange;

- (BOOL) hasPrevious;
- (Float32) previous;
- (KiRegionalIndices_Builder*) setPrevious:(Float32) value;
- (KiRegionalIndices_Builder*) clearPrevious;

- (BOOL) hasOhlc;
- (OHLCFloat*) ohlc;
- (KiRegionalIndices_Builder*) setOhlc:(OHLCFloat*) value;
- (KiRegionalIndices_Builder*) setOhlcBuilder:(OHLCFloat_Builder*) builderForValue;
- (KiRegionalIndices_Builder*) mergeOhlc:(OHLCFloat*) value;
- (KiRegionalIndices_Builder*) clearOhlc;

- (BOOL) hasDate;
- (int32_t) date;
- (KiRegionalIndices_Builder*) setDate:(int32_t) value;
- (KiRegionalIndices_Builder*) clearDate;

- (BOOL) hasTime;
- (int32_t) time;
- (KiRegionalIndices_Builder*) setTime:(int32_t) value;
- (KiRegionalIndices_Builder*) clearTime;
@end

@interface KiFuture : PBGeneratedMessage {
@private
  BOOL hasPrevious_:1;
  BOOL hasMid_:1;
  BOOL hasBid_:1;
  BOOL hasOffer_:1;
  BOOL hasVol_:1;
  BOOL hasSequence_:1;
  BOOL hasCodeId_:1;
  BOOL hasDate_:1;
  BOOL hasTime_:1;
  BOOL hasOhlc_:1;
  Float32 previous;
  Float32 mid;
  Float32 bid;
  Float32 offer;
  Float32 vol;
  int32_t sequence;
  int32_t codeId;
  int32_t date;
  int32_t time;
  OHLCFloat* ohlc;
}
- (BOOL) hasSequence;
- (BOOL) hasCodeId;
- (BOOL) hasPrevious;
- (BOOL) hasOhlc;
- (BOOL) hasDate;
- (BOOL) hasTime;
- (BOOL) hasMid;
- (BOOL) hasBid;
- (BOOL) hasOffer;
- (BOOL) hasVol;
@property (readonly) int32_t sequence;
@property (readonly) int32_t codeId;
@property (readonly) Float32 previous;
@property (readonly, strong) OHLCFloat* ohlc;
@property (readonly) int32_t date;
@property (readonly) int32_t time;
@property (readonly) Float32 mid;
@property (readonly) Float32 bid;
@property (readonly) Float32 offer;
@property (readonly) Float32 vol;

+ (KiFuture*) defaultInstance;
- (KiFuture*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiFuture_Builder*) builder;
+ (KiFuture_Builder*) builder;
+ (KiFuture_Builder*) builderWithPrototype:(KiFuture*) prototype;
- (KiFuture_Builder*) toBuilder;

+ (KiFuture*) parseFromData:(NSData*) data;
+ (KiFuture*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiFuture*) parseFromInputStream:(NSInputStream*) input;
+ (KiFuture*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiFuture*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiFuture*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiFuture_Builder : PBGeneratedMessage_Builder {
@private
  KiFuture* result;
}

- (KiFuture*) defaultInstance;

- (KiFuture_Builder*) clear;
- (KiFuture_Builder*) clone;

- (KiFuture*) build;
- (KiFuture*) buildPartial;

- (KiFuture_Builder*) mergeFrom:(KiFuture*) other;
- (KiFuture_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiFuture_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (KiFuture_Builder*) setSequence:(int32_t) value;
- (KiFuture_Builder*) clearSequence;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiFuture_Builder*) setCodeId:(int32_t) value;
- (KiFuture_Builder*) clearCodeId;

- (BOOL) hasPrevious;
- (Float32) previous;
- (KiFuture_Builder*) setPrevious:(Float32) value;
- (KiFuture_Builder*) clearPrevious;

- (BOOL) hasOhlc;
- (OHLCFloat*) ohlc;
- (KiFuture_Builder*) setOhlc:(OHLCFloat*) value;
- (KiFuture_Builder*) setOhlcBuilder:(OHLCFloat_Builder*) builderForValue;
- (KiFuture_Builder*) mergeOhlc:(OHLCFloat*) value;
- (KiFuture_Builder*) clearOhlc;

- (BOOL) hasDate;
- (int32_t) date;
- (KiFuture_Builder*) setDate:(int32_t) value;
- (KiFuture_Builder*) clearDate;

- (BOOL) hasTime;
- (int32_t) time;
- (KiFuture_Builder*) setTime:(int32_t) value;
- (KiFuture_Builder*) clearTime;

- (BOOL) hasMid;
- (Float32) mid;
- (KiFuture_Builder*) setMid:(Float32) value;
- (KiFuture_Builder*) clearMid;

- (BOOL) hasBid;
- (Float32) bid;
- (KiFuture_Builder*) setBid:(Float32) value;
- (KiFuture_Builder*) clearBid;

- (BOOL) hasOffer;
- (Float32) offer;
- (KiFuture_Builder*) setOffer:(Float32) value;
- (KiFuture_Builder*) clearOffer;

- (BOOL) hasVol;
- (Float32) vol;
- (KiFuture_Builder*) setVol:(Float32) value;
- (KiFuture_Builder*) clearVol;
@end

@interface KiComodity : PBGeneratedMessage {
@private
  BOOL hasPrevious_:1;
  BOOL hasMid_:1;
  BOOL hasBid_:1;
  BOOL hasOffer_:1;
  BOOL hasVol_:1;
  BOOL hasSequence_:1;
  BOOL hasCodeId_:1;
  BOOL hasDate_:1;
  BOOL hasTime_:1;
  BOOL hasOhlc_:1;
  Float32 previous;
  Float32 mid;
  Float32 bid;
  Float32 offer;
  Float32 vol;
  int32_t sequence;
  int32_t codeId;
  int32_t date;
  int32_t time;
  OHLCFloat* ohlc;
}
- (BOOL) hasSequence;
- (BOOL) hasCodeId;
- (BOOL) hasPrevious;
- (BOOL) hasOhlc;
- (BOOL) hasDate;
- (BOOL) hasTime;
- (BOOL) hasMid;
- (BOOL) hasBid;
- (BOOL) hasOffer;
- (BOOL) hasVol;
@property (readonly) int32_t sequence;
@property (readonly) int32_t codeId;
@property (readonly) Float32 previous;
@property (readonly, strong) OHLCFloat* ohlc;
@property (readonly) int32_t date;
@property (readonly) int32_t time;
@property (readonly) Float32 mid;
@property (readonly) Float32 bid;
@property (readonly) Float32 offer;
@property (readonly) Float32 vol;

+ (KiComodity*) defaultInstance;
- (KiComodity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiComodity_Builder*) builder;
+ (KiComodity_Builder*) builder;
+ (KiComodity_Builder*) builderWithPrototype:(KiComodity*) prototype;
- (KiComodity_Builder*) toBuilder;

+ (KiComodity*) parseFromData:(NSData*) data;
+ (KiComodity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiComodity*) parseFromInputStream:(NSInputStream*) input;
+ (KiComodity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiComodity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiComodity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiComodity_Builder : PBGeneratedMessage_Builder {
@private
  KiComodity* result;
}

- (KiComodity*) defaultInstance;

- (KiComodity_Builder*) clear;
- (KiComodity_Builder*) clone;

- (KiComodity*) build;
- (KiComodity*) buildPartial;

- (KiComodity_Builder*) mergeFrom:(KiComodity*) other;
- (KiComodity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiComodity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (KiComodity_Builder*) setSequence:(int32_t) value;
- (KiComodity_Builder*) clearSequence;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiComodity_Builder*) setCodeId:(int32_t) value;
- (KiComodity_Builder*) clearCodeId;

- (BOOL) hasPrevious;
- (Float32) previous;
- (KiComodity_Builder*) setPrevious:(Float32) value;
- (KiComodity_Builder*) clearPrevious;

- (BOOL) hasOhlc;
- (OHLCFloat*) ohlc;
- (KiComodity_Builder*) setOhlc:(OHLCFloat*) value;
- (KiComodity_Builder*) setOhlcBuilder:(OHLCFloat_Builder*) builderForValue;
- (KiComodity_Builder*) mergeOhlc:(OHLCFloat*) value;
- (KiComodity_Builder*) clearOhlc;

- (BOOL) hasDate;
- (int32_t) date;
- (KiComodity_Builder*) setDate:(int32_t) value;
- (KiComodity_Builder*) clearDate;

- (BOOL) hasTime;
- (int32_t) time;
- (KiComodity_Builder*) setTime:(int32_t) value;
- (KiComodity_Builder*) clearTime;

- (BOOL) hasMid;
- (Float32) mid;
- (KiComodity_Builder*) setMid:(Float32) value;
- (KiComodity_Builder*) clearMid;

- (BOOL) hasBid;
- (Float32) bid;
- (KiComodity_Builder*) setBid:(Float32) value;
- (KiComodity_Builder*) clearBid;

- (BOOL) hasOffer;
- (Float32) offer;
- (KiComodity_Builder*) setOffer:(Float32) value;
- (KiComodity_Builder*) clearOffer;

- (BOOL) hasVol;
- (Float32) vol;
- (KiComodity_Builder*) setVol:(Float32) value;
- (KiComodity_Builder*) clearVol;
@end

@interface KiCurrencyData : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  int32_t id;
  NSString* code;
  NSString* name;
}
- (BOOL) hasId;
- (BOOL) hasCode;
- (BOOL) hasName;
@property (readonly) int32_t id;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;

+ (KiCurrencyData*) defaultInstance;
- (KiCurrencyData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiCurrencyData_Builder*) builder;
+ (KiCurrencyData_Builder*) builder;
+ (KiCurrencyData_Builder*) builderWithPrototype:(KiCurrencyData*) prototype;
- (KiCurrencyData_Builder*) toBuilder;

+ (KiCurrencyData*) parseFromData:(NSData*) data;
+ (KiCurrencyData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiCurrencyData*) parseFromInputStream:(NSInputStream*) input;
+ (KiCurrencyData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiCurrencyData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiCurrencyData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiCurrencyData_Builder : PBGeneratedMessage_Builder {
@private
  KiCurrencyData* result;
}

- (KiCurrencyData*) defaultInstance;

- (KiCurrencyData_Builder*) clear;
- (KiCurrencyData_Builder*) clone;

- (KiCurrencyData*) build;
- (KiCurrencyData*) buildPartial;

- (KiCurrencyData_Builder*) mergeFrom:(KiCurrencyData*) other;
- (KiCurrencyData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiCurrencyData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (KiCurrencyData_Builder*) setId:(int32_t) value;
- (KiCurrencyData_Builder*) clearId;

- (BOOL) hasCode;
- (NSString*) code;
- (KiCurrencyData_Builder*) setCode:(NSString*) value;
- (KiCurrencyData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (KiCurrencyData_Builder*) setName:(NSString*) value;
- (KiCurrencyData_Builder*) clearName;
@end

@interface KiCurrency : PBGeneratedMessage {
@private
  BOOL hasOffer_:1;
  BOOL hasPrice_:1;
  BOOL hasChange_:1;
  BOOL hasRange1_:1;
  BOOL hasRange2_:1;
  BOOL hasLast_:1;
  BOOL hasOpen_:1;
  BOOL hasHigh_:1;
  BOOL hasLow_:1;
  BOOL hasPrev_:1;
  BOOL hasMid_:1;
  BOOL hasBid_:1;
  BOOL hasTime_:1;
  BOOL hasDate_:1;
  BOOL hasCurrAgainst_:1;
  BOOL hasCurrCode_:1;
  BOOL hasSequence_:1;
  Float32 offer;
  Float32 price;
  Float32 change;
  Float32 range1;
  Float32 range2;
  Float32 last;
  Float32 open;
  Float32 high;
  Float32 low;
  Float32 prev;
  Float32 mid;
  Float32 bid;
  int32_t time;
  int32_t date;
  int32_t currAgainst;
  int32_t currCode;
  int32_t sequence;
}
- (BOOL) hasSequence;
- (BOOL) hasCurrCode;
- (BOOL) hasCurrAgainst;
- (BOOL) hasPrice;
- (BOOL) hasChange;
- (BOOL) hasRange1;
- (BOOL) hasRange2;
- (BOOL) hasLast;
- (BOOL) hasOpen;
- (BOOL) hasHigh;
- (BOOL) hasLow;
- (BOOL) hasPrev;
- (BOOL) hasMid;
- (BOOL) hasBid;
- (BOOL) hasOffer;
- (BOOL) hasDate;
- (BOOL) hasTime;
@property (readonly) int32_t sequence;
@property (readonly) int32_t currCode;
@property (readonly) int32_t currAgainst;
@property (readonly) Float32 price;
@property (readonly) Float32 change;
@property (readonly) Float32 range1;
@property (readonly) Float32 range2;
@property (readonly) Float32 last;
@property (readonly) Float32 open;
@property (readonly) Float32 high;
@property (readonly) Float32 low;
@property (readonly) Float32 prev;
@property (readonly) Float32 mid;
@property (readonly) Float32 bid;
@property (readonly) Float32 offer;
@property (readonly) int32_t date;
@property (readonly) int32_t time;

+ (KiCurrency*) defaultInstance;
- (KiCurrency*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiCurrency_Builder*) builder;
+ (KiCurrency_Builder*) builder;
+ (KiCurrency_Builder*) builderWithPrototype:(KiCurrency*) prototype;
- (KiCurrency_Builder*) toBuilder;

+ (KiCurrency*) parseFromData:(NSData*) data;
+ (KiCurrency*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiCurrency*) parseFromInputStream:(NSInputStream*) input;
+ (KiCurrency*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiCurrency*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiCurrency*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiCurrency_Builder : PBGeneratedMessage_Builder {
@private
  KiCurrency* result;
}

- (KiCurrency*) defaultInstance;

- (KiCurrency_Builder*) clear;
- (KiCurrency_Builder*) clone;

- (KiCurrency*) build;
- (KiCurrency*) buildPartial;

- (KiCurrency_Builder*) mergeFrom:(KiCurrency*) other;
- (KiCurrency_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiCurrency_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (KiCurrency_Builder*) setSequence:(int32_t) value;
- (KiCurrency_Builder*) clearSequence;

- (BOOL) hasCurrCode;
- (int32_t) currCode;
- (KiCurrency_Builder*) setCurrCode:(int32_t) value;
- (KiCurrency_Builder*) clearCurrCode;

- (BOOL) hasCurrAgainst;
- (int32_t) currAgainst;
- (KiCurrency_Builder*) setCurrAgainst:(int32_t) value;
- (KiCurrency_Builder*) clearCurrAgainst;

- (BOOL) hasPrice;
- (Float32) price;
- (KiCurrency_Builder*) setPrice:(Float32) value;
- (KiCurrency_Builder*) clearPrice;

- (BOOL) hasChange;
- (Float32) change;
- (KiCurrency_Builder*) setChange:(Float32) value;
- (KiCurrency_Builder*) clearChange;

- (BOOL) hasRange1;
- (Float32) range1;
- (KiCurrency_Builder*) setRange1:(Float32) value;
- (KiCurrency_Builder*) clearRange1;

- (BOOL) hasRange2;
- (Float32) range2;
- (KiCurrency_Builder*) setRange2:(Float32) value;
- (KiCurrency_Builder*) clearRange2;

- (BOOL) hasLast;
- (Float32) last;
- (KiCurrency_Builder*) setLast:(Float32) value;
- (KiCurrency_Builder*) clearLast;

- (BOOL) hasOpen;
- (Float32) open;
- (KiCurrency_Builder*) setOpen:(Float32) value;
- (KiCurrency_Builder*) clearOpen;

- (BOOL) hasHigh;
- (Float32) high;
- (KiCurrency_Builder*) setHigh:(Float32) value;
- (KiCurrency_Builder*) clearHigh;

- (BOOL) hasLow;
- (Float32) low;
- (KiCurrency_Builder*) setLow:(Float32) value;
- (KiCurrency_Builder*) clearLow;

- (BOOL) hasPrev;
- (Float32) prev;
- (KiCurrency_Builder*) setPrev:(Float32) value;
- (KiCurrency_Builder*) clearPrev;

- (BOOL) hasMid;
- (Float32) mid;
- (KiCurrency_Builder*) setMid:(Float32) value;
- (KiCurrency_Builder*) clearMid;

- (BOOL) hasBid;
- (Float32) bid;
- (KiCurrency_Builder*) setBid:(Float32) value;
- (KiCurrency_Builder*) clearBid;

- (BOOL) hasOffer;
- (Float32) offer;
- (KiCurrency_Builder*) setOffer:(Float32) value;
- (KiCurrency_Builder*) clearOffer;

- (BOOL) hasDate;
- (int32_t) date;
- (KiCurrency_Builder*) setDate:(int32_t) value;
- (KiCurrency_Builder*) clearDate;

- (BOOL) hasTime;
- (int32_t) time;
- (KiCurrency_Builder*) setTime:(int32_t) value;
- (KiCurrency_Builder*) clearTime;
@end

@interface IdxContractData : PBGeneratedMessage {
@private
  BOOL hasInitialOfPremium_:1;
  BOOL hasOptionStrike_:1;
  BOOL hasMatDate_:1;
  BOOL hasContractSize_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasContractType_:1;
  BOOL hasUnderlying_:1;
  BOOL hasOptionVerb_:1;
  BOOL hasRemarks_:1;
  BOOL hasRemarks2_:1;
  BOOL hasContractStatus_:1;
  Float32 initialOfPremium;
  Float32 optionStrike;
  int64_t matDate;
  int32_t contractSize;
  NSString* code;
  NSString* name;
  NSString* contractType;
  NSString* underlying;
  NSString* optionVerb;
  NSString* remarks;
  NSString* remarks2;
  Status contractStatus;
}
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasContractStatus;
- (BOOL) hasContractType;
- (BOOL) hasInitialOfPremium;
- (BOOL) hasContractSize;
- (BOOL) hasUnderlying;
- (BOOL) hasOptionStrike;
- (BOOL) hasOptionVerb;
- (BOOL) hasMatDate;
- (BOOL) hasRemarks;
- (BOOL) hasRemarks2;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) Status contractStatus;
@property (readonly, strong) NSString* contractType;
@property (readonly) Float32 initialOfPremium;
@property (readonly) int32_t contractSize;
@property (readonly, strong) NSString* underlying;
@property (readonly) Float32 optionStrike;
@property (readonly, strong) NSString* optionVerb;
@property (readonly) int64_t matDate;
@property (readonly, strong) NSString* remarks;
@property (readonly, strong) NSString* remarks2;

+ (IdxContractData*) defaultInstance;
- (IdxContractData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxContractData_Builder*) builder;
+ (IdxContractData_Builder*) builder;
+ (IdxContractData_Builder*) builderWithPrototype:(IdxContractData*) prototype;
- (IdxContractData_Builder*) toBuilder;

+ (IdxContractData*) parseFromData:(NSData*) data;
+ (IdxContractData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxContractData*) parseFromInputStream:(NSInputStream*) input;
+ (IdxContractData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxContractData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxContractData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxContractData_Builder : PBGeneratedMessage_Builder {
@private
  IdxContractData* result;
}

- (IdxContractData*) defaultInstance;

- (IdxContractData_Builder*) clear;
- (IdxContractData_Builder*) clone;

- (IdxContractData*) build;
- (IdxContractData*) buildPartial;

- (IdxContractData_Builder*) mergeFrom:(IdxContractData*) other;
- (IdxContractData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxContractData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxContractData_Builder*) setCode:(NSString*) value;
- (IdxContractData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (IdxContractData_Builder*) setName:(NSString*) value;
- (IdxContractData_Builder*) clearName;

- (BOOL) hasContractStatus;
- (Status) contractStatus;
- (IdxContractData_Builder*) setContractStatus:(Status) value;
- (IdxContractData_Builder*) clearContractStatus;

- (BOOL) hasContractType;
- (NSString*) contractType;
- (IdxContractData_Builder*) setContractType:(NSString*) value;
- (IdxContractData_Builder*) clearContractType;

- (BOOL) hasInitialOfPremium;
- (Float32) initialOfPremium;
- (IdxContractData_Builder*) setInitialOfPremium:(Float32) value;
- (IdxContractData_Builder*) clearInitialOfPremium;

- (BOOL) hasContractSize;
- (int32_t) contractSize;
- (IdxContractData_Builder*) setContractSize:(int32_t) value;
- (IdxContractData_Builder*) clearContractSize;

- (BOOL) hasUnderlying;
- (NSString*) underlying;
- (IdxContractData_Builder*) setUnderlying:(NSString*) value;
- (IdxContractData_Builder*) clearUnderlying;

- (BOOL) hasOptionStrike;
- (Float32) optionStrike;
- (IdxContractData_Builder*) setOptionStrike:(Float32) value;
- (IdxContractData_Builder*) clearOptionStrike;

- (BOOL) hasOptionVerb;
- (NSString*) optionVerb;
- (IdxContractData_Builder*) setOptionVerb:(NSString*) value;
- (IdxContractData_Builder*) clearOptionVerb;

- (BOOL) hasMatDate;
- (int64_t) matDate;
- (IdxContractData_Builder*) setMatDate:(int64_t) value;
- (IdxContractData_Builder*) clearMatDate;

- (BOOL) hasRemarks;
- (NSString*) remarks;
- (IdxContractData_Builder*) setRemarks:(NSString*) value;
- (IdxContractData_Builder*) clearRemarks;

- (BOOL) hasRemarks2;
- (NSString*) remarks2;
- (IdxContractData_Builder*) setRemarks2:(NSString*) value;
- (IdxContractData_Builder*) clearRemarks2;
@end

@interface IdxStockData : PBGeneratedMessage {
@private
  BOOL hasIpoPrice_:1;
  BOOL hasBasePrice_:1;
  BOOL hasListedShare_:1;
  BOOL hasTradeableShare_:1;
  BOOL hasSharePerLot_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasSubSector_:1;
  BOOL hasRemarks_:1;
  BOOL hasRemarks2_:1;
  BOOL hasSecurityStatus_:1;
  BOOL hasSecurityType_:1;
  Float32 ipoPrice;
  Float32 basePrice;
  int64_t listedShare;
  int64_t tradeableShare;
  int32_t sharePerLot;
  NSString* code;
  NSString* name;
  NSString* subSector;
  NSString* remarks;
  NSString* remarks2;
  Status securityStatus;
  SecurityType securityType;
}
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasSecurityStatus;
- (BOOL) hasSecurityType;
- (BOOL) hasSubSector;
- (BOOL) hasIpoPrice;
- (BOOL) hasBasePrice;
- (BOOL) hasListedShare;
- (BOOL) hasTradeableShare;
- (BOOL) hasSharePerLot;
- (BOOL) hasRemarks;
- (BOOL) hasRemarks2;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) Status securityStatus;
@property (readonly) SecurityType securityType;
@property (readonly, strong) NSString* subSector;
@property (readonly) Float32 ipoPrice;
@property (readonly) Float32 basePrice;
@property (readonly) int64_t listedShare;
@property (readonly) int64_t tradeableShare;
@property (readonly) int32_t sharePerLot;
@property (readonly, strong) NSString* remarks;
@property (readonly, strong) NSString* remarks2;

+ (IdxStockData*) defaultInstance;
- (IdxStockData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxStockData_Builder*) builder;
+ (IdxStockData_Builder*) builder;
+ (IdxStockData_Builder*) builderWithPrototype:(IdxStockData*) prototype;
- (IdxStockData_Builder*) toBuilder;

+ (IdxStockData*) parseFromData:(NSData*) data;
+ (IdxStockData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxStockData*) parseFromInputStream:(NSInputStream*) input;
+ (IdxStockData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxStockData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxStockData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxStockData_Builder : PBGeneratedMessage_Builder {
@private
  IdxStockData* result;
}

- (IdxStockData*) defaultInstance;

- (IdxStockData_Builder*) clear;
- (IdxStockData_Builder*) clone;

- (IdxStockData*) build;
- (IdxStockData*) buildPartial;

- (IdxStockData_Builder*) mergeFrom:(IdxStockData*) other;
- (IdxStockData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxStockData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxStockData_Builder*) setCode:(NSString*) value;
- (IdxStockData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (IdxStockData_Builder*) setName:(NSString*) value;
- (IdxStockData_Builder*) clearName;

- (BOOL) hasSecurityStatus;
- (Status) securityStatus;
- (IdxStockData_Builder*) setSecurityStatus:(Status) value;
- (IdxStockData_Builder*) clearSecurityStatus;

- (BOOL) hasSecurityType;
- (SecurityType) securityType;
- (IdxStockData_Builder*) setSecurityType:(SecurityType) value;
- (IdxStockData_Builder*) clearSecurityType;

- (BOOL) hasSubSector;
- (NSString*) subSector;
- (IdxStockData_Builder*) setSubSector:(NSString*) value;
- (IdxStockData_Builder*) clearSubSector;

- (BOOL) hasIpoPrice;
- (Float32) ipoPrice;
- (IdxStockData_Builder*) setIpoPrice:(Float32) value;
- (IdxStockData_Builder*) clearIpoPrice;

- (BOOL) hasBasePrice;
- (Float32) basePrice;
- (IdxStockData_Builder*) setBasePrice:(Float32) value;
- (IdxStockData_Builder*) clearBasePrice;

- (BOOL) hasListedShare;
- (int64_t) listedShare;
- (IdxStockData_Builder*) setListedShare:(int64_t) value;
- (IdxStockData_Builder*) clearListedShare;

- (BOOL) hasTradeableShare;
- (int64_t) tradeableShare;
- (IdxStockData_Builder*) setTradeableShare:(int64_t) value;
- (IdxStockData_Builder*) clearTradeableShare;

- (BOOL) hasSharePerLot;
- (int32_t) sharePerLot;
- (IdxStockData_Builder*) setSharePerLot:(int32_t) value;
- (IdxStockData_Builder*) clearSharePerLot;

- (BOOL) hasRemarks;
- (NSString*) remarks;
- (IdxStockData_Builder*) setRemarks:(NSString*) value;
- (IdxStockData_Builder*) clearRemarks;

- (BOOL) hasRemarks2;
- (NSString*) remarks2;
- (IdxStockData_Builder*) setRemarks2:(NSString*) value;
- (IdxStockData_Builder*) clearRemarks2;
@end

@interface KiStockData : PBGeneratedMessage {
@private
  BOOL hasIpoPrice_:1;
  BOOL hasShTotalTarget_:1;
  BOOL hasId_:1;
  BOOL hasSubSector_:1;
  BOOL hasClientType_:1;
  BOOL hasShEnable_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasBoard_:1;
  BOOL hasColor_:1;
  BOOL hasType_:1;
  BOOL hasStatus_:1;
  BOOL hasSecurityType_:1;
  Float32 ipoPrice;
  Float32 shTotalTarget;
  int32_t id;
  int32_t subSector;
  int32_t clientType;
  int32_t shEnable;
  NSString* code;
  NSString* name;
  NSString* board;
  NSString* color;
  NSString* type;
  Status status;
  SecurityType securityType;
}
- (BOOL) hasId;
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasStatus;
- (BOOL) hasSubSector;
- (BOOL) hasClientType;
- (BOOL) hasBoard;
- (BOOL) hasColor;
- (BOOL) hasIpoPrice;
- (BOOL) hasSecurityType;
- (BOOL) hasShEnable;
- (BOOL) hasShTotalTarget;
- (BOOL) hasType;
@property (readonly) int32_t id;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) Status status;
@property (readonly) int32_t subSector;
@property (readonly) int32_t clientType;
@property (readonly, strong) NSString* board;
@property (readonly, strong) NSString* color;
@property (readonly) Float32 ipoPrice;
@property (readonly) SecurityType securityType;
@property (readonly) int32_t shEnable;
@property (readonly) Float32 shTotalTarget;
@property (readonly, strong) NSString* type;

+ (KiStockData*) defaultInstance;
- (KiStockData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiStockData_Builder*) builder;
+ (KiStockData_Builder*) builder;
+ (KiStockData_Builder*) builderWithPrototype:(KiStockData*) prototype;
- (KiStockData_Builder*) toBuilder;

+ (KiStockData*) parseFromData:(NSData*) data;
+ (KiStockData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiStockData*) parseFromInputStream:(NSInputStream*) input;
+ (KiStockData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiStockData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiStockData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiStockData_Builder : PBGeneratedMessage_Builder {
@private
  KiStockData* result;
}

- (KiStockData*) defaultInstance;

- (KiStockData_Builder*) clear;
- (KiStockData_Builder*) clone;

- (KiStockData*) build;
- (KiStockData*) buildPartial;

- (KiStockData_Builder*) mergeFrom:(KiStockData*) other;
- (KiStockData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiStockData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (KiStockData_Builder*) setId:(int32_t) value;
- (KiStockData_Builder*) clearId;

- (BOOL) hasCode;
- (NSString*) code;
- (KiStockData_Builder*) setCode:(NSString*) value;
- (KiStockData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (KiStockData_Builder*) setName:(NSString*) value;
- (KiStockData_Builder*) clearName;

- (BOOL) hasStatus;
- (Status) status;
- (KiStockData_Builder*) setStatus:(Status) value;
- (KiStockData_Builder*) clearStatus;

- (BOOL) hasSubSector;
- (int32_t) subSector;
- (KiStockData_Builder*) setSubSector:(int32_t) value;
- (KiStockData_Builder*) clearSubSector;

- (BOOL) hasClientType;
- (int32_t) clientType;
- (KiStockData_Builder*) setClientType:(int32_t) value;
- (KiStockData_Builder*) clearClientType;

- (BOOL) hasBoard;
- (NSString*) board;
- (KiStockData_Builder*) setBoard:(NSString*) value;
- (KiStockData_Builder*) clearBoard;

- (BOOL) hasColor;
- (NSString*) color;
- (KiStockData_Builder*) setColor:(NSString*) value;
- (KiStockData_Builder*) clearColor;

- (BOOL) hasIpoPrice;
- (Float32) ipoPrice;
- (KiStockData_Builder*) setIpoPrice:(Float32) value;
- (KiStockData_Builder*) clearIpoPrice;

- (BOOL) hasSecurityType;
- (SecurityType) securityType;
- (KiStockData_Builder*) setSecurityType:(SecurityType) value;
- (KiStockData_Builder*) clearSecurityType;

- (BOOL) hasShEnable;
- (int32_t) shEnable;
- (KiStockData_Builder*) setShEnable:(int32_t) value;
- (KiStockData_Builder*) clearShEnable;

- (BOOL) hasShTotalTarget;
- (Float32) shTotalTarget;
- (KiStockData_Builder*) setShTotalTarget:(Float32) value;
- (KiStockData_Builder*) clearShTotalTarget;

- (BOOL) hasType;
- (NSString*) type;
- (KiStockData_Builder*) setType:(NSString*) value;
- (KiStockData_Builder*) clearType;
@end

@interface IdxContractSummary : PBGeneratedMessage {
@private
  BOOL hasAvgPrice_:1;
  BOOL hasSettlementPrice_:1;
  BOOL hasRefferencePrice_:1;
  BOOL hasSequence_:1;
  BOOL hasCode_:1;
  BOOL hasContractSummary_:1;
  BOOL hasSecboardState_:1;
  Float32 avgPrice;
  Float32 settlementPrice;
  Float32 refferencePrice;
  int32_t sequence;
  NSString* code;
  StockSummary* contractSummary;
  Status secboardState;
}
- (BOOL) hasCode;
- (BOOL) hasContractSummary;
- (BOOL) hasSequence;
- (BOOL) hasAvgPrice;
- (BOOL) hasSecboardState;
- (BOOL) hasSettlementPrice;
- (BOOL) hasRefferencePrice;
@property (readonly, strong) NSString* code;
@property (readonly, strong) StockSummary* contractSummary;
@property (readonly) int32_t sequence;
@property (readonly) Float32 avgPrice;
@property (readonly) Status secboardState;
@property (readonly) Float32 settlementPrice;
@property (readonly) Float32 refferencePrice;

+ (IdxContractSummary*) defaultInstance;
- (IdxContractSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxContractSummary_Builder*) builder;
+ (IdxContractSummary_Builder*) builder;
+ (IdxContractSummary_Builder*) builderWithPrototype:(IdxContractSummary*) prototype;
- (IdxContractSummary_Builder*) toBuilder;

+ (IdxContractSummary*) parseFromData:(NSData*) data;
+ (IdxContractSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxContractSummary*) parseFromInputStream:(NSInputStream*) input;
+ (IdxContractSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxContractSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxContractSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxContractSummary_Builder : PBGeneratedMessage_Builder {
@private
  IdxContractSummary* result;
}

- (IdxContractSummary*) defaultInstance;

- (IdxContractSummary_Builder*) clear;
- (IdxContractSummary_Builder*) clone;

- (IdxContractSummary*) build;
- (IdxContractSummary*) buildPartial;

- (IdxContractSummary_Builder*) mergeFrom:(IdxContractSummary*) other;
- (IdxContractSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxContractSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxContractSummary_Builder*) setCode:(NSString*) value;
- (IdxContractSummary_Builder*) clearCode;

- (BOOL) hasContractSummary;
- (StockSummary*) contractSummary;
- (IdxContractSummary_Builder*) setContractSummary:(StockSummary*) value;
- (IdxContractSummary_Builder*) setContractSummaryBuilder:(StockSummary_Builder*) builderForValue;
- (IdxContractSummary_Builder*) mergeContractSummary:(StockSummary*) value;
- (IdxContractSummary_Builder*) clearContractSummary;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (IdxContractSummary_Builder*) setSequence:(int32_t) value;
- (IdxContractSummary_Builder*) clearSequence;

- (BOOL) hasAvgPrice;
- (Float32) avgPrice;
- (IdxContractSummary_Builder*) setAvgPrice:(Float32) value;
- (IdxContractSummary_Builder*) clearAvgPrice;

- (BOOL) hasSecboardState;
- (Status) secboardState;
- (IdxContractSummary_Builder*) setSecboardState:(Status) value;
- (IdxContractSummary_Builder*) clearSecboardState;

- (BOOL) hasSettlementPrice;
- (Float32) settlementPrice;
- (IdxContractSummary_Builder*) setSettlementPrice:(Float32) value;
- (IdxContractSummary_Builder*) clearSettlementPrice;

- (BOOL) hasRefferencePrice;
- (Float32) refferencePrice;
- (IdxContractSummary_Builder*) setRefferencePrice:(Float32) value;
- (IdxContractSummary_Builder*) clearRefferencePrice;
@end

@interface IdxStockSummary : PBGeneratedMessage {
@private
  BOOL hasIndividualIndex_:1;
  BOOL hasAvailableForForeigners_:1;
  BOOL hasSequence_:1;
  BOOL hasCode_:1;
  BOOL hasStockSummary_:1;
  BOOL hasSecboardState_:1;
  Float32 individualIndex;
  int64_t availableForForeigners;
  int32_t sequence;
  NSString* code;
  StockSummary* stockSummary;
  Status secboardState;
}
- (BOOL) hasCode;
- (BOOL) hasIndividualIndex;
- (BOOL) hasAvailableForForeigners;
- (BOOL) hasSecboardState;
- (BOOL) hasStockSummary;
- (BOOL) hasSequence;
@property (readonly, strong) NSString* code;
@property (readonly) Float32 individualIndex;
@property (readonly) int64_t availableForForeigners;
@property (readonly) Status secboardState;
@property (readonly, strong) StockSummary* stockSummary;
@property (readonly) int32_t sequence;

+ (IdxStockSummary*) defaultInstance;
- (IdxStockSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxStockSummary_Builder*) builder;
+ (IdxStockSummary_Builder*) builder;
+ (IdxStockSummary_Builder*) builderWithPrototype:(IdxStockSummary*) prototype;
- (IdxStockSummary_Builder*) toBuilder;

+ (IdxStockSummary*) parseFromData:(NSData*) data;
+ (IdxStockSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxStockSummary*) parseFromInputStream:(NSInputStream*) input;
+ (IdxStockSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxStockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxStockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxStockSummary_Builder : PBGeneratedMessage_Builder {
@private
  IdxStockSummary* result;
}

- (IdxStockSummary*) defaultInstance;

- (IdxStockSummary_Builder*) clear;
- (IdxStockSummary_Builder*) clone;

- (IdxStockSummary*) build;
- (IdxStockSummary*) buildPartial;

- (IdxStockSummary_Builder*) mergeFrom:(IdxStockSummary*) other;
- (IdxStockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxStockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxStockSummary_Builder*) setCode:(NSString*) value;
- (IdxStockSummary_Builder*) clearCode;

- (BOOL) hasIndividualIndex;
- (Float32) individualIndex;
- (IdxStockSummary_Builder*) setIndividualIndex:(Float32) value;
- (IdxStockSummary_Builder*) clearIndividualIndex;

- (BOOL) hasAvailableForForeigners;
- (int64_t) availableForForeigners;
- (IdxStockSummary_Builder*) setAvailableForForeigners:(int64_t) value;
- (IdxStockSummary_Builder*) clearAvailableForForeigners;

- (BOOL) hasSecboardState;
- (Status) secboardState;
- (IdxStockSummary_Builder*) setSecboardState:(Status) value;
- (IdxStockSummary_Builder*) clearSecboardState;

- (BOOL) hasStockSummary;
- (StockSummary*) stockSummary;
- (IdxStockSummary_Builder*) setStockSummary:(StockSummary*) value;
- (IdxStockSummary_Builder*) setStockSummaryBuilder:(StockSummary_Builder*) builderForValue;
- (IdxStockSummary_Builder*) mergeStockSummary:(StockSummary*) value;
- (IdxStockSummary_Builder*) clearStockSummary;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (IdxStockSummary_Builder*) setSequence:(int32_t) value;
- (IdxStockSummary_Builder*) clearSequence;
@end

@interface KiStockSummary : PBGeneratedMessage {
@private
  BOOL hasReferencePrice_:1;
  BOOL hasSettlementPrice_:1;
  BOOL hasForeignBought_:1;
  BOOL hasForeignSold_:1;
  BOOL hasDomesticBought_:1;
  BOOL hasDomesticSold_:1;
  BOOL hasForeignVolBought_:1;
  BOOL hasForeignValBought_:1;
  BOOL hasForeignFreqBought_:1;
  BOOL hasForeignVolSold_:1;
  BOOL hasForeignValSold_:1;
  BOOL hasForeignFreqSold_:1;
  BOOL hasCodeId_:1;
  BOOL hasLastVolume_:1;
  BOOL hasSequence_:1;
  BOOL hasStockSummary_:1;
  Float32 referencePrice;
  Float32 settlementPrice;
  int64_t foreignBought;
  int64_t foreignSold;
  int64_t domesticBought;
  int64_t domesticSold;
  int64_t foreignVolBought;
  int64_t foreignValBought;
  int64_t foreignFreqBought;
  int64_t foreignVolSold;
  int64_t foreignValSold;
  int64_t foreignFreqSold;
  int32_t codeId;
  int32_t lastVolume;
  int32_t sequence;
  StockSummary* stockSummary;
}
- (BOOL) hasCodeId;
- (BOOL) hasLastVolume;
- (BOOL) hasStockSummary;
- (BOOL) hasForeignBought;
- (BOOL) hasForeignSold;
- (BOOL) hasDomesticBought;
- (BOOL) hasDomesticSold;
- (BOOL) hasForeignVolBought;
- (BOOL) hasForeignValBought;
- (BOOL) hasForeignFreqBought;
- (BOOL) hasForeignVolSold;
- (BOOL) hasForeignValSold;
- (BOOL) hasForeignFreqSold;
- (BOOL) hasSequence;
- (BOOL) hasReferencePrice;
- (BOOL) hasSettlementPrice;
@property (readonly) int32_t codeId;
@property (readonly) int32_t lastVolume;
@property (readonly, strong) StockSummary* stockSummary;
@property (readonly) int64_t foreignBought;
@property (readonly) int64_t foreignSold;
@property (readonly) int64_t domesticBought;
@property (readonly) int64_t domesticSold;
@property (readonly) int64_t foreignVolBought;
@property (readonly) int64_t foreignValBought;
@property (readonly) int64_t foreignFreqBought;
@property (readonly) int64_t foreignVolSold;
@property (readonly) int64_t foreignValSold;
@property (readonly) int64_t foreignFreqSold;
@property (readonly) int32_t sequence;
@property (readonly) Float32 referencePrice;
@property (readonly) Float32 settlementPrice;

+ (KiStockSummary*) defaultInstance;
- (KiStockSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiStockSummary_Builder*) builder;
+ (KiStockSummary_Builder*) builder;
+ (KiStockSummary_Builder*) builderWithPrototype:(KiStockSummary*) prototype;
- (KiStockSummary_Builder*) toBuilder;

+ (KiStockSummary*) parseFromData:(NSData*) data;
+ (KiStockSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiStockSummary*) parseFromInputStream:(NSInputStream*) input;
+ (KiStockSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiStockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiStockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiStockSummary_Builder : PBGeneratedMessage_Builder {
@private
  KiStockSummary* result;
}

- (KiStockSummary*) defaultInstance;

- (KiStockSummary_Builder*) clear;
- (KiStockSummary_Builder*) clone;

- (KiStockSummary*) build;
- (KiStockSummary*) buildPartial;

- (KiStockSummary_Builder*) mergeFrom:(KiStockSummary*) other;
- (KiStockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiStockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiStockSummary_Builder*) setCodeId:(int32_t) value;
- (KiStockSummary_Builder*) clearCodeId;

- (BOOL) hasLastVolume;
- (int32_t) lastVolume;
- (KiStockSummary_Builder*) setLastVolume:(int32_t) value;
- (KiStockSummary_Builder*) clearLastVolume;

- (BOOL) hasStockSummary;
- (StockSummary*) stockSummary;
- (KiStockSummary_Builder*) setStockSummary:(StockSummary*) value;
- (KiStockSummary_Builder*) setStockSummaryBuilder:(StockSummary_Builder*) builderForValue;
- (KiStockSummary_Builder*) mergeStockSummary:(StockSummary*) value;
- (KiStockSummary_Builder*) clearStockSummary;

- (BOOL) hasForeignBought;
- (int64_t) foreignBought;
- (KiStockSummary_Builder*) setForeignBought:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignBought;

- (BOOL) hasForeignSold;
- (int64_t) foreignSold;
- (KiStockSummary_Builder*) setForeignSold:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignSold;

- (BOOL) hasDomesticBought;
- (int64_t) domesticBought;
- (KiStockSummary_Builder*) setDomesticBought:(int64_t) value;
- (KiStockSummary_Builder*) clearDomesticBought;

- (BOOL) hasDomesticSold;
- (int64_t) domesticSold;
- (KiStockSummary_Builder*) setDomesticSold:(int64_t) value;
- (KiStockSummary_Builder*) clearDomesticSold;

- (BOOL) hasForeignVolBought;
- (int64_t) foreignVolBought;
- (KiStockSummary_Builder*) setForeignVolBought:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignVolBought;

- (BOOL) hasForeignValBought;
- (int64_t) foreignValBought;
- (KiStockSummary_Builder*) setForeignValBought:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignValBought;

- (BOOL) hasForeignFreqBought;
- (int64_t) foreignFreqBought;
- (KiStockSummary_Builder*) setForeignFreqBought:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignFreqBought;

- (BOOL) hasForeignVolSold;
- (int64_t) foreignVolSold;
- (KiStockSummary_Builder*) setForeignVolSold:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignVolSold;

- (BOOL) hasForeignValSold;
- (int64_t) foreignValSold;
- (KiStockSummary_Builder*) setForeignValSold:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignValSold;

- (BOOL) hasForeignFreqSold;
- (int64_t) foreignFreqSold;
- (KiStockSummary_Builder*) setForeignFreqSold:(int64_t) value;
- (KiStockSummary_Builder*) clearForeignFreqSold;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (KiStockSummary_Builder*) setSequence:(int32_t) value;
- (KiStockSummary_Builder*) clearSequence;

- (BOOL) hasReferencePrice;
- (Float32) referencePrice;
- (KiStockSummary_Builder*) setReferencePrice:(Float32) value;
- (KiStockSummary_Builder*) clearReferencePrice;

- (BOOL) hasSettlementPrice;
- (Float32) settlementPrice;
- (KiStockSummary_Builder*) setSettlementPrice:(Float32) value;
- (KiStockSummary_Builder*) clearSettlementPrice;
@end

@interface KiWk52104 : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasWk52High_:1;
  BOOL hasWk52Low_:1;
  BOOL hasWk104High_:1;
  BOOL hasWk104Low_:1;
  BOOL hasBoard_:1;
  int32_t codeId;
  int32_t wk52High;
  int32_t wk52Low;
  int32_t wk104High;
  int32_t wk104Low;
  Board board;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
- (BOOL) hasWk52High;
- (BOOL) hasWk52Low;
- (BOOL) hasWk104High;
- (BOOL) hasWk104Low;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly) int32_t wk52High;
@property (readonly) int32_t wk52Low;
@property (readonly) int32_t wk104High;
@property (readonly) int32_t wk104Low;

+ (KiWk52104*) defaultInstance;
- (KiWk52104*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiWk52104_Builder*) builder;
+ (KiWk52104_Builder*) builder;
+ (KiWk52104_Builder*) builderWithPrototype:(KiWk52104*) prototype;
- (KiWk52104_Builder*) toBuilder;

+ (KiWk52104*) parseFromData:(NSData*) data;
+ (KiWk52104*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiWk52104*) parseFromInputStream:(NSInputStream*) input;
+ (KiWk52104*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiWk52104*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiWk52104*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiWk52104_Builder : PBGeneratedMessage_Builder {
@private
  KiWk52104* result;
}

- (KiWk52104*) defaultInstance;

- (KiWk52104_Builder*) clear;
- (KiWk52104_Builder*) clone;

- (KiWk52104*) build;
- (KiWk52104*) buildPartial;

- (KiWk52104_Builder*) mergeFrom:(KiWk52104*) other;
- (KiWk52104_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiWk52104_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiWk52104_Builder*) setCodeId:(int32_t) value;
- (KiWk52104_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (KiWk52104_Builder*) setBoard:(Board) value;
- (KiWk52104_Builder*) clearBoard;

- (BOOL) hasWk52High;
- (int32_t) wk52High;
- (KiWk52104_Builder*) setWk52High:(int32_t) value;
- (KiWk52104_Builder*) clearWk52High;

- (BOOL) hasWk52Low;
- (int32_t) wk52Low;
- (KiWk52104_Builder*) setWk52Low:(int32_t) value;
- (KiWk52104_Builder*) clearWk52Low;

- (BOOL) hasWk104High;
- (int32_t) wk104High;
- (KiWk52104_Builder*) setWk104High:(int32_t) value;
- (KiWk52104_Builder*) clearWk104High;

- (BOOL) hasWk104Low;
- (int32_t) wk104Low;
- (KiWk52104_Builder*) setWk104Low:(int32_t) value;
- (KiWk52104_Builder*) clearWk104Low;
@end

@interface StockSummary : PBGeneratedMessage {
@private
  BOOL hasChange_:1;
  BOOL hasTradedVolume_:1;
  BOOL hasTradedValue_:1;
  BOOL hasPreviousPrice_:1;
  BOOL hasTradedFrequency_:1;
  BOOL hasOhlc_:1;
  BOOL hasBestBidOffer_:1;
  BOOL hasBoard_:1;
  Float32 change;
  int64_t tradedVolume;
  int64_t tradedValue;
  int32_t previousPrice;
  int32_t tradedFrequency;
  OHLC* ohlc;
  BestBidOffer* bestBidOffer;
  Board board;
}
- (BOOL) hasBoard;
- (BOOL) hasPreviousPrice;
- (BOOL) hasChange;
- (BOOL) hasTradedVolume;
- (BOOL) hasTradedValue;
- (BOOL) hasTradedFrequency;
- (BOOL) hasOhlc;
- (BOOL) hasBestBidOffer;
@property (readonly) Board board;
@property (readonly) int32_t previousPrice;
@property (readonly) Float32 change;
@property (readonly) int64_t tradedVolume;
@property (readonly) int64_t tradedValue;
@property (readonly) int32_t tradedFrequency;
@property (readonly, strong) OHLC* ohlc;
@property (readonly, strong) BestBidOffer* bestBidOffer;

+ (StockSummary*) defaultInstance;
- (StockSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StockSummary_Builder*) builder;
+ (StockSummary_Builder*) builder;
+ (StockSummary_Builder*) builderWithPrototype:(StockSummary*) prototype;
- (StockSummary_Builder*) toBuilder;

+ (StockSummary*) parseFromData:(NSData*) data;
+ (StockSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StockSummary*) parseFromInputStream:(NSInputStream*) input;
+ (StockSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StockSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StockSummary_Builder : PBGeneratedMessage_Builder {
@private
  StockSummary* result;
}

- (StockSummary*) defaultInstance;

- (StockSummary_Builder*) clear;
- (StockSummary_Builder*) clone;

- (StockSummary*) build;
- (StockSummary*) buildPartial;

- (StockSummary_Builder*) mergeFrom:(StockSummary*) other;
- (StockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StockSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBoard;
- (Board) board;
- (StockSummary_Builder*) setBoard:(Board) value;
- (StockSummary_Builder*) clearBoard;

- (BOOL) hasPreviousPrice;
- (int32_t) previousPrice;
- (StockSummary_Builder*) setPreviousPrice:(int32_t) value;
- (StockSummary_Builder*) clearPreviousPrice;

- (BOOL) hasChange;
- (Float32) change;
- (StockSummary_Builder*) setChange:(Float32) value;
- (StockSummary_Builder*) clearChange;

- (BOOL) hasTradedVolume;
- (int64_t) tradedVolume;
- (StockSummary_Builder*) setTradedVolume:(int64_t) value;
- (StockSummary_Builder*) clearTradedVolume;

- (BOOL) hasTradedValue;
- (int64_t) tradedValue;
- (StockSummary_Builder*) setTradedValue:(int64_t) value;
- (StockSummary_Builder*) clearTradedValue;

- (BOOL) hasTradedFrequency;
- (int32_t) tradedFrequency;
- (StockSummary_Builder*) setTradedFrequency:(int32_t) value;
- (StockSummary_Builder*) clearTradedFrequency;

- (BOOL) hasOhlc;
- (OHLC*) ohlc;
- (StockSummary_Builder*) setOhlc:(OHLC*) value;
- (StockSummary_Builder*) setOhlcBuilder:(OHLC_Builder*) builderForValue;
- (StockSummary_Builder*) mergeOhlc:(OHLC*) value;
- (StockSummary_Builder*) clearOhlc;

- (BOOL) hasBestBidOffer;
- (BestBidOffer*) bestBidOffer;
- (StockSummary_Builder*) setBestBidOffer:(BestBidOffer*) value;
- (StockSummary_Builder*) setBestBidOfferBuilder:(BestBidOffer_Builder*) builderForValue;
- (StockSummary_Builder*) mergeBestBidOffer:(BestBidOffer*) value;
- (StockSummary_Builder*) clearBestBidOffer;
@end

@interface StockHistory : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasBoard_:1;
  int32_t codeId;
  Board board;
  NSMutableArray * ohlcArray;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly, strong) NSArray * ohlc;
- (OHLC*)ohlcAtIndex:(NSUInteger)index;

+ (StockHistory*) defaultInstance;
- (StockHistory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StockHistory_Builder*) builder;
+ (StockHistory_Builder*) builder;
+ (StockHistory_Builder*) builderWithPrototype:(StockHistory*) prototype;
- (StockHistory_Builder*) toBuilder;

+ (StockHistory*) parseFromData:(NSData*) data;
+ (StockHistory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StockHistory*) parseFromInputStream:(NSInputStream*) input;
+ (StockHistory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StockHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StockHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StockHistory_Builder : PBGeneratedMessage_Builder {
@private
  StockHistory* result;
}

- (StockHistory*) defaultInstance;

- (StockHistory_Builder*) clear;
- (StockHistory_Builder*) clone;

- (StockHistory*) build;
- (StockHistory*) buildPartial;

- (StockHistory_Builder*) mergeFrom:(StockHistory*) other;
- (StockHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StockHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (StockHistory_Builder*) setCodeId:(int32_t) value;
- (StockHistory_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (StockHistory_Builder*) setBoard:(Board) value;
- (StockHistory_Builder*) clearBoard;

- (NSMutableArray *)ohlc;
- (OHLC*)ohlcAtIndex:(NSUInteger)index;
- (StockHistory_Builder *)addOhlc:(OHLC*)value;
- (StockHistory_Builder *)setOhlcArray:(NSArray *)array;
- (StockHistory_Builder *)clearOhlc;
@end

@interface ForeignHistory : PBGeneratedMessage {
@private
  BOOL hasFBuy_:1;
  BOOL hasFSell_:1;
  BOOL hasTVal_:1;
  BOOL hasDate_:1;
  BOOL hasBoard_:1;
  int64_t fBuy;
  int64_t fSell;
  int64_t tVal;
  int32_t date;
  Board board;
}
- (BOOL) hasDate;
- (BOOL) hasBoard;
- (BOOL) hasFBuy;
- (BOOL) hasFSell;
- (BOOL) hasTVal;
@property (readonly) int32_t date;
@property (readonly) Board board;
@property (readonly) int64_t fBuy;
@property (readonly) int64_t fSell;
@property (readonly) int64_t tVal;

+ (ForeignHistory*) defaultInstance;
- (ForeignHistory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ForeignHistory_Builder*) builder;
+ (ForeignHistory_Builder*) builder;
+ (ForeignHistory_Builder*) builderWithPrototype:(ForeignHistory*) prototype;
- (ForeignHistory_Builder*) toBuilder;

+ (ForeignHistory*) parseFromData:(NSData*) data;
+ (ForeignHistory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignHistory*) parseFromInputStream:(NSInputStream*) input;
+ (ForeignHistory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ForeignHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ForeignHistory_Builder : PBGeneratedMessage_Builder {
@private
  ForeignHistory* result;
}

- (ForeignHistory*) defaultInstance;

- (ForeignHistory_Builder*) clear;
- (ForeignHistory_Builder*) clone;

- (ForeignHistory*) build;
- (ForeignHistory*) buildPartial;

- (ForeignHistory_Builder*) mergeFrom:(ForeignHistory*) other;
- (ForeignHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ForeignHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDate;
- (int32_t) date;
- (ForeignHistory_Builder*) setDate:(int32_t) value;
- (ForeignHistory_Builder*) clearDate;

- (BOOL) hasBoard;
- (Board) board;
- (ForeignHistory_Builder*) setBoard:(Board) value;
- (ForeignHistory_Builder*) clearBoard;

- (BOOL) hasFBuy;
- (int64_t) fBuy;
- (ForeignHistory_Builder*) setFBuy:(int64_t) value;
- (ForeignHistory_Builder*) clearFBuy;

- (BOOL) hasFSell;
- (int64_t) fSell;
- (ForeignHistory_Builder*) setFSell:(int64_t) value;
- (ForeignHistory_Builder*) clearFSell;

- (BOOL) hasTVal;
- (int64_t) tVal;
- (ForeignHistory_Builder*) setTVal:(int64_t) value;
- (ForeignHistory_Builder*) clearTVal;
@end

@interface OHLC : PBGeneratedMessage {
@private
  BOOL hasTime_:1;
  BOOL hasOpen_:1;
  BOOL hasHigh_:1;
  BOOL hasLow_:1;
  BOOL hasClose_:1;
  BOOL hasVolume_:1;
  int32_t time;
  int32_t open;
  int32_t high;
  int32_t low;
  int32_t close;
  int32_t volume;
}
- (BOOL) hasTime;
- (BOOL) hasOpen;
- (BOOL) hasHigh;
- (BOOL) hasLow;
- (BOOL) hasClose;
- (BOOL) hasVolume;
@property (readonly) int32_t time;
@property (readonly) int32_t open;
@property (readonly) int32_t high;
@property (readonly) int32_t low;
@property (readonly) int32_t close;
@property (readonly) int32_t volume;

+ (OHLC*) defaultInstance;
- (OHLC*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OHLC_Builder*) builder;
+ (OHLC_Builder*) builder;
+ (OHLC_Builder*) builderWithPrototype:(OHLC*) prototype;
- (OHLC_Builder*) toBuilder;

+ (OHLC*) parseFromData:(NSData*) data;
+ (OHLC*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OHLC*) parseFromInputStream:(NSInputStream*) input;
+ (OHLC*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OHLC*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OHLC*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OHLC_Builder : PBGeneratedMessage_Builder {
@private
  OHLC* result;
}

- (OHLC*) defaultInstance;

- (OHLC_Builder*) clear;
- (OHLC_Builder*) clone;

- (OHLC*) build;
- (OHLC*) buildPartial;

- (OHLC_Builder*) mergeFrom:(OHLC*) other;
- (OHLC_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OHLC_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTime;
- (int32_t) time;
- (OHLC_Builder*) setTime:(int32_t) value;
- (OHLC_Builder*) clearTime;

- (BOOL) hasOpen;
- (int32_t) open;
- (OHLC_Builder*) setOpen:(int32_t) value;
- (OHLC_Builder*) clearOpen;

- (BOOL) hasHigh;
- (int32_t) high;
- (OHLC_Builder*) setHigh:(int32_t) value;
- (OHLC_Builder*) clearHigh;

- (BOOL) hasLow;
- (int32_t) low;
- (OHLC_Builder*) setLow:(int32_t) value;
- (OHLC_Builder*) clearLow;

- (BOOL) hasClose;
- (int32_t) close;
- (OHLC_Builder*) setClose:(int32_t) value;
- (OHLC_Builder*) clearClose;

- (BOOL) hasVolume;
- (int32_t) volume;
- (OHLC_Builder*) setVolume:(int32_t) value;
- (OHLC_Builder*) clearVolume;
@end

@interface KiIndicesData : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasCode_:1;
  int32_t id;
  NSString* code;
}
- (BOOL) hasId;
- (BOOL) hasCode;
@property (readonly) int32_t id;
@property (readonly, strong) NSString* code;

+ (KiIndicesData*) defaultInstance;
- (KiIndicesData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiIndicesData_Builder*) builder;
+ (KiIndicesData_Builder*) builder;
+ (KiIndicesData_Builder*) builderWithPrototype:(KiIndicesData*) prototype;
- (KiIndicesData_Builder*) toBuilder;

+ (KiIndicesData*) parseFromData:(NSData*) data;
+ (KiIndicesData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiIndicesData*) parseFromInputStream:(NSInputStream*) input;
+ (KiIndicesData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiIndicesData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiIndicesData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiIndicesData_Builder : PBGeneratedMessage_Builder {
@private
  KiIndicesData* result;
}

- (KiIndicesData*) defaultInstance;

- (KiIndicesData_Builder*) clear;
- (KiIndicesData_Builder*) clone;

- (KiIndicesData*) build;
- (KiIndicesData*) buildPartial;

- (KiIndicesData_Builder*) mergeFrom:(KiIndicesData*) other;
- (KiIndicesData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiIndicesData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (KiIndicesData_Builder*) setId:(int32_t) value;
- (KiIndicesData_Builder*) clearId;

- (BOOL) hasCode;
- (NSString*) code;
- (KiIndicesData_Builder*) setCode:(NSString*) value;
- (KiIndicesData_Builder*) clearCode;
@end

@interface IdxIndices : PBGeneratedMessage {
@private
  BOOL hasBaseValue_:1;
  BOOL hasMarketValue_:1;
  BOOL hasCode_:1;
  BOOL hasIndices_:1;
  int64_t baseValue;
  int64_t marketValue;
  NSString* code;
  Indices* indices;
}
- (BOOL) hasCode;
- (BOOL) hasBaseValue;
- (BOOL) hasMarketValue;
- (BOOL) hasIndices;
@property (readonly, strong) NSString* code;
@property (readonly) int64_t baseValue;
@property (readonly) int64_t marketValue;
@property (readonly, strong) Indices* indices;

+ (IdxIndices*) defaultInstance;
- (IdxIndices*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxIndices_Builder*) builder;
+ (IdxIndices_Builder*) builder;
+ (IdxIndices_Builder*) builderWithPrototype:(IdxIndices*) prototype;
- (IdxIndices_Builder*) toBuilder;

+ (IdxIndices*) parseFromData:(NSData*) data;
+ (IdxIndices*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxIndices*) parseFromInputStream:(NSInputStream*) input;
+ (IdxIndices*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxIndices_Builder : PBGeneratedMessage_Builder {
@private
  IdxIndices* result;
}

- (IdxIndices*) defaultInstance;

- (IdxIndices_Builder*) clear;
- (IdxIndices_Builder*) clone;

- (IdxIndices*) build;
- (IdxIndices*) buildPartial;

- (IdxIndices_Builder*) mergeFrom:(IdxIndices*) other;
- (IdxIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxIndices_Builder*) setCode:(NSString*) value;
- (IdxIndices_Builder*) clearCode;

- (BOOL) hasBaseValue;
- (int64_t) baseValue;
- (IdxIndices_Builder*) setBaseValue:(int64_t) value;
- (IdxIndices_Builder*) clearBaseValue;

- (BOOL) hasMarketValue;
- (int64_t) marketValue;
- (IdxIndices_Builder*) setMarketValue:(int64_t) value;
- (IdxIndices_Builder*) clearMarketValue;

- (BOOL) hasIndices;
- (Indices*) indices;
- (IdxIndices_Builder*) setIndices:(Indices*) value;
- (IdxIndices_Builder*) setIndicesBuilder:(Indices_Builder*) builderForValue;
- (IdxIndices_Builder*) mergeIndices:(Indices*) value;
- (IdxIndices_Builder*) clearIndices;
@end

@interface KiIndices : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasIndices_:1;
  int32_t codeId;
  Indices* indices;
}
- (BOOL) hasCodeId;
- (BOOL) hasIndices;
@property (readonly) int32_t codeId;
@property (readonly, strong) Indices* indices;

+ (KiIndices*) defaultInstance;
- (KiIndices*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiIndices_Builder*) builder;
+ (KiIndices_Builder*) builder;
+ (KiIndices_Builder*) builderWithPrototype:(KiIndices*) prototype;
- (KiIndices_Builder*) toBuilder;

+ (KiIndices*) parseFromData:(NSData*) data;
+ (KiIndices*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiIndices*) parseFromInputStream:(NSInputStream*) input;
+ (KiIndices*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiIndices*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiIndices_Builder : PBGeneratedMessage_Builder {
@private
  KiIndices* result;
}

- (KiIndices*) defaultInstance;

- (KiIndices_Builder*) clear;
- (KiIndices_Builder*) clone;

- (KiIndices*) build;
- (KiIndices*) buildPartial;

- (KiIndices_Builder*) mergeFrom:(KiIndices*) other;
- (KiIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiIndices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiIndices_Builder*) setCodeId:(int32_t) value;
- (KiIndices_Builder*) clearCodeId;

- (BOOL) hasIndices;
- (Indices*) indices;
- (KiIndices_Builder*) setIndices:(Indices*) value;
- (KiIndices_Builder*) setIndicesBuilder:(Indices_Builder*) builderForValue;
- (KiIndices_Builder*) mergeIndices:(Indices*) value;
- (KiIndices_Builder*) clearIndices;
@end

@interface Indices : PBGeneratedMessage {
@private
  BOOL hasPrevious_:1;
  BOOL hasOhlc_:1;
  Float32 previous;
  OHLCFloat* ohlc;
}
- (BOOL) hasPrevious;
- (BOOL) hasOhlc;
@property (readonly) Float32 previous;
@property (readonly, strong) OHLCFloat* ohlc;

+ (Indices*) defaultInstance;
- (Indices*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Indices_Builder*) builder;
+ (Indices_Builder*) builder;
+ (Indices_Builder*) builderWithPrototype:(Indices*) prototype;
- (Indices_Builder*) toBuilder;

+ (Indices*) parseFromData:(NSData*) data;
+ (Indices*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Indices*) parseFromInputStream:(NSInputStream*) input;
+ (Indices*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Indices*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Indices*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Indices_Builder : PBGeneratedMessage_Builder {
@private
  Indices* result;
}

- (Indices*) defaultInstance;

- (Indices_Builder*) clear;
- (Indices_Builder*) clone;

- (Indices*) build;
- (Indices*) buildPartial;

- (Indices_Builder*) mergeFrom:(Indices*) other;
- (Indices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Indices_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrevious;
- (Float32) previous;
- (Indices_Builder*) setPrevious:(Float32) value;
- (Indices_Builder*) clearPrevious;

- (BOOL) hasOhlc;
- (OHLCFloat*) ohlc;
- (Indices_Builder*) setOhlc:(OHLCFloat*) value;
- (Indices_Builder*) setOhlcBuilder:(OHLCFloat_Builder*) builderForValue;
- (Indices_Builder*) mergeOhlc:(OHLCFloat*) value;
- (Indices_Builder*) clearOhlc;
@end

@interface IndicesHistory : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  int32_t codeId;
  NSMutableArray * ohlcArray;
}
- (BOOL) hasCodeId;
@property (readonly) int32_t codeId;
@property (readonly, strong) NSArray * ohlc;
- (OHLCFloat*)ohlcAtIndex:(NSUInteger)index;

+ (IndicesHistory*) defaultInstance;
- (IndicesHistory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IndicesHistory_Builder*) builder;
+ (IndicesHistory_Builder*) builder;
+ (IndicesHistory_Builder*) builderWithPrototype:(IndicesHistory*) prototype;
- (IndicesHistory_Builder*) toBuilder;

+ (IndicesHistory*) parseFromData:(NSData*) data;
+ (IndicesHistory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IndicesHistory*) parseFromInputStream:(NSInputStream*) input;
+ (IndicesHistory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IndicesHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IndicesHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IndicesHistory_Builder : PBGeneratedMessage_Builder {
@private
  IndicesHistory* result;
}

- (IndicesHistory*) defaultInstance;

- (IndicesHistory_Builder*) clear;
- (IndicesHistory_Builder*) clone;

- (IndicesHistory*) build;
- (IndicesHistory*) buildPartial;

- (IndicesHistory_Builder*) mergeFrom:(IndicesHistory*) other;
- (IndicesHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IndicesHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (IndicesHistory_Builder*) setCodeId:(int32_t) value;
- (IndicesHistory_Builder*) clearCodeId;

- (NSMutableArray *)ohlc;
- (OHLCFloat*)ohlcAtIndex:(NSUInteger)index;
- (IndicesHistory_Builder *)addOhlc:(OHLCFloat*)value;
- (IndicesHistory_Builder *)setOhlcArray:(NSArray *)array;
- (IndicesHistory_Builder *)clearOhlc;
@end

@interface OHLCFloat : PBGeneratedMessage {
@private
  BOOL hasOpen_:1;
  BOOL hasHigh_:1;
  BOOL hasLow_:1;
  BOOL hasClose_:1;
  BOOL hasVolume_:1;
  BOOL hasTime_:1;
  Float32 open;
  Float32 high;
  Float32 low;
  Float32 close;
  Float32 volume;
  int32_t time;
}
- (BOOL) hasTime;
- (BOOL) hasOpen;
- (BOOL) hasHigh;
- (BOOL) hasLow;
- (BOOL) hasClose;
- (BOOL) hasVolume;
@property (readonly) int32_t time;
@property (readonly) Float32 open;
@property (readonly) Float32 high;
@property (readonly) Float32 low;
@property (readonly) Float32 close;
@property (readonly) Float32 volume;

+ (OHLCFloat*) defaultInstance;
- (OHLCFloat*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OHLCFloat_Builder*) builder;
+ (OHLCFloat_Builder*) builder;
+ (OHLCFloat_Builder*) builderWithPrototype:(OHLCFloat*) prototype;
- (OHLCFloat_Builder*) toBuilder;

+ (OHLCFloat*) parseFromData:(NSData*) data;
+ (OHLCFloat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OHLCFloat*) parseFromInputStream:(NSInputStream*) input;
+ (OHLCFloat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OHLCFloat*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OHLCFloat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OHLCFloat_Builder : PBGeneratedMessage_Builder {
@private
  OHLCFloat* result;
}

- (OHLCFloat*) defaultInstance;

- (OHLCFloat_Builder*) clear;
- (OHLCFloat_Builder*) clone;

- (OHLCFloat*) build;
- (OHLCFloat*) buildPartial;

- (OHLCFloat_Builder*) mergeFrom:(OHLCFloat*) other;
- (OHLCFloat_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OHLCFloat_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTime;
- (int32_t) time;
- (OHLCFloat_Builder*) setTime:(int32_t) value;
- (OHLCFloat_Builder*) clearTime;

- (BOOL) hasOpen;
- (Float32) open;
- (OHLCFloat_Builder*) setOpen:(Float32) value;
- (OHLCFloat_Builder*) clearOpen;

- (BOOL) hasHigh;
- (Float32) high;
- (OHLCFloat_Builder*) setHigh:(Float32) value;
- (OHLCFloat_Builder*) clearHigh;

- (BOOL) hasLow;
- (Float32) low;
- (OHLCFloat_Builder*) setLow:(Float32) value;
- (OHLCFloat_Builder*) clearLow;

- (BOOL) hasClose;
- (Float32) close;
- (OHLCFloat_Builder*) setClose:(Float32) value;
- (OHLCFloat_Builder*) clearClose;

- (BOOL) hasVolume;
- (Float32) volume;
- (OHLCFloat_Builder*) setVolume:(Float32) value;
- (OHLCFloat_Builder*) clearVolume;
@end

@interface IdxMarketDepth : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasBestBidOffer1_:1;
  BOOL hasBestBidOffer2_:1;
  BOOL hasBestBidOffer3_:1;
  BOOL hasBestBidOffer4_:1;
  BOOL hasBestBidOffer5_:1;
  BOOL hasBoard_:1;
  NSString* code;
  BestBidOffer* bestBidOffer1;
  BestBidOffer* bestBidOffer2;
  BestBidOffer* bestBidOffer3;
  BestBidOffer* bestBidOffer4;
  BestBidOffer* bestBidOffer5;
  Board board;
}
- (BOOL) hasCode;
- (BOOL) hasBoard;
- (BOOL) hasBestBidOffer1;
- (BOOL) hasBestBidOffer2;
- (BOOL) hasBestBidOffer3;
- (BOOL) hasBestBidOffer4;
- (BOOL) hasBestBidOffer5;
@property (readonly, strong) NSString* code;
@property (readonly) Board board;
@property (readonly, strong) BestBidOffer* bestBidOffer1;
@property (readonly, strong) BestBidOffer* bestBidOffer2;
@property (readonly, strong) BestBidOffer* bestBidOffer3;
@property (readonly, strong) BestBidOffer* bestBidOffer4;
@property (readonly, strong) BestBidOffer* bestBidOffer5;

+ (IdxMarketDepth*) defaultInstance;
- (IdxMarketDepth*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxMarketDepth_Builder*) builder;
+ (IdxMarketDepth_Builder*) builder;
+ (IdxMarketDepth_Builder*) builderWithPrototype:(IdxMarketDepth*) prototype;
- (IdxMarketDepth_Builder*) toBuilder;

+ (IdxMarketDepth*) parseFromData:(NSData*) data;
+ (IdxMarketDepth*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxMarketDepth*) parseFromInputStream:(NSInputStream*) input;
+ (IdxMarketDepth*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxMarketDepth*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxMarketDepth*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxMarketDepth_Builder : PBGeneratedMessage_Builder {
@private
  IdxMarketDepth* result;
}

- (IdxMarketDepth*) defaultInstance;

- (IdxMarketDepth_Builder*) clear;
- (IdxMarketDepth_Builder*) clone;

- (IdxMarketDepth*) build;
- (IdxMarketDepth*) buildPartial;

- (IdxMarketDepth_Builder*) mergeFrom:(IdxMarketDepth*) other;
- (IdxMarketDepth_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxMarketDepth_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxMarketDepth_Builder*) setCode:(NSString*) value;
- (IdxMarketDepth_Builder*) clearCode;

- (BOOL) hasBoard;
- (Board) board;
- (IdxMarketDepth_Builder*) setBoard:(Board) value;
- (IdxMarketDepth_Builder*) clearBoard;

- (BOOL) hasBestBidOffer1;
- (BestBidOffer*) bestBidOffer1;
- (IdxMarketDepth_Builder*) setBestBidOffer1:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) setBestBidOffer1Builder:(BestBidOffer_Builder*) builderForValue;
- (IdxMarketDepth_Builder*) mergeBestBidOffer1:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) clearBestBidOffer1;

- (BOOL) hasBestBidOffer2;
- (BestBidOffer*) bestBidOffer2;
- (IdxMarketDepth_Builder*) setBestBidOffer2:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) setBestBidOffer2Builder:(BestBidOffer_Builder*) builderForValue;
- (IdxMarketDepth_Builder*) mergeBestBidOffer2:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) clearBestBidOffer2;

- (BOOL) hasBestBidOffer3;
- (BestBidOffer*) bestBidOffer3;
- (IdxMarketDepth_Builder*) setBestBidOffer3:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) setBestBidOffer3Builder:(BestBidOffer_Builder*) builderForValue;
- (IdxMarketDepth_Builder*) mergeBestBidOffer3:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) clearBestBidOffer3;

- (BOOL) hasBestBidOffer4;
- (BestBidOffer*) bestBidOffer4;
- (IdxMarketDepth_Builder*) setBestBidOffer4:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) setBestBidOffer4Builder:(BestBidOffer_Builder*) builderForValue;
- (IdxMarketDepth_Builder*) mergeBestBidOffer4:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) clearBestBidOffer4;

- (BOOL) hasBestBidOffer5;
- (BestBidOffer*) bestBidOffer5;
- (IdxMarketDepth_Builder*) setBestBidOffer5:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) setBestBidOffer5Builder:(BestBidOffer_Builder*) builderForValue;
- (IdxMarketDepth_Builder*) mergeBestBidOffer5:(BestBidOffer*) value;
- (IdxMarketDepth_Builder*) clearBestBidOffer5;
@end

@interface IdxTrade : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasBuyerBroker_:1;
  BOOL hasSellerBroker_:1;
  BOOL hasBestBidOffer_:1;
  BOOL hasTrade_:1;
  BOOL hasNumber_:1;
  BOOL hasTradeCommand_:1;
  NSString* code;
  NSString* buyerBroker;
  NSString* sellerBroker;
  BestBidOffer* bestBidOffer;
  Trade* trade;
  TNumber* number;
  TradeCommand tradeCommand;
}
- (BOOL) hasCode;
- (BOOL) hasBuyerBroker;
- (BOOL) hasSellerBroker;
- (BOOL) hasTradeCommand;
- (BOOL) hasBestBidOffer;
- (BOOL) hasTrade;
- (BOOL) hasNumber;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* buyerBroker;
@property (readonly, strong) NSString* sellerBroker;
@property (readonly) TradeCommand tradeCommand;
@property (readonly, strong) BestBidOffer* bestBidOffer;
@property (readonly, strong) Trade* trade;
@property (readonly, strong) TNumber* number;

+ (IdxTrade*) defaultInstance;
- (IdxTrade*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxTrade_Builder*) builder;
+ (IdxTrade_Builder*) builder;
+ (IdxTrade_Builder*) builderWithPrototype:(IdxTrade*) prototype;
- (IdxTrade_Builder*) toBuilder;

+ (IdxTrade*) parseFromData:(NSData*) data;
+ (IdxTrade*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxTrade*) parseFromInputStream:(NSInputStream*) input;
+ (IdxTrade*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxTrade_Builder : PBGeneratedMessage_Builder {
@private
  IdxTrade* result;
}

- (IdxTrade*) defaultInstance;

- (IdxTrade_Builder*) clear;
- (IdxTrade_Builder*) clone;

- (IdxTrade*) build;
- (IdxTrade*) buildPartial;

- (IdxTrade_Builder*) mergeFrom:(IdxTrade*) other;
- (IdxTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxTrade_Builder*) setCode:(NSString*) value;
- (IdxTrade_Builder*) clearCode;

- (BOOL) hasBuyerBroker;
- (NSString*) buyerBroker;
- (IdxTrade_Builder*) setBuyerBroker:(NSString*) value;
- (IdxTrade_Builder*) clearBuyerBroker;

- (BOOL) hasSellerBroker;
- (NSString*) sellerBroker;
- (IdxTrade_Builder*) setSellerBroker:(NSString*) value;
- (IdxTrade_Builder*) clearSellerBroker;

- (BOOL) hasTradeCommand;
- (TradeCommand) tradeCommand;
- (IdxTrade_Builder*) setTradeCommand:(TradeCommand) value;
- (IdxTrade_Builder*) clearTradeCommand;

- (BOOL) hasBestBidOffer;
- (BestBidOffer*) bestBidOffer;
- (IdxTrade_Builder*) setBestBidOffer:(BestBidOffer*) value;
- (IdxTrade_Builder*) setBestBidOfferBuilder:(BestBidOffer_Builder*) builderForValue;
- (IdxTrade_Builder*) mergeBestBidOffer:(BestBidOffer*) value;
- (IdxTrade_Builder*) clearBestBidOffer;

- (BOOL) hasTrade;
- (Trade*) trade;
- (IdxTrade_Builder*) setTrade:(Trade*) value;
- (IdxTrade_Builder*) setTradeBuilder:(Trade_Builder*) builderForValue;
- (IdxTrade_Builder*) mergeTrade:(Trade*) value;
- (IdxTrade_Builder*) clearTrade;

- (BOOL) hasNumber;
- (TNumber*) number;
- (IdxTrade_Builder*) setNumber:(TNumber*) value;
- (IdxTrade_Builder*) setNumberBuilder:(TNumber_Builder*) builderForValue;
- (IdxTrade_Builder*) mergeNumber:(TNumber*) value;
- (IdxTrade_Builder*) clearNumber;
@end

@interface Trade : PBGeneratedMessage {
@private
  BOOL hasSequence_:1;
  BOOL hasTradeTime_:1;
  BOOL hasPrice_:1;
  BOOL hasVolume_:1;
  BOOL hasBoard_:1;
  BOOL hasBuyerType_:1;
  BOOL hasSellerType_:1;
  int32_t sequence;
  int32_t tradeTime;
  int32_t price;
  int32_t volume;
  Board board;
  InvestorType buyerType;
  InvestorType sellerType;
}
- (BOOL) hasSequence;
- (BOOL) hasTradeTime;
- (BOOL) hasBoard;
- (BOOL) hasPrice;
- (BOOL) hasVolume;
- (BOOL) hasBuyerType;
- (BOOL) hasSellerType;
@property (readonly) int32_t sequence;
@property (readonly) int32_t tradeTime;
@property (readonly) Board board;
@property (readonly) int32_t price;
@property (readonly) int32_t volume;
@property (readonly) InvestorType buyerType;
@property (readonly) InvestorType sellerType;

+ (Trade*) defaultInstance;
- (Trade*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Trade_Builder*) builder;
+ (Trade_Builder*) builder;
+ (Trade_Builder*) builderWithPrototype:(Trade*) prototype;
- (Trade_Builder*) toBuilder;

+ (Trade*) parseFromData:(NSData*) data;
+ (Trade*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Trade*) parseFromInputStream:(NSInputStream*) input;
+ (Trade*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Trade*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Trade*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Trade_Builder : PBGeneratedMessage_Builder {
@private
  Trade* result;
}

- (Trade*) defaultInstance;

- (Trade_Builder*) clear;
- (Trade_Builder*) clone;

- (Trade*) build;
- (Trade*) buildPartial;

- (Trade_Builder*) mergeFrom:(Trade*) other;
- (Trade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Trade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (Trade_Builder*) setSequence:(int32_t) value;
- (Trade_Builder*) clearSequence;

- (BOOL) hasTradeTime;
- (int32_t) tradeTime;
- (Trade_Builder*) setTradeTime:(int32_t) value;
- (Trade_Builder*) clearTradeTime;

- (BOOL) hasBoard;
- (Board) board;
- (Trade_Builder*) setBoard:(Board) value;
- (Trade_Builder*) clearBoard;

- (BOOL) hasPrice;
- (int32_t) price;
- (Trade_Builder*) setPrice:(int32_t) value;
- (Trade_Builder*) clearPrice;

- (BOOL) hasVolume;
- (int32_t) volume;
- (Trade_Builder*) setVolume:(int32_t) value;
- (Trade_Builder*) clearVolume;

- (BOOL) hasBuyerType;
- (InvestorType) buyerType;
- (Trade_Builder*) setBuyerType:(InvestorType) value;
- (Trade_Builder*) clearBuyerType;

- (BOOL) hasSellerType;
- (InvestorType) sellerType;
- (Trade_Builder*) setSellerType:(InvestorType) value;
- (Trade_Builder*) clearSellerType;
@end

@interface KiTrade : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasBuyerBrokerId_:1;
  BOOL hasSellerBrokerId_:1;
  BOOL hasPrevious_:1;
  BOOL hasTrade_:1;
  int32_t codeId;
  int32_t buyerBrokerId;
  int32_t sellerBrokerId;
  int32_t previous;
  Trade* trade;
}
- (BOOL) hasCodeId;
- (BOOL) hasBuyerBrokerId;
- (BOOL) hasSellerBrokerId;
- (BOOL) hasPrevious;
- (BOOL) hasTrade;
@property (readonly) int32_t codeId;
@property (readonly) int32_t buyerBrokerId;
@property (readonly) int32_t sellerBrokerId;
@property (readonly) int32_t previous;
@property (readonly, strong) Trade* trade;

+ (KiTrade*) defaultInstance;
- (KiTrade*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiTrade_Builder*) builder;
+ (KiTrade_Builder*) builder;
+ (KiTrade_Builder*) builderWithPrototype:(KiTrade*) prototype;
- (KiTrade_Builder*) toBuilder;

+ (KiTrade*) parseFromData:(NSData*) data;
+ (KiTrade*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiTrade*) parseFromInputStream:(NSInputStream*) input;
+ (KiTrade*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiTrade_Builder : PBGeneratedMessage_Builder {
@private
  KiTrade* result;
}

- (KiTrade*) defaultInstance;

- (KiTrade_Builder*) clear;
- (KiTrade_Builder*) clone;

- (KiTrade*) build;
- (KiTrade*) buildPartial;

- (KiTrade_Builder*) mergeFrom:(KiTrade*) other;
- (KiTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiTrade_Builder*) setCodeId:(int32_t) value;
- (KiTrade_Builder*) clearCodeId;

- (BOOL) hasBuyerBrokerId;
- (int32_t) buyerBrokerId;
- (KiTrade_Builder*) setBuyerBrokerId:(int32_t) value;
- (KiTrade_Builder*) clearBuyerBrokerId;

- (BOOL) hasSellerBrokerId;
- (int32_t) sellerBrokerId;
- (KiTrade_Builder*) setSellerBrokerId:(int32_t) value;
- (KiTrade_Builder*) clearSellerBrokerId;

- (BOOL) hasPrevious;
- (int32_t) previous;
- (KiTrade_Builder*) setPrevious:(int32_t) value;
- (KiTrade_Builder*) clearPrevious;

- (BOOL) hasTrade;
- (Trade*) trade;
- (KiTrade_Builder*) setTrade:(Trade*) value;
- (KiTrade_Builder*) setTradeBuilder:(Trade_Builder*) builderForValue;
- (KiTrade_Builder*) mergeTrade:(Trade*) value;
- (KiTrade_Builder*) clearTrade;
@end

@interface TNumber : PBGeneratedMessage {
@private
  BOOL hasTradeNo_:1;
  BOOL hasBuyerOrderNo_:1;
  BOOL hasSellerOrderNo_:1;
  int32_t tradeNo;
  int32_t buyerOrderNo;
  int32_t sellerOrderNo;
}
- (BOOL) hasTradeNo;
- (BOOL) hasBuyerOrderNo;
- (BOOL) hasSellerOrderNo;
@property (readonly) int32_t tradeNo;
@property (readonly) int32_t buyerOrderNo;
@property (readonly) int32_t sellerOrderNo;

+ (TNumber*) defaultInstance;
- (TNumber*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TNumber_Builder*) builder;
+ (TNumber_Builder*) builder;
+ (TNumber_Builder*) builderWithPrototype:(TNumber*) prototype;
- (TNumber_Builder*) toBuilder;

+ (TNumber*) parseFromData:(NSData*) data;
+ (TNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TNumber*) parseFromInputStream:(NSInputStream*) input;
+ (TNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TNumber_Builder : PBGeneratedMessage_Builder {
@private
  TNumber* result;
}

- (TNumber*) defaultInstance;

- (TNumber_Builder*) clear;
- (TNumber_Builder*) clone;

- (TNumber*) build;
- (TNumber*) buildPartial;

- (TNumber_Builder*) mergeFrom:(TNumber*) other;
- (TNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTradeNo;
- (int32_t) tradeNo;
- (TNumber_Builder*) setTradeNo:(int32_t) value;
- (TNumber_Builder*) clearTradeNo;

- (BOOL) hasBuyerOrderNo;
- (int32_t) buyerOrderNo;
- (TNumber_Builder*) setBuyerOrderNo:(int32_t) value;
- (TNumber_Builder*) clearBuyerOrderNo;

- (BOOL) hasSellerOrderNo;
- (int32_t) sellerOrderNo;
- (TNumber_Builder*) setSellerOrderNo:(int32_t) value;
- (TNumber_Builder*) clearSellerOrderNo;
@end

@interface KiTradeDetail : PBGeneratedMessage {
@private
  BOOL hasNumber_:1;
  BOOL hasDetail_:1;
  TNumber* number;
  KiTrade* detail;
}
- (BOOL) hasNumber;
- (BOOL) hasDetail;
@property (readonly, strong) TNumber* number;
@property (readonly, strong) KiTrade* detail;

+ (KiTradeDetail*) defaultInstance;
- (KiTradeDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiTradeDetail_Builder*) builder;
+ (KiTradeDetail_Builder*) builder;
+ (KiTradeDetail_Builder*) builderWithPrototype:(KiTradeDetail*) prototype;
- (KiTradeDetail_Builder*) toBuilder;

+ (KiTradeDetail*) parseFromData:(NSData*) data;
+ (KiTradeDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiTradeDetail*) parseFromInputStream:(NSInputStream*) input;
+ (KiTradeDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiTradeDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiTradeDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiTradeDetail_Builder : PBGeneratedMessage_Builder {
@private
  KiTradeDetail* result;
}

- (KiTradeDetail*) defaultInstance;

- (KiTradeDetail_Builder*) clear;
- (KiTradeDetail_Builder*) clone;

- (KiTradeDetail*) build;
- (KiTradeDetail*) buildPartial;

- (KiTradeDetail_Builder*) mergeFrom:(KiTradeDetail*) other;
- (KiTradeDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiTradeDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNumber;
- (TNumber*) number;
- (KiTradeDetail_Builder*) setNumber:(TNumber*) value;
- (KiTradeDetail_Builder*) setNumberBuilder:(TNumber_Builder*) builderForValue;
- (KiTradeDetail_Builder*) mergeNumber:(TNumber*) value;
- (KiTradeDetail_Builder*) clearNumber;

- (BOOL) hasDetail;
- (KiTrade*) detail;
- (KiTradeDetail_Builder*) setDetail:(KiTrade*) value;
- (KiTradeDetail_Builder*) setDetailBuilder:(KiTrade_Builder*) builderForValue;
- (KiTradeDetail_Builder*) mergeDetail:(KiTrade*) value;
- (KiTradeDetail_Builder*) clearDetail;
@end

@interface IdxOrder : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasBroker_:1;
  BOOL hasBestBidOffer_:1;
  BOOL hasOrder_:1;
  NSString* code;
  NSString* broker;
  BestBidOffer* bestBidOffer;
  Order* order;
}
- (BOOL) hasCode;
- (BOOL) hasBroker;
- (BOOL) hasBestBidOffer;
- (BOOL) hasOrder;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* broker;
@property (readonly, strong) BestBidOffer* bestBidOffer;
@property (readonly, strong) Order* order;

+ (IdxOrder*) defaultInstance;
- (IdxOrder*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxOrder_Builder*) builder;
+ (IdxOrder_Builder*) builder;
+ (IdxOrder_Builder*) builderWithPrototype:(IdxOrder*) prototype;
- (IdxOrder_Builder*) toBuilder;

+ (IdxOrder*) parseFromData:(NSData*) data;
+ (IdxOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxOrder*) parseFromInputStream:(NSInputStream*) input;
+ (IdxOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxOrder_Builder : PBGeneratedMessage_Builder {
@private
  IdxOrder* result;
}

- (IdxOrder*) defaultInstance;

- (IdxOrder_Builder*) clear;
- (IdxOrder_Builder*) clone;

- (IdxOrder*) build;
- (IdxOrder*) buildPartial;

- (IdxOrder_Builder*) mergeFrom:(IdxOrder*) other;
- (IdxOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxOrder_Builder*) setCode:(NSString*) value;
- (IdxOrder_Builder*) clearCode;

- (BOOL) hasBroker;
- (NSString*) broker;
- (IdxOrder_Builder*) setBroker:(NSString*) value;
- (IdxOrder_Builder*) clearBroker;

- (BOOL) hasBestBidOffer;
- (BestBidOffer*) bestBidOffer;
- (IdxOrder_Builder*) setBestBidOffer:(BestBidOffer*) value;
- (IdxOrder_Builder*) setBestBidOfferBuilder:(BestBidOffer_Builder*) builderForValue;
- (IdxOrder_Builder*) mergeBestBidOffer:(BestBidOffer*) value;
- (IdxOrder_Builder*) clearBestBidOffer;

- (BOOL) hasOrder;
- (Order*) order;
- (IdxOrder_Builder*) setOrder:(Order*) value;
- (IdxOrder_Builder*) setOrderBuilder:(Order_Builder*) builderForValue;
- (IdxOrder_Builder*) mergeOrder:(Order*) value;
- (IdxOrder_Builder*) clearOrder;
@end

@interface Order : PBGeneratedMessage {
@private
  BOOL hasOrderNo_:1;
  BOOL hasSequence_:1;
  BOOL hasOrderTime_:1;
  BOOL hasPrice_:1;
  BOOL hasVolume_:1;
  BOOL hasBalance_:1;
  BOOL hasOrderRef_:1;
  BOOL hasOrderCommand_:1;
  BOOL hasBoard_:1;
  BOOL hasInvestorType_:1;
  int32_t orderNo;
  int32_t sequence;
  int32_t orderTime;
  int32_t price;
  int32_t volume;
  int32_t balance;
  int32_t orderRef;
  OrderCommand orderCommand;
  Board board;
  InvestorType investorType;
}
- (BOOL) hasOrderNo;
- (BOOL) hasSequence;
- (BOOL) hasOrderTime;
- (BOOL) hasOrderCommand;
- (BOOL) hasBoard;
- (BOOL) hasPrice;
- (BOOL) hasVolume;
- (BOOL) hasBalance;
- (BOOL) hasInvestorType;
- (BOOL) hasOrderRef;
@property (readonly) int32_t orderNo;
@property (readonly) int32_t sequence;
@property (readonly) int32_t orderTime;
@property (readonly) OrderCommand orderCommand;
@property (readonly) Board board;
@property (readonly) int32_t price;
@property (readonly) int32_t volume;
@property (readonly) int32_t balance;
@property (readonly) InvestorType investorType;
@property (readonly) int32_t orderRef;

+ (Order*) defaultInstance;
- (Order*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Order_Builder*) builder;
+ (Order_Builder*) builder;
+ (Order_Builder*) builderWithPrototype:(Order*) prototype;
- (Order_Builder*) toBuilder;

+ (Order*) parseFromData:(NSData*) data;
+ (Order*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Order*) parseFromInputStream:(NSInputStream*) input;
+ (Order*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Order*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Order*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Order_Builder : PBGeneratedMessage_Builder {
@private
  Order* result;
}

- (Order*) defaultInstance;

- (Order_Builder*) clear;
- (Order_Builder*) clone;

- (Order*) build;
- (Order*) buildPartial;

- (Order_Builder*) mergeFrom:(Order*) other;
- (Order_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Order_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOrderNo;
- (int32_t) orderNo;
- (Order_Builder*) setOrderNo:(int32_t) value;
- (Order_Builder*) clearOrderNo;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (Order_Builder*) setSequence:(int32_t) value;
- (Order_Builder*) clearSequence;

- (BOOL) hasOrderTime;
- (int32_t) orderTime;
- (Order_Builder*) setOrderTime:(int32_t) value;
- (Order_Builder*) clearOrderTime;

- (BOOL) hasOrderCommand;
- (OrderCommand) orderCommand;
- (Order_Builder*) setOrderCommand:(OrderCommand) value;
- (Order_Builder*) clearOrderCommand;

- (BOOL) hasBoard;
- (Board) board;
- (Order_Builder*) setBoard:(Board) value;
- (Order_Builder*) clearBoard;

- (BOOL) hasPrice;
- (int32_t) price;
- (Order_Builder*) setPrice:(int32_t) value;
- (Order_Builder*) clearPrice;

- (BOOL) hasVolume;
- (int32_t) volume;
- (Order_Builder*) setVolume:(int32_t) value;
- (Order_Builder*) clearVolume;

- (BOOL) hasBalance;
- (int32_t) balance;
- (Order_Builder*) setBalance:(int32_t) value;
- (Order_Builder*) clearBalance;

- (BOOL) hasInvestorType;
- (InvestorType) investorType;
- (Order_Builder*) setInvestorType:(InvestorType) value;
- (Order_Builder*) clearInvestorType;

- (BOOL) hasOrderRef;
- (int32_t) orderRef;
- (Order_Builder*) setOrderRef:(int32_t) value;
- (Order_Builder*) clearOrderRef;
@end

@interface KiOrder : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasBrokerId_:1;
  BOOL hasOrder_:1;
  int32_t codeId;
  int32_t brokerId;
  Order* order;
}
- (BOOL) hasCodeId;
- (BOOL) hasBrokerId;
- (BOOL) hasOrder;
@property (readonly) int32_t codeId;
@property (readonly) int32_t brokerId;
@property (readonly, strong) Order* order;

+ (KiOrder*) defaultInstance;
- (KiOrder*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiOrder_Builder*) builder;
+ (KiOrder_Builder*) builder;
+ (KiOrder_Builder*) builderWithPrototype:(KiOrder*) prototype;
- (KiOrder_Builder*) toBuilder;

+ (KiOrder*) parseFromData:(NSData*) data;
+ (KiOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiOrder*) parseFromInputStream:(NSInputStream*) input;
+ (KiOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiOrder_Builder : PBGeneratedMessage_Builder {
@private
  KiOrder* result;
}

- (KiOrder*) defaultInstance;

- (KiOrder_Builder*) clear;
- (KiOrder_Builder*) clone;

- (KiOrder*) build;
- (KiOrder*) buildPartial;

- (KiOrder_Builder*) mergeFrom:(KiOrder*) other;
- (KiOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (KiOrder_Builder*) setCodeId:(int32_t) value;
- (KiOrder_Builder*) clearCodeId;

- (BOOL) hasBrokerId;
- (int32_t) brokerId;
- (KiOrder_Builder*) setBrokerId:(int32_t) value;
- (KiOrder_Builder*) clearBrokerId;

- (BOOL) hasOrder;
- (Order*) order;
- (KiOrder_Builder*) setOrder:(Order*) value;
- (KiOrder_Builder*) setOrderBuilder:(Order_Builder*) builderForValue;
- (KiOrder_Builder*) mergeOrder:(Order*) value;
- (KiOrder_Builder*) clearOrder;
@end

@interface OrderInfo : PBGeneratedMessage {
@private
  BOOL hasBalance_:1;
  BOOL hasQueue_:1;
  BOOL hasLots_:1;
  BOOL hasNQueue_:1;
  BOOL hasNLots_:1;
  BOOL hasOrderRef_:1;
  BOOL hasBrokerId_:1;
  BOOL hasStatus_:1;
  int32_t balance;
  int32_t queue;
  int32_t lots;
  int32_t nQueue;
  int32_t nLots;
  int32_t orderRef;
  int32_t brokerId;
  OrderStatus status;
}
- (BOOL) hasBalance;
- (BOOL) hasStatus;
- (BOOL) hasQueue;
- (BOOL) hasLots;
- (BOOL) hasNQueue;
- (BOOL) hasNLots;
- (BOOL) hasOrderRef;
- (BOOL) hasBrokerId;
@property (readonly) int32_t balance;
@property (readonly) OrderStatus status;
@property (readonly) int32_t queue;
@property (readonly) int32_t lots;
@property (readonly) int32_t nQueue;
@property (readonly) int32_t nLots;
@property (readonly) int32_t orderRef;
@property (readonly) int32_t brokerId;

+ (OrderInfo*) defaultInstance;
- (OrderInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OrderInfo_Builder*) builder;
+ (OrderInfo_Builder*) builder;
+ (OrderInfo_Builder*) builderWithPrototype:(OrderInfo*) prototype;
- (OrderInfo_Builder*) toBuilder;

+ (OrderInfo*) parseFromData:(NSData*) data;
+ (OrderInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderInfo*) parseFromInputStream:(NSInputStream*) input;
+ (OrderInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OrderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OrderInfo_Builder : PBGeneratedMessage_Builder {
@private
  OrderInfo* result;
}

- (OrderInfo*) defaultInstance;

- (OrderInfo_Builder*) clear;
- (OrderInfo_Builder*) clone;

- (OrderInfo*) build;
- (OrderInfo*) buildPartial;

- (OrderInfo_Builder*) mergeFrom:(OrderInfo*) other;
- (OrderInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OrderInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBalance;
- (int32_t) balance;
- (OrderInfo_Builder*) setBalance:(int32_t) value;
- (OrderInfo_Builder*) clearBalance;

- (BOOL) hasStatus;
- (OrderStatus) status;
- (OrderInfo_Builder*) setStatus:(OrderStatus) value;
- (OrderInfo_Builder*) clearStatus;

- (BOOL) hasQueue;
- (int32_t) queue;
- (OrderInfo_Builder*) setQueue:(int32_t) value;
- (OrderInfo_Builder*) clearQueue;

- (BOOL) hasLots;
- (int32_t) lots;
- (OrderInfo_Builder*) setLots:(int32_t) value;
- (OrderInfo_Builder*) clearLots;

- (BOOL) hasNQueue;
- (int32_t) nQueue;
- (OrderInfo_Builder*) setNQueue:(int32_t) value;
- (OrderInfo_Builder*) clearNQueue;

- (BOOL) hasNLots;
- (int32_t) nLots;
- (OrderInfo_Builder*) setNLots:(int32_t) value;
- (OrderInfo_Builder*) clearNLots;

- (BOOL) hasOrderRef;
- (int32_t) orderRef;
- (OrderInfo_Builder*) setOrderRef:(int32_t) value;
- (OrderInfo_Builder*) clearOrderRef;

- (BOOL) hasBrokerId;
- (int32_t) brokerId;
- (OrderInfo_Builder*) setBrokerId:(int32_t) value;
- (OrderInfo_Builder*) clearBrokerId;
@end

@interface KiOrderDetail : PBGeneratedMessage {
@private
  BOOL hasDetail_:1;
  BOOL hasInfo_:1;
  KiOrder* detail;
  OrderInfo* info;
}
- (BOOL) hasDetail;
- (BOOL) hasInfo;
@property (readonly, strong) KiOrder* detail;
@property (readonly, strong) OrderInfo* info;

+ (KiOrderDetail*) defaultInstance;
- (KiOrderDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiOrderDetail_Builder*) builder;
+ (KiOrderDetail_Builder*) builder;
+ (KiOrderDetail_Builder*) builderWithPrototype:(KiOrderDetail*) prototype;
- (KiOrderDetail_Builder*) toBuilder;

+ (KiOrderDetail*) parseFromData:(NSData*) data;
+ (KiOrderDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiOrderDetail*) parseFromInputStream:(NSInputStream*) input;
+ (KiOrderDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiOrderDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiOrderDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiOrderDetail_Builder : PBGeneratedMessage_Builder {
@private
  KiOrderDetail* result;
}

- (KiOrderDetail*) defaultInstance;

- (KiOrderDetail_Builder*) clear;
- (KiOrderDetail_Builder*) clone;

- (KiOrderDetail*) build;
- (KiOrderDetail*) buildPartial;

- (KiOrderDetail_Builder*) mergeFrom:(KiOrderDetail*) other;
- (KiOrderDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiOrderDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDetail;
- (KiOrder*) detail;
- (KiOrderDetail_Builder*) setDetail:(KiOrder*) value;
- (KiOrderDetail_Builder*) setDetailBuilder:(KiOrder_Builder*) builderForValue;
- (KiOrderDetail_Builder*) mergeDetail:(KiOrder*) value;
- (KiOrderDetail_Builder*) clearDetail;

- (BOOL) hasInfo;
- (OrderInfo*) info;
- (KiOrderDetail_Builder*) setInfo:(OrderInfo*) value;
- (KiOrderDetail_Builder*) setInfoBuilder:(OrderInfo_Builder*) builderForValue;
- (KiOrderDetail_Builder*) mergeInfo:(OrderInfo*) value;
- (KiOrderDetail_Builder*) clearInfo;
@end

@interface IdxBrokerData : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasStatus_:1;
  NSString* code;
  NSString* name;
  Status status;
}
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) Status status;

+ (IdxBrokerData*) defaultInstance;
- (IdxBrokerData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IdxBrokerData_Builder*) builder;
+ (IdxBrokerData_Builder*) builder;
+ (IdxBrokerData_Builder*) builderWithPrototype:(IdxBrokerData*) prototype;
- (IdxBrokerData_Builder*) toBuilder;

+ (IdxBrokerData*) parseFromData:(NSData*) data;
+ (IdxBrokerData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxBrokerData*) parseFromInputStream:(NSInputStream*) input;
+ (IdxBrokerData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IdxBrokerData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IdxBrokerData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IdxBrokerData_Builder : PBGeneratedMessage_Builder {
@private
  IdxBrokerData* result;
}

- (IdxBrokerData*) defaultInstance;

- (IdxBrokerData_Builder*) clear;
- (IdxBrokerData_Builder*) clone;

- (IdxBrokerData*) build;
- (IdxBrokerData*) buildPartial;

- (IdxBrokerData_Builder*) mergeFrom:(IdxBrokerData*) other;
- (IdxBrokerData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IdxBrokerData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (IdxBrokerData_Builder*) setCode:(NSString*) value;
- (IdxBrokerData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (IdxBrokerData_Builder*) setName:(NSString*) value;
- (IdxBrokerData_Builder*) clearName;

- (BOOL) hasStatus;
- (Status) status;
- (IdxBrokerData_Builder*) setStatus:(Status) value;
- (IdxBrokerData_Builder*) clearStatus;
@end

@interface KiBrokerData : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasStatus_:1;
  BOOL hasType_:1;
  int32_t id;
  NSString* code;
  NSString* name;
  Status status;
  InvestorType type;
}
- (BOOL) hasId;
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasStatus;
- (BOOL) hasType;
@property (readonly) int32_t id;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) Status status;
@property (readonly) InvestorType type;

+ (KiBrokerData*) defaultInstance;
- (KiBrokerData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KiBrokerData_Builder*) builder;
+ (KiBrokerData_Builder*) builder;
+ (KiBrokerData_Builder*) builderWithPrototype:(KiBrokerData*) prototype;
- (KiBrokerData_Builder*) toBuilder;

+ (KiBrokerData*) parseFromData:(NSData*) data;
+ (KiBrokerData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiBrokerData*) parseFromInputStream:(NSInputStream*) input;
+ (KiBrokerData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KiBrokerData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KiBrokerData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KiBrokerData_Builder : PBGeneratedMessage_Builder {
@private
  KiBrokerData* result;
}

- (KiBrokerData*) defaultInstance;

- (KiBrokerData_Builder*) clear;
- (KiBrokerData_Builder*) clone;

- (KiBrokerData*) build;
- (KiBrokerData*) buildPartial;

- (KiBrokerData_Builder*) mergeFrom:(KiBrokerData*) other;
- (KiBrokerData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KiBrokerData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (KiBrokerData_Builder*) setId:(int32_t) value;
- (KiBrokerData_Builder*) clearId;

- (BOOL) hasCode;
- (NSString*) code;
- (KiBrokerData_Builder*) setCode:(NSString*) value;
- (KiBrokerData_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (KiBrokerData_Builder*) setName:(NSString*) value;
- (KiBrokerData_Builder*) clearName;

- (BOOL) hasStatus;
- (Status) status;
- (KiBrokerData_Builder*) setStatus:(Status) value;
- (KiBrokerData_Builder*) clearStatus;

- (BOOL) hasType;
- (InvestorType) type;
- (KiBrokerData_Builder*) setType:(InvestorType) value;
- (KiBrokerData_Builder*) clearType;
@end

@interface NetBuySell : PBGeneratedMessage {
@private
  BOOL hasCodeId_:1;
  BOOL hasBoard_:1;
  int32_t codeId;
  Board board;
  NSMutableArray * transactionArray;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly, strong) NSArray * transaction;
- (Transaction*)transactionAtIndex:(NSUInteger)index;

+ (NetBuySell*) defaultInstance;
- (NetBuySell*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NetBuySell_Builder*) builder;
+ (NetBuySell_Builder*) builder;
+ (NetBuySell_Builder*) builderWithPrototype:(NetBuySell*) prototype;
- (NetBuySell_Builder*) toBuilder;

+ (NetBuySell*) parseFromData:(NSData*) data;
+ (NetBuySell*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NetBuySell*) parseFromInputStream:(NSInputStream*) input;
+ (NetBuySell*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NetBuySell*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NetBuySell*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NetBuySell_Builder : PBGeneratedMessage_Builder {
@private
  NetBuySell* result;
}

- (NetBuySell*) defaultInstance;

- (NetBuySell_Builder*) clear;
- (NetBuySell_Builder*) clone;

- (NetBuySell*) build;
- (NetBuySell*) buildPartial;

- (NetBuySell_Builder*) mergeFrom:(NetBuySell*) other;
- (NetBuySell_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NetBuySell_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (NetBuySell_Builder*) setCodeId:(int32_t) value;
- (NetBuySell_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (NetBuySell_Builder*) setBoard:(Board) value;
- (NetBuySell_Builder*) clearBoard;

- (NSMutableArray *)transaction;
- (Transaction*)transactionAtIndex:(NSUInteger)index;
- (NetBuySell_Builder *)addTransaction:(Transaction*)value;
- (NetBuySell_Builder *)setTransactionArray:(NSArray *)array;
- (NetBuySell_Builder *)clearTransaction;
@end

@interface Transaction : PBGeneratedMessage {
@private
  BOOL hasForeignBought_:1;
  BOOL hasForeignSold_:1;
  BOOL hasDomesticBought_:1;
  BOOL hasDomesticSold_:1;
  BOOL hasCodeId_:1;
  BOOL hasSequence_:1;
  BOOL hasCode_:1;
  BOOL hasBuy_:1;
  BOOL hasSell_:1;
  BOOL hasBoard_:1;
  int64_t foreignBought;
  int64_t foreignSold;
  int64_t domesticBought;
  int64_t domesticSold;
  int32_t codeId;
  int32_t sequence;
  NSString* code;
  TransactionDetail* buy;
  TransactionDetail* sell;
  Board board;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
- (BOOL) hasSequence;
- (BOOL) hasBuy;
- (BOOL) hasSell;
- (BOOL) hasForeignBought;
- (BOOL) hasForeignSold;
- (BOOL) hasDomesticBought;
- (BOOL) hasDomesticSold;
- (BOOL) hasCode;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly) int32_t sequence;
@property (readonly, strong) TransactionDetail* buy;
@property (readonly, strong) TransactionDetail* sell;
@property (readonly) int64_t foreignBought;
@property (readonly) int64_t foreignSold;
@property (readonly) int64_t domesticBought;
@property (readonly) int64_t domesticSold;
@property (readonly, strong) NSString* code;

+ (Transaction*) defaultInstance;
- (Transaction*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Transaction_Builder*) builder;
+ (Transaction_Builder*) builder;
+ (Transaction_Builder*) builderWithPrototype:(Transaction*) prototype;
- (Transaction_Builder*) toBuilder;

+ (Transaction*) parseFromData:(NSData*) data;
+ (Transaction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Transaction*) parseFromInputStream:(NSInputStream*) input;
+ (Transaction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Transaction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Transaction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Transaction_Builder : PBGeneratedMessage_Builder {
@private
  Transaction* result;
}

- (Transaction*) defaultInstance;

- (Transaction_Builder*) clear;
- (Transaction_Builder*) clone;

- (Transaction*) build;
- (Transaction*) buildPartial;

- (Transaction_Builder*) mergeFrom:(Transaction*) other;
- (Transaction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Transaction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (Transaction_Builder*) setCodeId:(int32_t) value;
- (Transaction_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (Transaction_Builder*) setBoard:(Board) value;
- (Transaction_Builder*) clearBoard;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (Transaction_Builder*) setSequence:(int32_t) value;
- (Transaction_Builder*) clearSequence;

- (BOOL) hasBuy;
- (TransactionDetail*) buy;
- (Transaction_Builder*) setBuy:(TransactionDetail*) value;
- (Transaction_Builder*) setBuyBuilder:(TransactionDetail_Builder*) builderForValue;
- (Transaction_Builder*) mergeBuy:(TransactionDetail*) value;
- (Transaction_Builder*) clearBuy;

- (BOOL) hasSell;
- (TransactionDetail*) sell;
- (Transaction_Builder*) setSell:(TransactionDetail*) value;
- (Transaction_Builder*) setSellBuilder:(TransactionDetail_Builder*) builderForValue;
- (Transaction_Builder*) mergeSell:(TransactionDetail*) value;
- (Transaction_Builder*) clearSell;

- (BOOL) hasForeignBought;
- (int64_t) foreignBought;
- (Transaction_Builder*) setForeignBought:(int64_t) value;
- (Transaction_Builder*) clearForeignBought;

- (BOOL) hasForeignSold;
- (int64_t) foreignSold;
- (Transaction_Builder*) setForeignSold:(int64_t) value;
- (Transaction_Builder*) clearForeignSold;

- (BOOL) hasDomesticBought;
- (int64_t) domesticBought;
- (Transaction_Builder*) setDomesticBought:(int64_t) value;
- (Transaction_Builder*) clearDomesticBought;

- (BOOL) hasDomesticSold;
- (int64_t) domesticSold;
- (Transaction_Builder*) setDomesticSold:(int64_t) value;
- (Transaction_Builder*) clearDomesticSold;

- (BOOL) hasCode;
- (NSString*) code;
- (Transaction_Builder*) setCode:(NSString*) value;
- (Transaction_Builder*) clearCode;
@end

@interface TransactionDetail : PBGeneratedMessage {
@private
  BOOL hasVolume_:1;
  BOOL hasValue_:1;
  BOOL hasFrequency_:1;
  int64_t volume;
  int64_t value;
  int32_t frequency;
}
- (BOOL) hasVolume;
- (BOOL) hasValue;
- (BOOL) hasFrequency;
@property (readonly) int64_t volume;
@property (readonly) int64_t value;
@property (readonly) int32_t frequency;

+ (TransactionDetail*) defaultInstance;
- (TransactionDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TransactionDetail_Builder*) builder;
+ (TransactionDetail_Builder*) builder;
+ (TransactionDetail_Builder*) builderWithPrototype:(TransactionDetail*) prototype;
- (TransactionDetail_Builder*) toBuilder;

+ (TransactionDetail*) parseFromData:(NSData*) data;
+ (TransactionDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TransactionDetail*) parseFromInputStream:(NSInputStream*) input;
+ (TransactionDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TransactionDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TransactionDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TransactionDetail_Builder : PBGeneratedMessage_Builder {
@private
  TransactionDetail* result;
}

- (TransactionDetail*) defaultInstance;

- (TransactionDetail_Builder*) clear;
- (TransactionDetail_Builder*) clone;

- (TransactionDetail*) build;
- (TransactionDetail*) buildPartial;

- (TransactionDetail_Builder*) mergeFrom:(TransactionDetail*) other;
- (TransactionDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TransactionDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVolume;
- (int64_t) volume;
- (TransactionDetail_Builder*) setVolume:(int64_t) value;
- (TransactionDetail_Builder*) clearVolume;

- (BOOL) hasValue;
- (int64_t) value;
- (TransactionDetail_Builder*) setValue:(int64_t) value;
- (TransactionDetail_Builder*) clearValue;

- (BOOL) hasFrequency;
- (int32_t) frequency;
- (TransactionDetail_Builder*) setFrequency:(int32_t) value;
- (TransactionDetail_Builder*) clearFrequency;
@end

@interface FDSummary : PBGeneratedMessage {
@private
  BOOL hasSequence_:1;
  BOOL hasFBuy_:1;
  BOOL hasFSell_:1;
  BOOL hasDBuy_:1;
  BOOL hasDSell_:1;
  int32_t sequence;
  TransactionDetail* fBuy;
  TransactionDetail* fSell;
  TransactionDetail* dBuy;
  TransactionDetail* dSell;
}
- (BOOL) hasSequence;
- (BOOL) hasFBuy;
- (BOOL) hasFSell;
- (BOOL) hasDBuy;
- (BOOL) hasDSell;
@property (readonly) int32_t sequence;
@property (readonly, strong) TransactionDetail* fBuy;
@property (readonly, strong) TransactionDetail* fSell;
@property (readonly, strong) TransactionDetail* dBuy;
@property (readonly, strong) TransactionDetail* dSell;

+ (FDSummary*) defaultInstance;
- (FDSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FDSummary_Builder*) builder;
+ (FDSummary_Builder*) builder;
+ (FDSummary_Builder*) builderWithPrototype:(FDSummary*) prototype;
- (FDSummary_Builder*) toBuilder;

+ (FDSummary*) parseFromData:(NSData*) data;
+ (FDSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FDSummary*) parseFromInputStream:(NSInputStream*) input;
+ (FDSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FDSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FDSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FDSummary_Builder : PBGeneratedMessage_Builder {
@private
  FDSummary* result;
}

- (FDSummary*) defaultInstance;

- (FDSummary_Builder*) clear;
- (FDSummary_Builder*) clone;

- (FDSummary*) build;
- (FDSummary*) buildPartial;

- (FDSummary_Builder*) mergeFrom:(FDSummary*) other;
- (FDSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FDSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (FDSummary_Builder*) setSequence:(int32_t) value;
- (FDSummary_Builder*) clearSequence;

- (BOOL) hasFBuy;
- (TransactionDetail*) fBuy;
- (FDSummary_Builder*) setFBuy:(TransactionDetail*) value;
- (FDSummary_Builder*) setFBuyBuilder:(TransactionDetail_Builder*) builderForValue;
- (FDSummary_Builder*) mergeFBuy:(TransactionDetail*) value;
- (FDSummary_Builder*) clearFBuy;

- (BOOL) hasFSell;
- (TransactionDetail*) fSell;
- (FDSummary_Builder*) setFSell:(TransactionDetail*) value;
- (FDSummary_Builder*) setFSellBuilder:(TransactionDetail_Builder*) builderForValue;
- (FDSummary_Builder*) mergeFSell:(TransactionDetail*) value;
- (FDSummary_Builder*) clearFSell;

- (BOOL) hasDBuy;
- (TransactionDetail*) dBuy;
- (FDSummary_Builder*) setDBuy:(TransactionDetail*) value;
- (FDSummary_Builder*) setDBuyBuilder:(TransactionDetail_Builder*) builderForValue;
- (FDSummary_Builder*) mergeDBuy:(TransactionDetail*) value;
- (FDSummary_Builder*) clearDBuy;

- (BOOL) hasDSell;
- (TransactionDetail*) dSell;
- (FDSummary_Builder*) setDSell:(TransactionDetail*) value;
- (FDSummary_Builder*) setDSellBuilder:(TransactionDetail_Builder*) builderForValue;
- (FDSummary_Builder*) mergeDSell:(TransactionDetail*) value;
- (FDSummary_Builder*) clearDSell;
@end

@interface MarketSummary : PBGeneratedMessage {
@private
  BOOL hasStockRg_:1;
  BOOL hasStockNg_:1;
  BOOL hasStockTn_:1;
  BOOL hasWarantRg_:1;
  BOOL hasWarantNg_:1;
  BOOL hasWarantTn_:1;
  BOOL hasRightRg_:1;
  BOOL hasRightNg_:1;
  BOOL hasRightTn_:1;
  TransactionDetail* stockRg;
  TransactionDetail* stockNg;
  TransactionDetail* stockTn;
  TransactionDetail* warantRg;
  TransactionDetail* warantNg;
  TransactionDetail* warantTn;
  TransactionDetail* rightRg;
  TransactionDetail* rightNg;
  TransactionDetail* rightTn;
}
- (BOOL) hasStockRg;
- (BOOL) hasStockNg;
- (BOOL) hasStockTn;
- (BOOL) hasWarantRg;
- (BOOL) hasWarantNg;
- (BOOL) hasWarantTn;
- (BOOL) hasRightRg;
- (BOOL) hasRightNg;
- (BOOL) hasRightTn;
@property (readonly, strong) TransactionDetail* stockRg;
@property (readonly, strong) TransactionDetail* stockNg;
@property (readonly, strong) TransactionDetail* stockTn;
@property (readonly, strong) TransactionDetail* warantRg;
@property (readonly, strong) TransactionDetail* warantNg;
@property (readonly, strong) TransactionDetail* warantTn;
@property (readonly, strong) TransactionDetail* rightRg;
@property (readonly, strong) TransactionDetail* rightNg;
@property (readonly, strong) TransactionDetail* rightTn;

+ (MarketSummary*) defaultInstance;
- (MarketSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MarketSummary_Builder*) builder;
+ (MarketSummary_Builder*) builder;
+ (MarketSummary_Builder*) builderWithPrototype:(MarketSummary*) prototype;
- (MarketSummary_Builder*) toBuilder;

+ (MarketSummary*) parseFromData:(NSData*) data;
+ (MarketSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarketSummary*) parseFromInputStream:(NSInputStream*) input;
+ (MarketSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarketSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MarketSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MarketSummary_Builder : PBGeneratedMessage_Builder {
@private
  MarketSummary* result;
}

- (MarketSummary*) defaultInstance;

- (MarketSummary_Builder*) clear;
- (MarketSummary_Builder*) clone;

- (MarketSummary*) build;
- (MarketSummary*) buildPartial;

- (MarketSummary_Builder*) mergeFrom:(MarketSummary*) other;
- (MarketSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MarketSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStockRg;
- (TransactionDetail*) stockRg;
- (MarketSummary_Builder*) setStockRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setStockRgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeStockRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearStockRg;

- (BOOL) hasStockNg;
- (TransactionDetail*) stockNg;
- (MarketSummary_Builder*) setStockNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setStockNgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeStockNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearStockNg;

- (BOOL) hasStockTn;
- (TransactionDetail*) stockTn;
- (MarketSummary_Builder*) setStockTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) setStockTnBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeStockTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearStockTn;

- (BOOL) hasWarantRg;
- (TransactionDetail*) warantRg;
- (MarketSummary_Builder*) setWarantRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setWarantRgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeWarantRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearWarantRg;

- (BOOL) hasWarantNg;
- (TransactionDetail*) warantNg;
- (MarketSummary_Builder*) setWarantNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setWarantNgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeWarantNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearWarantNg;

- (BOOL) hasWarantTn;
- (TransactionDetail*) warantTn;
- (MarketSummary_Builder*) setWarantTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) setWarantTnBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeWarantTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearWarantTn;

- (BOOL) hasRightRg;
- (TransactionDetail*) rightRg;
- (MarketSummary_Builder*) setRightRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setRightRgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeRightRg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearRightRg;

- (BOOL) hasRightNg;
- (TransactionDetail*) rightNg;
- (MarketSummary_Builder*) setRightNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) setRightNgBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeRightNg:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearRightNg;

- (BOOL) hasRightTn;
- (TransactionDetail*) rightTn;
- (MarketSummary_Builder*) setRightTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) setRightTnBuilder:(TransactionDetail_Builder*) builderForValue;
- (MarketSummary_Builder*) mergeRightTn:(TransactionDetail*) value;
- (MarketSummary_Builder*) clearRightTn;
@end

@interface BestBidOffer : PBGeneratedMessage {
@private
  BOOL hasBidVolume_:1;
  BOOL hasOfferVolume_:1;
  BOOL hasBidPrice_:1;
  BOOL hasOfferPrice_:1;
  int64_t bidVolume;
  int64_t offerVolume;
  int32_t bidPrice;
  int32_t offerPrice;
}
- (BOOL) hasBidPrice;
- (BOOL) hasBidVolume;
- (BOOL) hasOfferPrice;
- (BOOL) hasOfferVolume;
@property (readonly) int32_t bidPrice;
@property (readonly) int64_t bidVolume;
@property (readonly) int32_t offerPrice;
@property (readonly) int64_t offerVolume;

+ (BestBidOffer*) defaultInstance;
- (BestBidOffer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BestBidOffer_Builder*) builder;
+ (BestBidOffer_Builder*) builder;
+ (BestBidOffer_Builder*) builderWithPrototype:(BestBidOffer*) prototype;
- (BestBidOffer_Builder*) toBuilder;

+ (BestBidOffer*) parseFromData:(NSData*) data;
+ (BestBidOffer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BestBidOffer*) parseFromInputStream:(NSInputStream*) input;
+ (BestBidOffer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BestBidOffer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BestBidOffer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BestBidOffer_Builder : PBGeneratedMessage_Builder {
@private
  BestBidOffer* result;
}

- (BestBidOffer*) defaultInstance;

- (BestBidOffer_Builder*) clear;
- (BestBidOffer_Builder*) clone;

- (BestBidOffer*) build;
- (BestBidOffer*) buildPartial;

- (BestBidOffer_Builder*) mergeFrom:(BestBidOffer*) other;
- (BestBidOffer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BestBidOffer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBidPrice;
- (int32_t) bidPrice;
- (BestBidOffer_Builder*) setBidPrice:(int32_t) value;
- (BestBidOffer_Builder*) clearBidPrice;

- (BOOL) hasBidVolume;
- (int64_t) bidVolume;
- (BestBidOffer_Builder*) setBidVolume:(int64_t) value;
- (BestBidOffer_Builder*) clearBidVolume;

- (BOOL) hasOfferPrice;
- (int32_t) offerPrice;
- (BestBidOffer_Builder*) setOfferPrice:(int32_t) value;
- (BestBidOffer_Builder*) clearOfferPrice;

- (BOOL) hasOfferVolume;
- (int64_t) offerVolume;
- (BestBidOffer_Builder*) setOfferVolume:(int64_t) value;
- (BestBidOffer_Builder*) clearOfferVolume;
@end

@interface ForeignDomestic : PBGeneratedMessage {
@private
  BOOL hasForeignBought_:1;
  BOOL hasForeignSold_:1;
  BOOL hasDomesticBought_:1;
  BOOL hasDomesticSold_:1;
  BOOL hasVolume_:1;
  BOOL hasCodeId_:1;
  BOOL hasSequence_:1;
  BOOL hasBoard_:1;
  int64_t foreignBought;
  int64_t foreignSold;
  int64_t domesticBought;
  int64_t domesticSold;
  int64_t volume;
  int32_t codeId;
  int32_t sequence;
  Board board;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
- (BOOL) hasSequence;
- (BOOL) hasForeignBought;
- (BOOL) hasForeignSold;
- (BOOL) hasDomesticBought;
- (BOOL) hasDomesticSold;
- (BOOL) hasVolume;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly) int32_t sequence;
@property (readonly) int64_t foreignBought;
@property (readonly) int64_t foreignSold;
@property (readonly) int64_t domesticBought;
@property (readonly) int64_t domesticSold;
@property (readonly) int64_t volume;

+ (ForeignDomestic*) defaultInstance;
- (ForeignDomestic*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ForeignDomestic_Builder*) builder;
+ (ForeignDomestic_Builder*) builder;
+ (ForeignDomestic_Builder*) builderWithPrototype:(ForeignDomestic*) prototype;
- (ForeignDomestic_Builder*) toBuilder;

+ (ForeignDomestic*) parseFromData:(NSData*) data;
+ (ForeignDomestic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignDomestic*) parseFromInputStream:(NSInputStream*) input;
+ (ForeignDomestic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignDomestic*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ForeignDomestic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ForeignDomestic_Builder : PBGeneratedMessage_Builder {
@private
  ForeignDomestic* result;
}

- (ForeignDomestic*) defaultInstance;

- (ForeignDomestic_Builder*) clear;
- (ForeignDomestic_Builder*) clone;

- (ForeignDomestic*) build;
- (ForeignDomestic*) buildPartial;

- (ForeignDomestic_Builder*) mergeFrom:(ForeignDomestic*) other;
- (ForeignDomestic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ForeignDomestic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (ForeignDomestic_Builder*) setCodeId:(int32_t) value;
- (ForeignDomestic_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (ForeignDomestic_Builder*) setBoard:(Board) value;
- (ForeignDomestic_Builder*) clearBoard;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (ForeignDomestic_Builder*) setSequence:(int32_t) value;
- (ForeignDomestic_Builder*) clearSequence;

- (BOOL) hasForeignBought;
- (int64_t) foreignBought;
- (ForeignDomestic_Builder*) setForeignBought:(int64_t) value;
- (ForeignDomestic_Builder*) clearForeignBought;

- (BOOL) hasForeignSold;
- (int64_t) foreignSold;
- (ForeignDomestic_Builder*) setForeignSold:(int64_t) value;
- (ForeignDomestic_Builder*) clearForeignSold;

- (BOOL) hasDomesticBought;
- (int64_t) domesticBought;
- (ForeignDomestic_Builder*) setDomesticBought:(int64_t) value;
- (ForeignDomestic_Builder*) clearDomesticBought;

- (BOOL) hasDomesticSold;
- (int64_t) domesticSold;
- (ForeignDomestic_Builder*) setDomesticSold:(int64_t) value;
- (ForeignDomestic_Builder*) clearDomesticSold;

- (BOOL) hasVolume;
- (int64_t) volume;
- (ForeignDomestic_Builder*) setVolume:(int64_t) value;
- (ForeignDomestic_Builder*) clearVolume;
@end

@interface Level2 : PBGeneratedMessage {
@private
  BOOL hasTotalBid_:1;
  BOOL hasTotalOffer_:1;
  BOOL hasCodeId_:1;
  BOOL hasSequence_:1;
  BOOL hasBoard_:1;
  int64_t totalBid;
  int64_t totalOffer;
  int32_t codeId;
  int32_t sequence;
  Board board;
  NSMutableArray * bidArray;
  NSMutableArray * offerArray;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
- (BOOL) hasSequence;
- (BOOL) hasTotalBid;
- (BOOL) hasTotalOffer;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly) int32_t sequence;
@property (readonly, strong) NSArray * bid;
@property (readonly, strong) NSArray * offer;
@property (readonly) int64_t totalBid;
@property (readonly) int64_t totalOffer;
- (BuySell*)bidAtIndex:(NSUInteger)index;
- (BuySell*)offerAtIndex:(NSUInteger)index;

+ (Level2*) defaultInstance;
- (Level2*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Level2_Builder*) builder;
+ (Level2_Builder*) builder;
+ (Level2_Builder*) builderWithPrototype:(Level2*) prototype;
- (Level2_Builder*) toBuilder;

+ (Level2*) parseFromData:(NSData*) data;
+ (Level2*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level2*) parseFromInputStream:(NSInputStream*) input;
+ (Level2*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level2*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Level2*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Level2_Builder : PBGeneratedMessage_Builder {
@private
  Level2* result;
}

- (Level2*) defaultInstance;

- (Level2_Builder*) clear;
- (Level2_Builder*) clone;

- (Level2*) build;
- (Level2*) buildPartial;

- (Level2_Builder*) mergeFrom:(Level2*) other;
- (Level2_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Level2_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (Level2_Builder*) setCodeId:(int32_t) value;
- (Level2_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (Level2_Builder*) setBoard:(Board) value;
- (Level2_Builder*) clearBoard;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (Level2_Builder*) setSequence:(int32_t) value;
- (Level2_Builder*) clearSequence;

- (NSMutableArray *)bid;
- (BuySell*)bidAtIndex:(NSUInteger)index;
- (Level2_Builder *)addBid:(BuySell*)value;
- (Level2_Builder *)setBidArray:(NSArray *)array;
- (Level2_Builder *)clearBid;

- (NSMutableArray *)offer;
- (BuySell*)offerAtIndex:(NSUInteger)index;
- (Level2_Builder *)addOffer:(BuySell*)value;
- (Level2_Builder *)setOfferArray:(NSArray *)array;
- (Level2_Builder *)clearOffer;

- (BOOL) hasTotalBid;
- (int64_t) totalBid;
- (Level2_Builder*) setTotalBid:(int64_t) value;
- (Level2_Builder*) clearTotalBid;

- (BOOL) hasTotalOffer;
- (int64_t) totalOffer;
- (Level2_Builder*) setTotalOffer:(int64_t) value;
- (Level2_Builder*) clearTotalOffer;
@end

@interface Level3 : PBGeneratedMessage {
@private
  BOOL hasTotalBuy_:1;
  BOOL hasTotalSell_:1;
  BOOL hasCodeId_:1;
  BOOL hasSequence_:1;
  BOOL hasBoard_:1;
  int64_t totalBuy;
  int64_t totalSell;
  int32_t codeId;
  int32_t sequence;
  Board board;
  NSMutableArray * detailArray;
}
- (BOOL) hasCodeId;
- (BOOL) hasBoard;
- (BOOL) hasSequence;
- (BOOL) hasTotalBuy;
- (BOOL) hasTotalSell;
@property (readonly) int32_t codeId;
@property (readonly) Board board;
@property (readonly) int32_t sequence;
@property (readonly, strong) NSArray * detail;
@property (readonly) int64_t totalBuy;
@property (readonly) int64_t totalSell;
- (Level3Detail*)detailAtIndex:(NSUInteger)index;

+ (Level3*) defaultInstance;
- (Level3*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Level3_Builder*) builder;
+ (Level3_Builder*) builder;
+ (Level3_Builder*) builderWithPrototype:(Level3*) prototype;
- (Level3_Builder*) toBuilder;

+ (Level3*) parseFromData:(NSData*) data;
+ (Level3*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level3*) parseFromInputStream:(NSInputStream*) input;
+ (Level3*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level3*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Level3*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Level3_Builder : PBGeneratedMessage_Builder {
@private
  Level3* result;
}

- (Level3*) defaultInstance;

- (Level3_Builder*) clear;
- (Level3_Builder*) clone;

- (Level3*) build;
- (Level3*) buildPartial;

- (Level3_Builder*) mergeFrom:(Level3*) other;
- (Level3_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Level3_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCodeId;
- (int32_t) codeId;
- (Level3_Builder*) setCodeId:(int32_t) value;
- (Level3_Builder*) clearCodeId;

- (BOOL) hasBoard;
- (Board) board;
- (Level3_Builder*) setBoard:(Board) value;
- (Level3_Builder*) clearBoard;

- (BOOL) hasSequence;
- (int32_t) sequence;
- (Level3_Builder*) setSequence:(int32_t) value;
- (Level3_Builder*) clearSequence;

- (NSMutableArray *)detail;
- (Level3Detail*)detailAtIndex:(NSUInteger)index;
- (Level3_Builder *)addDetail:(Level3Detail*)value;
- (Level3_Builder *)setDetailArray:(NSArray *)array;
- (Level3_Builder *)clearDetail;

- (BOOL) hasTotalBuy;
- (int64_t) totalBuy;
- (Level3_Builder*) setTotalBuy:(int64_t) value;
- (Level3_Builder*) clearTotalBuy;

- (BOOL) hasTotalSell;
- (int64_t) totalSell;
- (Level3_Builder*) setTotalSell:(int64_t) value;
- (Level3_Builder*) clearTotalSell;
@end

@interface Level3Detail : PBGeneratedMessage {
@private
  BOOL hasPrice_:1;
  BOOL hasBuyVolume_:1;
  BOOL hasBuyFrequency_:1;
  BOOL hasSellVolume_:1;
  BOOL hasSellFrequency_:1;
  int32_t price;
  int32_t buyVolume;
  int32_t buyFrequency;
  int32_t sellVolume;
  int32_t sellFrequency;
}
- (BOOL) hasPrice;
- (BOOL) hasBuyVolume;
- (BOOL) hasBuyFrequency;
- (BOOL) hasSellVolume;
- (BOOL) hasSellFrequency;
@property (readonly) int32_t price;
@property (readonly) int32_t buyVolume;
@property (readonly) int32_t buyFrequency;
@property (readonly) int32_t sellVolume;
@property (readonly) int32_t sellFrequency;

+ (Level3Detail*) defaultInstance;
- (Level3Detail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Level3Detail_Builder*) builder;
+ (Level3Detail_Builder*) builder;
+ (Level3Detail_Builder*) builderWithPrototype:(Level3Detail*) prototype;
- (Level3Detail_Builder*) toBuilder;

+ (Level3Detail*) parseFromData:(NSData*) data;
+ (Level3Detail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level3Detail*) parseFromInputStream:(NSInputStream*) input;
+ (Level3Detail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Level3Detail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Level3Detail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Level3Detail_Builder : PBGeneratedMessage_Builder {
@private
  Level3Detail* result;
}

- (Level3Detail*) defaultInstance;

- (Level3Detail_Builder*) clear;
- (Level3Detail_Builder*) clone;

- (Level3Detail*) build;
- (Level3Detail*) buildPartial;

- (Level3Detail_Builder*) mergeFrom:(Level3Detail*) other;
- (Level3Detail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Level3Detail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrice;
- (int32_t) price;
- (Level3Detail_Builder*) setPrice:(int32_t) value;
- (Level3Detail_Builder*) clearPrice;

- (BOOL) hasBuyVolume;
- (int32_t) buyVolume;
- (Level3Detail_Builder*) setBuyVolume:(int32_t) value;
- (Level3Detail_Builder*) clearBuyVolume;

- (BOOL) hasBuyFrequency;
- (int32_t) buyFrequency;
- (Level3Detail_Builder*) setBuyFrequency:(int32_t) value;
- (Level3Detail_Builder*) clearBuyFrequency;

- (BOOL) hasSellVolume;
- (int32_t) sellVolume;
- (Level3Detail_Builder*) setSellVolume:(int32_t) value;
- (Level3Detail_Builder*) clearSellVolume;

- (BOOL) hasSellFrequency;
- (int32_t) sellFrequency;
- (Level3Detail_Builder*) setSellFrequency:(int32_t) value;
- (Level3Detail_Builder*) clearSellFrequency;
@end

@interface BuySell : PBGeneratedMessage {
@private
  BOOL hasVolume_:1;
  BOOL hasPrice_:1;
  BOOL hasQueue_:1;
  int64_t volume;
  int32_t price;
  int32_t queue;
}
- (BOOL) hasPrice;
- (BOOL) hasVolume;
- (BOOL) hasQueue;
@property (readonly) int32_t price;
@property (readonly) int64_t volume;
@property (readonly) int32_t queue;

+ (BuySell*) defaultInstance;
- (BuySell*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BuySell_Builder*) builder;
+ (BuySell_Builder*) builder;
+ (BuySell_Builder*) builderWithPrototype:(BuySell*) prototype;
- (BuySell_Builder*) toBuilder;

+ (BuySell*) parseFromData:(NSData*) data;
+ (BuySell*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BuySell*) parseFromInputStream:(NSInputStream*) input;
+ (BuySell*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BuySell*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BuySell*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BuySell_Builder : PBGeneratedMessage_Builder {
@private
  BuySell* result;
}

- (BuySell*) defaultInstance;

- (BuySell_Builder*) clear;
- (BuySell_Builder*) clone;

- (BuySell*) build;
- (BuySell*) buildPartial;

- (BuySell_Builder*) mergeFrom:(BuySell*) other;
- (BuySell_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BuySell_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrice;
- (int32_t) price;
- (BuySell_Builder*) setPrice:(int32_t) value;
- (BuySell_Builder*) clearPrice;

- (BOOL) hasVolume;
- (int64_t) volume;
- (BuySell_Builder*) setVolume:(int64_t) value;
- (BuySell_Builder*) clearVolume;

- (BOOL) hasQueue;
- (int32_t) queue;
- (BuySell_Builder*) setQueue:(int32_t) value;
- (BuySell_Builder*) clearQueue;
@end

@interface RequestData : PBGeneratedMessage {
@private
  BOOL hasSequence_:1;
  BOOL hasSettleDate_:1;
  BOOL hasQty_:1;
  BOOL hasPrice_:1;
  BOOL hasMessageOrder_:1;
  BOOL hasGeneral_:1;
  BOOL hasStockcode_:1;
  BOOL hasIpAddress_:1;
  BOOL hasPin_:1;
  BOOL hasPassword_:1;
  BOOL hasUsername_:1;
  BOOL hasUserType_:1;
  BOOL hasClientcode_:1;
  BOOL hasClientname_:1;
  BOOL hasSessionOl_:1;
  BOOL hasSessionMi_:1;
  BOOL hasVersion_:1;
  BOOL hasExpiredSession_:1;
  BOOL hasTime_:1;
  BOOL hasLoginType_:1;
  BOOL hasApplicationType_:1;
  BOOL hasCashWithdraw_:1;
  BOOL hasOrderConditional_:1;
  BOOL hasSorting_:1;
  BOOL hasRequestType_:1;
  BOOL hasRecordType_:1;
  BOOL hasDeviceType_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasBoard_:1;
  Float64 sequence;
  int32_t settleDate;
  int32_t qty;
  int32_t price;
  NSString* messageOrder;
  NSString* general;
  NSString* stockcode;
  NSString* ipAddress;
  NSString* pin;
  NSString* password;
  NSString* username;
  NSString* userType;
  NSString* clientcode;
  NSString* clientname;
  NSString* sessionOl;
  NSString* sessionMi;
  NSString* version;
  NSString* expiredSession;
  NSString* time;
  NSString* loginType;
  NSString* applicationType;
  CashWithdraw* cashWithdraw;
  OrderConditional* orderConditional;
  Sort sorting;
  Request requestType;
  RecordType recordType;
  DeviceType deviceType;
  OrderStatus orderStatus;
  Board board;
}
- (BOOL) hasTime;
- (BOOL) hasRequestType;
- (BOOL) hasSorting;
- (BOOL) hasSequence;
- (BOOL) hasApplicationType;
- (BOOL) hasLoginType;
- (BOOL) hasExpiredSession;
- (BOOL) hasVersion;
- (BOOL) hasSessionMi;
- (BOOL) hasSessionOl;
- (BOOL) hasClientname;
- (BOOL) hasClientcode;
- (BOOL) hasUserType;
- (BOOL) hasUsername;
- (BOOL) hasPassword;
- (BOOL) hasPin;
- (BOOL) hasIpAddress;
- (BOOL) hasStockcode;
- (BOOL) hasBoard;
- (BOOL) hasOrderStatus;
- (BOOL) hasRecordType;
- (BOOL) hasGeneral;
- (BOOL) hasMessageOrder;
- (BOOL) hasPrice;
- (BOOL) hasQty;
- (BOOL) hasSettleDate;
- (BOOL) hasDeviceType;
- (BOOL) hasOrderConditional;
- (BOOL) hasCashWithdraw;
@property (readonly, strong) NSString* time;
@property (readonly) Request requestType;
@property (readonly) Sort sorting;
@property (readonly) Float64 sequence;
@property (readonly, strong) NSString* applicationType;
@property (readonly, strong) NSString* loginType;
@property (readonly, strong) NSString* expiredSession;
@property (readonly, strong) NSString* version;
@property (readonly, strong) NSString* sessionMi;
@property (readonly, strong) NSString* sessionOl;
@property (readonly, strong) NSString* clientname;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* userType;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSString* pin;
@property (readonly, strong) NSString* ipAddress;
@property (readonly, strong) NSString* stockcode;
@property (readonly) Board board;
@property (readonly) OrderStatus orderStatus;
@property (readonly) RecordType recordType;
@property (readonly, strong) NSString* general;
@property (readonly, strong) NSString* messageOrder;
@property (readonly) int32_t price;
@property (readonly) int32_t qty;
@property (readonly) int32_t settleDate;
@property (readonly) DeviceType deviceType;
@property (readonly, strong) OrderConditional* orderConditional;
@property (readonly, strong) CashWithdraw* cashWithdraw;

+ (RequestData*) defaultInstance;
- (RequestData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestData_Builder*) builder;
+ (RequestData_Builder*) builder;
+ (RequestData_Builder*) builderWithPrototype:(RequestData*) prototype;
- (RequestData_Builder*) toBuilder;

+ (RequestData*) parseFromData:(NSData*) data;
+ (RequestData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestData*) parseFromInputStream:(NSInputStream*) input;
+ (RequestData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestData_Builder : PBGeneratedMessage_Builder {
@private
  RequestData* result;
}

- (RequestData*) defaultInstance;

- (RequestData_Builder*) clear;
- (RequestData_Builder*) clone;

- (RequestData*) build;
- (RequestData*) buildPartial;

- (RequestData_Builder*) mergeFrom:(RequestData*) other;
- (RequestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTime;
- (NSString*) time;
- (RequestData_Builder*) setTime:(NSString*) value;
- (RequestData_Builder*) clearTime;

- (BOOL) hasRequestType;
- (Request) requestType;
- (RequestData_Builder*) setRequestType:(Request) value;
- (RequestData_Builder*) clearRequestType;

- (BOOL) hasSorting;
- (Sort) sorting;
- (RequestData_Builder*) setSorting:(Sort) value;
- (RequestData_Builder*) clearSorting;

- (BOOL) hasSequence;
- (Float64) sequence;
- (RequestData_Builder*) setSequence:(Float64) value;
- (RequestData_Builder*) clearSequence;

- (BOOL) hasApplicationType;
- (NSString*) applicationType;
- (RequestData_Builder*) setApplicationType:(NSString*) value;
- (RequestData_Builder*) clearApplicationType;

- (BOOL) hasLoginType;
- (NSString*) loginType;
- (RequestData_Builder*) setLoginType:(NSString*) value;
- (RequestData_Builder*) clearLoginType;

- (BOOL) hasExpiredSession;
- (NSString*) expiredSession;
- (RequestData_Builder*) setExpiredSession:(NSString*) value;
- (RequestData_Builder*) clearExpiredSession;

- (BOOL) hasVersion;
- (NSString*) version;
- (RequestData_Builder*) setVersion:(NSString*) value;
- (RequestData_Builder*) clearVersion;

- (BOOL) hasSessionMi;
- (NSString*) sessionMi;
- (RequestData_Builder*) setSessionMi:(NSString*) value;
- (RequestData_Builder*) clearSessionMi;

- (BOOL) hasSessionOl;
- (NSString*) sessionOl;
- (RequestData_Builder*) setSessionOl:(NSString*) value;
- (RequestData_Builder*) clearSessionOl;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (RequestData_Builder*) setClientname:(NSString*) value;
- (RequestData_Builder*) clearClientname;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (RequestData_Builder*) setClientcode:(NSString*) value;
- (RequestData_Builder*) clearClientcode;

- (BOOL) hasUserType;
- (NSString*) userType;
- (RequestData_Builder*) setUserType:(NSString*) value;
- (RequestData_Builder*) clearUserType;

- (BOOL) hasUsername;
- (NSString*) username;
- (RequestData_Builder*) setUsername:(NSString*) value;
- (RequestData_Builder*) clearUsername;

- (BOOL) hasPassword;
- (NSString*) password;
- (RequestData_Builder*) setPassword:(NSString*) value;
- (RequestData_Builder*) clearPassword;

- (BOOL) hasPin;
- (NSString*) pin;
- (RequestData_Builder*) setPin:(NSString*) value;
- (RequestData_Builder*) clearPin;

- (BOOL) hasIpAddress;
- (NSString*) ipAddress;
- (RequestData_Builder*) setIpAddress:(NSString*) value;
- (RequestData_Builder*) clearIpAddress;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (RequestData_Builder*) setStockcode:(NSString*) value;
- (RequestData_Builder*) clearStockcode;

- (BOOL) hasBoard;
- (Board) board;
- (RequestData_Builder*) setBoard:(Board) value;
- (RequestData_Builder*) clearBoard;

- (BOOL) hasOrderStatus;
- (OrderStatus) orderStatus;
- (RequestData_Builder*) setOrderStatus:(OrderStatus) value;
- (RequestData_Builder*) clearOrderStatus;

- (BOOL) hasRecordType;
- (RecordType) recordType;
- (RequestData_Builder*) setRecordType:(RecordType) value;
- (RequestData_Builder*) clearRecordType;

- (BOOL) hasGeneral;
- (NSString*) general;
- (RequestData_Builder*) setGeneral:(NSString*) value;
- (RequestData_Builder*) clearGeneral;

- (BOOL) hasMessageOrder;
- (NSString*) messageOrder;
- (RequestData_Builder*) setMessageOrder:(NSString*) value;
- (RequestData_Builder*) clearMessageOrder;

- (BOOL) hasPrice;
- (int32_t) price;
- (RequestData_Builder*) setPrice:(int32_t) value;
- (RequestData_Builder*) clearPrice;

- (BOOL) hasQty;
- (int32_t) qty;
- (RequestData_Builder*) setQty:(int32_t) value;
- (RequestData_Builder*) clearQty;

- (BOOL) hasSettleDate;
- (int32_t) settleDate;
- (RequestData_Builder*) setSettleDate:(int32_t) value;
- (RequestData_Builder*) clearSettleDate;

- (BOOL) hasDeviceType;
- (DeviceType) deviceType;
- (RequestData_Builder*) setDeviceType:(DeviceType) value;
- (RequestData_Builder*) clearDeviceType;

- (BOOL) hasOrderConditional;
- (OrderConditional*) orderConditional;
- (RequestData_Builder*) setOrderConditional:(OrderConditional*) value;
- (RequestData_Builder*) setOrderConditionalBuilder:(OrderConditional_Builder*) builderForValue;
- (RequestData_Builder*) mergeOrderConditional:(OrderConditional*) value;
- (RequestData_Builder*) clearOrderConditional;

- (BOOL) hasCashWithdraw;
- (CashWithdraw*) cashWithdraw;
- (RequestData_Builder*) setCashWithdraw:(CashWithdraw*) value;
- (RequestData_Builder*) setCashWithdrawBuilder:(CashWithdraw_Builder*) builderForValue;
- (RequestData_Builder*) mergeCashWithdraw:(CashWithdraw*) value;
- (RequestData_Builder*) clearCashWithdraw;
@end

@interface TradingMessage : PBGeneratedMessage {
@private
  BOOL hasRecStockInHand_:1;
  BOOL hasRecOrderPower_:1;
  BOOL hasRecAvaiableStock_:1;
  BOOL hasEffectiveDate_:1;
  BOOL hasRecAutomaticShortsell_:1;
  BOOL hasRecRiskControl_:1;
  BOOL hasRdn_:1;
  BOOL hasRecGeneralMessage_:1;
  BOOL hasClientcode_:1;
  BOOL hasRecTime_:1;
  BOOL hasRecPrivillegesUser_:1;
  BOOL hasRecClordid_:1;
  BOOL hasRecStatusMessage_:1;
  BOOL hasRecCashWithdraw_:1;
  BOOL hasRecCashMutation_:1;
  BOOL hasRecAccountInfo_:1;
  BOOL hasRecReqData_:1;
  BOOL hasRecCustomerPosition_:1;
  BOOL hasRecLoginData_:1;
  BOOL hasRecType_:1;
  BOOL hasRecStatusReturn_:1;
  Float64 recStockInHand;
  Float64 recOrderPower;
  Float64 recAvaiableStock;
  int32_t effectiveDate;
  int32_t recAutomaticShortsell;
  int32_t recRiskControl;
  NSString* rdn;
  NSString* recGeneralMessage;
  NSString* clientcode;
  NSString* recTime;
  NSString* recPrivillegesUser;
  NSString* recClordid;
  NSString* recStatusMessage;
  CashWithdraw* recCashWithdraw;
  CashMutation* recCashMutation;
  AccountInfo* recAccountInfo;
  RequestData* recReqData;
  CustomerPosition* recCustomerPosition;
  LoginData* recLoginData;
  RecordType recType;
  StatusReturn recStatusReturn;
  NSMutableArray * recHolidayArray;
  NSMutableArray * recBranchArray;
  NSMutableArray * recUserlistArray;
  NSMutableArray * recMMenuArray;
  NSMutableArray * recOrderconditionalArray;
  NSMutableArray * recTradingtargetArray;
  NSMutableArray * recCashflowArray;
  NSMutableArray * recPotonganpajakArray;
  NSMutableArray * recOrdermobileArray;
  NSMutableArray * recMOrdertypeArray;
  NSMutableArray * recUnregularStocklistArray;
  NSMutableArray * recRdnListArray;
  NSMutableArray * recMOrderstatusArray;
  NSMutableArray * recMPrivilegesArray;
  NSMutableArray * recCashWithdrawListArray;
  NSMutableArray * recOrdergtcArray;
  NSMutableArray * recTradeArray;
  NSMutableArray * recNegoreceiveArray;
  NSMutableArray * recOrderLifeCycleArray;
  NSMutableArray * recTradedetailArray;
  NSMutableArray * recMarginAlertArray;
  NSMutableArray * recOrderlistArray;
  NSMutableArray * recClientListArray;
  NSMutableArray * recPortfolioArray;
  NSMutableArray * recMessBroadcastArray;
  NSMutableArray * recMSharesinfoArray;
  NSMutableArray * recCustomerExposureArray;
  NSMutableArray * recAdvlistArray;
  NSMutableArray * recMMarketcappingArray;
  NSMutableArray * recGrouporderArray;
  NSMutableArray * recGrouporderDetailArray;
  NSMutableArray * recClientOverdueArray;
}
- (BOOL) hasRecReqData;
- (BOOL) hasRecLoginData;
- (BOOL) hasRecPrivillegesUser;
- (BOOL) hasRecClordid;
- (BOOL) hasRecCustomerPosition;
- (BOOL) hasRecOrderPower;
- (BOOL) hasRecAvaiableStock;
- (BOOL) hasRecAccountInfo;
- (BOOL) hasRecType;
- (BOOL) hasRecStatusReturn;
- (BOOL) hasRecStatusMessage;
- (BOOL) hasRecTime;
- (BOOL) hasRecStockInHand;
- (BOOL) hasRecRiskControl;
- (BOOL) hasRecCashMutation;
- (BOOL) hasClientcode;
- (BOOL) hasRecAutomaticShortsell;
- (BOOL) hasRecGeneralMessage;
- (BOOL) hasRdn;
- (BOOL) hasEffectiveDate;
- (BOOL) hasRecCashWithdraw;
@property (readonly, strong) RequestData* recReqData;
@property (readonly, strong) NSArray * recMPrivileges;
@property (readonly, strong) NSArray * recMOrderstatus;
@property (readonly, strong) NSArray * recMOrdertype;
@property (readonly, strong) NSArray * recMMenu;
@property (readonly, strong) NSArray * recMMarketcapping;
@property (readonly, strong) NSArray * recMSharesinfo;
@property (readonly, strong) LoginData* recLoginData;
@property (readonly, strong) NSArray * recMessBroadcast;
@property (readonly, strong) NSArray * recClientList;
@property (readonly, strong) NSString* recPrivillegesUser;
@property (readonly, strong) NSString* recClordid;
@property (readonly, strong) CustomerPosition* recCustomerPosition;
@property (readonly) Float64 recOrderPower;
@property (readonly) Float64 recAvaiableStock;
@property (readonly, strong) NSArray * recOrderlist;
@property (readonly, strong) NSArray * recOrdergtc;
@property (readonly, strong) NSArray * recTrade;
@property (readonly, strong) NSArray * recNegoreceive;
@property (readonly, strong) NSArray * recOrderLifeCycle;
@property (readonly, strong) NSArray * recTradedetail;
@property (readonly, strong) NSArray * recMarginAlert;
@property (readonly, strong) AccountInfo* recAccountInfo;
@property (readonly) RecordType recType;
@property (readonly) StatusReturn recStatusReturn;
@property (readonly, strong) NSString* recStatusMessage;
@property (readonly, strong) NSString* recTime;
@property (readonly, strong) NSArray * recPortfolio;
@property (readonly) Float64 recStockInHand;
@property (readonly) int32_t recRiskControl;
@property (readonly, strong) CashMutation* recCashMutation;
@property (readonly, strong) NSArray * recCustomerExposure;
@property (readonly, strong) NSArray * recAdvlist;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSArray * recGrouporder;
@property (readonly, strong) NSArray * recGrouporderDetail;
@property (readonly, strong) NSArray * recClientOverdue;
@property (readonly, strong) NSArray * recHoliday;
@property (readonly, strong) NSArray * recBranch;
@property (readonly, strong) NSArray * recUserlist;
@property (readonly) int32_t recAutomaticShortsell;
@property (readonly, strong) NSArray * recOrderconditional;
@property (readonly, strong) NSArray * recTradingtarget;
@property (readonly, strong) NSArray * recCashflow;
@property (readonly, strong) NSArray * recPotonganpajak;
@property (readonly, strong) NSArray * recOrdermobile;
@property (readonly, strong) NSString* recGeneralMessage;
@property (readonly, strong) NSArray * recUnregularStocklist;
@property (readonly, strong) NSArray * recRdnList;
@property (readonly, strong) NSString* rdn;
@property (readonly) int32_t effectiveDate;
@property (readonly, strong) CashWithdraw* recCashWithdraw;
@property (readonly, strong) NSArray * recCashWithdrawList;
- (MasterData*)recMPrivilegesAtIndex:(NSUInteger)index;
- (MasterData*)recMOrderstatusAtIndex:(NSUInteger)index;
- (MasterData*)recMOrdertypeAtIndex:(NSUInteger)index;
- (MenuData*)recMMenuAtIndex:(NSUInteger)index;
- (MarketCapping*)recMMarketcappingAtIndex:(NSUInteger)index;
- (SharesInfo*)recMSharesinfoAtIndex:(NSUInteger)index;
- (MessageBroadcastData*)recMessBroadcastAtIndex:(NSUInteger)index;
- (ClientList*)recClientListAtIndex:(NSUInteger)index;
- (TxOrder*)recOrderlistAtIndex:(NSUInteger)index;
- (OrderGtc*)recOrdergtcAtIndex:(NSUInteger)index;
- (TxTrade*)recTradeAtIndex:(NSUInteger)index;
- (TxOrder*)recNegoreceiveAtIndex:(NSUInteger)index;
- (OrderLifeCycle*)recOrderLifeCycleAtIndex:(NSUInteger)index;
- (TradeDetail*)recTradedetailAtIndex:(NSUInteger)index;
- (MarginAlert*)recMarginAlertAtIndex:(NSUInteger)index;
- (Portfolio*)recPortfolioAtIndex:(NSUInteger)index;
- (CustomerExposure*)recCustomerExposureAtIndex:(NSUInteger)index;
- (TxOrder*)recAdvlistAtIndex:(NSUInteger)index;
- (GroupOrder*)recGrouporderAtIndex:(NSUInteger)index;
- (GroupOrderDetail*)recGrouporderDetailAtIndex:(NSUInteger)index;
- (ClientOverdue*)recClientOverdueAtIndex:(NSUInteger)index;
- (MasterData*)recHolidayAtIndex:(NSUInteger)index;
- (MasterBranch*)recBranchAtIndex:(NSUInteger)index;
- (MasterUserlist*)recUserlistAtIndex:(NSUInteger)index;
- (OrderConditional*)recOrderconditionalAtIndex:(NSUInteger)index;
- (TradingTarget*)recTradingtargetAtIndex:(NSUInteger)index;
- (CashFlow*)recCashflowAtIndex:(NSUInteger)index;
- (PotonganPajak*)recPotonganpajakAtIndex:(NSUInteger)index;
- (OrderMobile*)recOrdermobileAtIndex:(NSUInteger)index;
- (UnregularStocklist*)recUnregularStocklistAtIndex:(NSUInteger)index;
- (RDNList*)recRdnListAtIndex:(NSUInteger)index;
- (CashWithdraw*)recCashWithdrawListAtIndex:(NSUInteger)index;

+ (TradingMessage*) defaultInstance;
- (TradingMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TradingMessage_Builder*) builder;
+ (TradingMessage_Builder*) builder;
+ (TradingMessage_Builder*) builderWithPrototype:(TradingMessage*) prototype;
- (TradingMessage_Builder*) toBuilder;

+ (TradingMessage*) parseFromData:(NSData*) data;
+ (TradingMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradingMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TradingMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradingMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TradingMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TradingMessage_Builder : PBGeneratedMessage_Builder {
@private
  TradingMessage* result;
}

- (TradingMessage*) defaultInstance;

- (TradingMessage_Builder*) clear;
- (TradingMessage_Builder*) clone;

- (TradingMessage*) build;
- (TradingMessage*) buildPartial;

- (TradingMessage_Builder*) mergeFrom:(TradingMessage*) other;
- (TradingMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TradingMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRecReqData;
- (RequestData*) recReqData;
- (TradingMessage_Builder*) setRecReqData:(RequestData*) value;
- (TradingMessage_Builder*) setRecReqDataBuilder:(RequestData_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecReqData:(RequestData*) value;
- (TradingMessage_Builder*) clearRecReqData;

- (NSMutableArray *)recMPrivileges;
- (MasterData*)recMPrivilegesAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMPrivileges:(MasterData*)value;
- (TradingMessage_Builder *)setRecMPrivilegesArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMPrivileges;

- (NSMutableArray *)recMOrderstatus;
- (MasterData*)recMOrderstatusAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMOrderstatus:(MasterData*)value;
- (TradingMessage_Builder *)setRecMOrderstatusArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMOrderstatus;

- (NSMutableArray *)recMOrdertype;
- (MasterData*)recMOrdertypeAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMOrdertype:(MasterData*)value;
- (TradingMessage_Builder *)setRecMOrdertypeArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMOrdertype;

- (NSMutableArray *)recMMenu;
- (MenuData*)recMMenuAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMMenu:(MenuData*)value;
- (TradingMessage_Builder *)setRecMMenuArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMMenu;

- (NSMutableArray *)recMMarketcapping;
- (MarketCapping*)recMMarketcappingAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMMarketcapping:(MarketCapping*)value;
- (TradingMessage_Builder *)setRecMMarketcappingArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMMarketcapping;

- (NSMutableArray *)recMSharesinfo;
- (SharesInfo*)recMSharesinfoAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMSharesinfo:(SharesInfo*)value;
- (TradingMessage_Builder *)setRecMSharesinfoArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMSharesinfo;

- (BOOL) hasRecLoginData;
- (LoginData*) recLoginData;
- (TradingMessage_Builder*) setRecLoginData:(LoginData*) value;
- (TradingMessage_Builder*) setRecLoginDataBuilder:(LoginData_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecLoginData:(LoginData*) value;
- (TradingMessage_Builder*) clearRecLoginData;

- (NSMutableArray *)recMessBroadcast;
- (MessageBroadcastData*)recMessBroadcastAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMessBroadcast:(MessageBroadcastData*)value;
- (TradingMessage_Builder *)setRecMessBroadcastArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMessBroadcast;

- (NSMutableArray *)recClientList;
- (ClientList*)recClientListAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecClientList:(ClientList*)value;
- (TradingMessage_Builder *)setRecClientListArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecClientList;

- (BOOL) hasRecPrivillegesUser;
- (NSString*) recPrivillegesUser;
- (TradingMessage_Builder*) setRecPrivillegesUser:(NSString*) value;
- (TradingMessage_Builder*) clearRecPrivillegesUser;

- (BOOL) hasRecClordid;
- (NSString*) recClordid;
- (TradingMessage_Builder*) setRecClordid:(NSString*) value;
- (TradingMessage_Builder*) clearRecClordid;

- (BOOL) hasRecCustomerPosition;
- (CustomerPosition*) recCustomerPosition;
- (TradingMessage_Builder*) setRecCustomerPosition:(CustomerPosition*) value;
- (TradingMessage_Builder*) setRecCustomerPositionBuilder:(CustomerPosition_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecCustomerPosition:(CustomerPosition*) value;
- (TradingMessage_Builder*) clearRecCustomerPosition;

- (BOOL) hasRecOrderPower;
- (Float64) recOrderPower;
- (TradingMessage_Builder*) setRecOrderPower:(Float64) value;
- (TradingMessage_Builder*) clearRecOrderPower;

- (BOOL) hasRecAvaiableStock;
- (Float64) recAvaiableStock;
- (TradingMessage_Builder*) setRecAvaiableStock:(Float64) value;
- (TradingMessage_Builder*) clearRecAvaiableStock;

- (NSMutableArray *)recOrderlist;
- (TxOrder*)recOrderlistAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecOrderlist:(TxOrder*)value;
- (TradingMessage_Builder *)setRecOrderlistArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecOrderlist;

- (NSMutableArray *)recOrdergtc;
- (OrderGtc*)recOrdergtcAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecOrdergtc:(OrderGtc*)value;
- (TradingMessage_Builder *)setRecOrdergtcArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecOrdergtc;

- (NSMutableArray *)recTrade;
- (TxTrade*)recTradeAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecTrade:(TxTrade*)value;
- (TradingMessage_Builder *)setRecTradeArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecTrade;

- (NSMutableArray *)recNegoreceive;
- (TxOrder*)recNegoreceiveAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecNegoreceive:(TxOrder*)value;
- (TradingMessage_Builder *)setRecNegoreceiveArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecNegoreceive;

- (NSMutableArray *)recOrderLifeCycle;
- (OrderLifeCycle*)recOrderLifeCycleAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecOrderLifeCycle:(OrderLifeCycle*)value;
- (TradingMessage_Builder *)setRecOrderLifeCycleArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecOrderLifeCycle;

- (NSMutableArray *)recTradedetail;
- (TradeDetail*)recTradedetailAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecTradedetail:(TradeDetail*)value;
- (TradingMessage_Builder *)setRecTradedetailArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecTradedetail;

- (NSMutableArray *)recMarginAlert;
- (MarginAlert*)recMarginAlertAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecMarginAlert:(MarginAlert*)value;
- (TradingMessage_Builder *)setRecMarginAlertArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecMarginAlert;

- (BOOL) hasRecAccountInfo;
- (AccountInfo*) recAccountInfo;
- (TradingMessage_Builder*) setRecAccountInfo:(AccountInfo*) value;
- (TradingMessage_Builder*) setRecAccountInfoBuilder:(AccountInfo_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecAccountInfo:(AccountInfo*) value;
- (TradingMessage_Builder*) clearRecAccountInfo;

- (BOOL) hasRecType;
- (RecordType) recType;
- (TradingMessage_Builder*) setRecType:(RecordType) value;
- (TradingMessage_Builder*) clearRecType;

- (BOOL) hasRecStatusReturn;
- (StatusReturn) recStatusReturn;
- (TradingMessage_Builder*) setRecStatusReturn:(StatusReturn) value;
- (TradingMessage_Builder*) clearRecStatusReturn;

- (BOOL) hasRecStatusMessage;
- (NSString*) recStatusMessage;
- (TradingMessage_Builder*) setRecStatusMessage:(NSString*) value;
- (TradingMessage_Builder*) clearRecStatusMessage;

- (BOOL) hasRecTime;
- (NSString*) recTime;
- (TradingMessage_Builder*) setRecTime:(NSString*) value;
- (TradingMessage_Builder*) clearRecTime;

- (NSMutableArray *)recPortfolio;
- (Portfolio*)recPortfolioAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecPortfolio:(Portfolio*)value;
- (TradingMessage_Builder *)setRecPortfolioArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecPortfolio;

- (BOOL) hasRecStockInHand;
- (Float64) recStockInHand;
- (TradingMessage_Builder*) setRecStockInHand:(Float64) value;
- (TradingMessage_Builder*) clearRecStockInHand;

- (BOOL) hasRecRiskControl;
- (int32_t) recRiskControl;
- (TradingMessage_Builder*) setRecRiskControl:(int32_t) value;
- (TradingMessage_Builder*) clearRecRiskControl;

- (BOOL) hasRecCashMutation;
- (CashMutation*) recCashMutation;
- (TradingMessage_Builder*) setRecCashMutation:(CashMutation*) value;
- (TradingMessage_Builder*) setRecCashMutationBuilder:(CashMutation_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecCashMutation:(CashMutation*) value;
- (TradingMessage_Builder*) clearRecCashMutation;

- (NSMutableArray *)recCustomerExposure;
- (CustomerExposure*)recCustomerExposureAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecCustomerExposure:(CustomerExposure*)value;
- (TradingMessage_Builder *)setRecCustomerExposureArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecCustomerExposure;

- (NSMutableArray *)recAdvlist;
- (TxOrder*)recAdvlistAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecAdvlist:(TxOrder*)value;
- (TradingMessage_Builder *)setRecAdvlistArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecAdvlist;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (TradingMessage_Builder*) setClientcode:(NSString*) value;
- (TradingMessage_Builder*) clearClientcode;

- (NSMutableArray *)recGrouporder;
- (GroupOrder*)recGrouporderAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecGrouporder:(GroupOrder*)value;
- (TradingMessage_Builder *)setRecGrouporderArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecGrouporder;

- (NSMutableArray *)recGrouporderDetail;
- (GroupOrderDetail*)recGrouporderDetailAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecGrouporderDetail:(GroupOrderDetail*)value;
- (TradingMessage_Builder *)setRecGrouporderDetailArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecGrouporderDetail;

- (NSMutableArray *)recClientOverdue;
- (ClientOverdue*)recClientOverdueAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecClientOverdue:(ClientOverdue*)value;
- (TradingMessage_Builder *)setRecClientOverdueArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecClientOverdue;

- (NSMutableArray *)recHoliday;
- (MasterData*)recHolidayAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecHoliday:(MasterData*)value;
- (TradingMessage_Builder *)setRecHolidayArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecHoliday;

- (NSMutableArray *)recBranch;
- (MasterBranch*)recBranchAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecBranch:(MasterBranch*)value;
- (TradingMessage_Builder *)setRecBranchArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecBranch;

- (NSMutableArray *)recUserlist;
- (MasterUserlist*)recUserlistAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecUserlist:(MasterUserlist*)value;
- (TradingMessage_Builder *)setRecUserlistArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecUserlist;

- (BOOL) hasRecAutomaticShortsell;
- (int32_t) recAutomaticShortsell;
- (TradingMessage_Builder*) setRecAutomaticShortsell:(int32_t) value;
- (TradingMessage_Builder*) clearRecAutomaticShortsell;

- (NSMutableArray *)recOrderconditional;
- (OrderConditional*)recOrderconditionalAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecOrderconditional:(OrderConditional*)value;
- (TradingMessage_Builder *)setRecOrderconditionalArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecOrderconditional;

- (NSMutableArray *)recTradingtarget;
- (TradingTarget*)recTradingtargetAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecTradingtarget:(TradingTarget*)value;
- (TradingMessage_Builder *)setRecTradingtargetArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecTradingtarget;

- (NSMutableArray *)recCashflow;
- (CashFlow*)recCashflowAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecCashflow:(CashFlow*)value;
- (TradingMessage_Builder *)setRecCashflowArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecCashflow;

- (NSMutableArray *)recPotonganpajak;
- (PotonganPajak*)recPotonganpajakAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecPotonganpajak:(PotonganPajak*)value;
- (TradingMessage_Builder *)setRecPotonganpajakArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecPotonganpajak;

- (NSMutableArray *)recOrdermobile;
- (OrderMobile*)recOrdermobileAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecOrdermobile:(OrderMobile*)value;
- (TradingMessage_Builder *)setRecOrdermobileArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecOrdermobile;

- (BOOL) hasRecGeneralMessage;
- (NSString*) recGeneralMessage;
- (TradingMessage_Builder*) setRecGeneralMessage:(NSString*) value;
- (TradingMessage_Builder*) clearRecGeneralMessage;

- (NSMutableArray *)recUnregularStocklist;
- (UnregularStocklist*)recUnregularStocklistAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecUnregularStocklist:(UnregularStocklist*)value;
- (TradingMessage_Builder *)setRecUnregularStocklistArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecUnregularStocklist;

- (NSMutableArray *)recRdnList;
- (RDNList*)recRdnListAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecRdnList:(RDNList*)value;
- (TradingMessage_Builder *)setRecRdnListArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecRdnList;

- (BOOL) hasRdn;
- (NSString*) rdn;
- (TradingMessage_Builder*) setRdn:(NSString*) value;
- (TradingMessage_Builder*) clearRdn;

- (BOOL) hasEffectiveDate;
- (int32_t) effectiveDate;
- (TradingMessage_Builder*) setEffectiveDate:(int32_t) value;
- (TradingMessage_Builder*) clearEffectiveDate;

- (BOOL) hasRecCashWithdraw;
- (CashWithdraw*) recCashWithdraw;
- (TradingMessage_Builder*) setRecCashWithdraw:(CashWithdraw*) value;
- (TradingMessage_Builder*) setRecCashWithdrawBuilder:(CashWithdraw_Builder*) builderForValue;
- (TradingMessage_Builder*) mergeRecCashWithdraw:(CashWithdraw*) value;
- (TradingMessage_Builder*) clearRecCashWithdraw;

- (NSMutableArray *)recCashWithdrawList;
- (CashWithdraw*)recCashWithdrawListAtIndex:(NSUInteger)index;
- (TradingMessage_Builder *)addRecCashWithdrawList:(CashWithdraw*)value;
- (TradingMessage_Builder *)setRecCashWithdrawListArray:(NSArray *)array;
- (TradingMessage_Builder *)clearRecCashWithdrawList;
@end

@interface MasterBranch : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasBranchname_:1;
  NSString* code;
  NSString* branchname;
}
- (BOOL) hasCode;
- (BOOL) hasBranchname;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* branchname;

+ (MasterBranch*) defaultInstance;
- (MasterBranch*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MasterBranch_Builder*) builder;
+ (MasterBranch_Builder*) builder;
+ (MasterBranch_Builder*) builderWithPrototype:(MasterBranch*) prototype;
- (MasterBranch_Builder*) toBuilder;

+ (MasterBranch*) parseFromData:(NSData*) data;
+ (MasterBranch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterBranch*) parseFromInputStream:(NSInputStream*) input;
+ (MasterBranch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterBranch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MasterBranch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MasterBranch_Builder : PBGeneratedMessage_Builder {
@private
  MasterBranch* result;
}

- (MasterBranch*) defaultInstance;

- (MasterBranch_Builder*) clear;
- (MasterBranch_Builder*) clone;

- (MasterBranch*) build;
- (MasterBranch*) buildPartial;

- (MasterBranch_Builder*) mergeFrom:(MasterBranch*) other;
- (MasterBranch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MasterBranch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (MasterBranch_Builder*) setCode:(NSString*) value;
- (MasterBranch_Builder*) clearCode;

- (BOOL) hasBranchname;
- (NSString*) branchname;
- (MasterBranch_Builder*) setBranchname:(NSString*) value;
- (MasterBranch_Builder*) clearBranchname;
@end

@interface MasterUserlist : PBGeneratedMessage {
@private
  BOOL hasUsername_:1;
  BOOL hasFullname_:1;
  BOOL hasUsertype_:1;
  BOOL hasOfficercode_:1;
  BOOL hasBranchmanager_:1;
  BOOL hasCsBranch_:1;
  NSString* username;
  NSString* fullname;
  NSString* usertype;
  NSString* officercode;
  NSString* branchmanager;
  NSString* csBranch;
}
- (BOOL) hasUsername;
- (BOOL) hasFullname;
- (BOOL) hasUsertype;
- (BOOL) hasOfficercode;
- (BOOL) hasBranchmanager;
- (BOOL) hasCsBranch;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* fullname;
@property (readonly, strong) NSString* usertype;
@property (readonly, strong) NSString* officercode;
@property (readonly, strong) NSString* branchmanager;
@property (readonly, strong) NSString* csBranch;

+ (MasterUserlist*) defaultInstance;
- (MasterUserlist*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MasterUserlist_Builder*) builder;
+ (MasterUserlist_Builder*) builder;
+ (MasterUserlist_Builder*) builderWithPrototype:(MasterUserlist*) prototype;
- (MasterUserlist_Builder*) toBuilder;

+ (MasterUserlist*) parseFromData:(NSData*) data;
+ (MasterUserlist*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterUserlist*) parseFromInputStream:(NSInputStream*) input;
+ (MasterUserlist*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterUserlist*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MasterUserlist*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MasterUserlist_Builder : PBGeneratedMessage_Builder {
@private
  MasterUserlist* result;
}

- (MasterUserlist*) defaultInstance;

- (MasterUserlist_Builder*) clear;
- (MasterUserlist_Builder*) clone;

- (MasterUserlist*) build;
- (MasterUserlist*) buildPartial;

- (MasterUserlist_Builder*) mergeFrom:(MasterUserlist*) other;
- (MasterUserlist_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MasterUserlist_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (MasterUserlist_Builder*) setUsername:(NSString*) value;
- (MasterUserlist_Builder*) clearUsername;

- (BOOL) hasFullname;
- (NSString*) fullname;
- (MasterUserlist_Builder*) setFullname:(NSString*) value;
- (MasterUserlist_Builder*) clearFullname;

- (BOOL) hasUsertype;
- (NSString*) usertype;
- (MasterUserlist_Builder*) setUsertype:(NSString*) value;
- (MasterUserlist_Builder*) clearUsertype;

- (BOOL) hasOfficercode;
- (NSString*) officercode;
- (MasterUserlist_Builder*) setOfficercode:(NSString*) value;
- (MasterUserlist_Builder*) clearOfficercode;

- (BOOL) hasBranchmanager;
- (NSString*) branchmanager;
- (MasterUserlist_Builder*) setBranchmanager:(NSString*) value;
- (MasterUserlist_Builder*) clearBranchmanager;

- (BOOL) hasCsBranch;
- (NSString*) csBranch;
- (MasterUserlist_Builder*) setCsBranch:(NSString*) value;
- (MasterUserlist_Builder*) clearCsBranch;
@end

@interface MasterData : PBGeneratedMessage {
@private
  BOOL hasIdMaster_:1;
  BOOL hasDescription_:1;
  int32_t idMaster;
  NSString* description;
}
- (BOOL) hasIdMaster;
- (BOOL) hasDescription;
@property (readonly) int32_t idMaster;
@property (readonly, strong) NSString* description;

+ (MasterData*) defaultInstance;
- (MasterData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MasterData_Builder*) builder;
+ (MasterData_Builder*) builder;
+ (MasterData_Builder*) builderWithPrototype:(MasterData*) prototype;
- (MasterData_Builder*) toBuilder;

+ (MasterData*) parseFromData:(NSData*) data;
+ (MasterData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterData*) parseFromInputStream:(NSInputStream*) input;
+ (MasterData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MasterData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MasterData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MasterData_Builder : PBGeneratedMessage_Builder {
@private
  MasterData* result;
}

- (MasterData*) defaultInstance;

- (MasterData_Builder*) clear;
- (MasterData_Builder*) clone;

- (MasterData*) build;
- (MasterData*) buildPartial;

- (MasterData_Builder*) mergeFrom:(MasterData*) other;
- (MasterData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MasterData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIdMaster;
- (int32_t) idMaster;
- (MasterData_Builder*) setIdMaster:(int32_t) value;
- (MasterData_Builder*) clearIdMaster;

- (BOOL) hasDescription;
- (NSString*) description;
- (MasterData_Builder*) setDescription:(NSString*) value;
- (MasterData_Builder*) clearDescription;
@end

@interface MenuData : PBGeneratedMessage {
@private
  BOOL hasMenuId_:1;
  BOOL hasAppType_:1;
  BOOL hasParentId_:1;
  BOOL hasWeight_:1;
  BOOL hasDepth_:1;
  BOOL hasMaxWindow_:1;
  BOOL hasMenuGroup_:1;
  BOOL hasEnable_:1;
  BOOL hasMenuName_:1;
  BOOL hasShortcut_:1;
  int32_t menuId;
  int32_t appType;
  int32_t parentId;
  int32_t weight;
  int32_t depth;
  int32_t maxWindow;
  int32_t menuGroup;
  int32_t enable;
  NSString* menuName;
  NSString* shortcut;
}
- (BOOL) hasMenuId;
- (BOOL) hasAppType;
- (BOOL) hasMenuName;
- (BOOL) hasParentId;
- (BOOL) hasWeight;
- (BOOL) hasDepth;
- (BOOL) hasShortcut;
- (BOOL) hasMaxWindow;
- (BOOL) hasMenuGroup;
- (BOOL) hasEnable;
@property (readonly) int32_t menuId;
@property (readonly) int32_t appType;
@property (readonly, strong) NSString* menuName;
@property (readonly) int32_t parentId;
@property (readonly) int32_t weight;
@property (readonly) int32_t depth;
@property (readonly, strong) NSString* shortcut;
@property (readonly) int32_t maxWindow;
@property (readonly) int32_t menuGroup;
@property (readonly) int32_t enable;

+ (MenuData*) defaultInstance;
- (MenuData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MenuData_Builder*) builder;
+ (MenuData_Builder*) builder;
+ (MenuData_Builder*) builderWithPrototype:(MenuData*) prototype;
- (MenuData_Builder*) toBuilder;

+ (MenuData*) parseFromData:(NSData*) data;
+ (MenuData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MenuData*) parseFromInputStream:(NSInputStream*) input;
+ (MenuData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MenuData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MenuData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MenuData_Builder : PBGeneratedMessage_Builder {
@private
  MenuData* result;
}

- (MenuData*) defaultInstance;

- (MenuData_Builder*) clear;
- (MenuData_Builder*) clone;

- (MenuData*) build;
- (MenuData*) buildPartial;

- (MenuData_Builder*) mergeFrom:(MenuData*) other;
- (MenuData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MenuData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMenuId;
- (int32_t) menuId;
- (MenuData_Builder*) setMenuId:(int32_t) value;
- (MenuData_Builder*) clearMenuId;

- (BOOL) hasAppType;
- (int32_t) appType;
- (MenuData_Builder*) setAppType:(int32_t) value;
- (MenuData_Builder*) clearAppType;

- (BOOL) hasMenuName;
- (NSString*) menuName;
- (MenuData_Builder*) setMenuName:(NSString*) value;
- (MenuData_Builder*) clearMenuName;

- (BOOL) hasParentId;
- (int32_t) parentId;
- (MenuData_Builder*) setParentId:(int32_t) value;
- (MenuData_Builder*) clearParentId;

- (BOOL) hasWeight;
- (int32_t) weight;
- (MenuData_Builder*) setWeight:(int32_t) value;
- (MenuData_Builder*) clearWeight;

- (BOOL) hasDepth;
- (int32_t) depth;
- (MenuData_Builder*) setDepth:(int32_t) value;
- (MenuData_Builder*) clearDepth;

- (BOOL) hasShortcut;
- (NSString*) shortcut;
- (MenuData_Builder*) setShortcut:(NSString*) value;
- (MenuData_Builder*) clearShortcut;

- (BOOL) hasMaxWindow;
- (int32_t) maxWindow;
- (MenuData_Builder*) setMaxWindow:(int32_t) value;
- (MenuData_Builder*) clearMaxWindow;

- (BOOL) hasMenuGroup;
- (int32_t) menuGroup;
- (MenuData_Builder*) setMenuGroup:(int32_t) value;
- (MenuData_Builder*) clearMenuGroup;

- (BOOL) hasEnable;
- (int32_t) enable;
- (MenuData_Builder*) setEnable:(int32_t) value;
- (MenuData_Builder*) clearEnable;
@end

@interface MarketCapping : PBGeneratedMessage {
@private
  BOOL hasCapping_:1;
  BOOL hasMarking_:1;
  BOOL hasType_:1;
  BOOL hasStockcode_:1;
  BOOL hasStockname_:1;
  Float64 capping;
  Float64 marking;
  NSString* type;
  NSString* stockcode;
  NSString* stockname;
}
- (BOOL) hasCapping;
- (BOOL) hasMarking;
- (BOOL) hasType;
- (BOOL) hasStockcode;
- (BOOL) hasStockname;
@property (readonly) Float64 capping;
@property (readonly) Float64 marking;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* stockcode;
@property (readonly, strong) NSString* stockname;

+ (MarketCapping*) defaultInstance;
- (MarketCapping*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MarketCapping_Builder*) builder;
+ (MarketCapping_Builder*) builder;
+ (MarketCapping_Builder*) builderWithPrototype:(MarketCapping*) prototype;
- (MarketCapping_Builder*) toBuilder;

+ (MarketCapping*) parseFromData:(NSData*) data;
+ (MarketCapping*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarketCapping*) parseFromInputStream:(NSInputStream*) input;
+ (MarketCapping*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarketCapping*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MarketCapping*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MarketCapping_Builder : PBGeneratedMessage_Builder {
@private
  MarketCapping* result;
}

- (MarketCapping*) defaultInstance;

- (MarketCapping_Builder*) clear;
- (MarketCapping_Builder*) clone;

- (MarketCapping*) build;
- (MarketCapping*) buildPartial;

- (MarketCapping_Builder*) mergeFrom:(MarketCapping*) other;
- (MarketCapping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MarketCapping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCapping;
- (Float64) capping;
- (MarketCapping_Builder*) setCapping:(Float64) value;
- (MarketCapping_Builder*) clearCapping;

- (BOOL) hasMarking;
- (Float64) marking;
- (MarketCapping_Builder*) setMarking:(Float64) value;
- (MarketCapping_Builder*) clearMarking;

- (BOOL) hasType;
- (NSString*) type;
- (MarketCapping_Builder*) setType:(NSString*) value;
- (MarketCapping_Builder*) clearType;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (MarketCapping_Builder*) setStockcode:(NSString*) value;
- (MarketCapping_Builder*) clearStockcode;

- (BOOL) hasStockname;
- (NSString*) stockname;
- (MarketCapping_Builder*) setStockname:(NSString*) value;
- (MarketCapping_Builder*) clearStockname;
@end

@interface SharesInfo : PBGeneratedMessage {
@private
  BOOL hasStockcode_:1;
  BOOL hasCltype_:1;
  BOOL hasRegularBoard_:1;
  BOOL hasNegotiatedBoard_:1;
  BOOL hasCashBoard_:1;
  BOOL hasCrossingBoard_:1;
  BOOL hasRegularTrx_:1;
  BOOL hasTplusTrx_:1;
  BOOL hasMarginTrx_:1;
  BOOL hasPreopeningFlag_:1;
  NSString* stockcode;
  NSString* cltype;
  NSString* regularBoard;
  NSString* negotiatedBoard;
  NSString* cashBoard;
  NSString* crossingBoard;
  NSString* regularTrx;
  NSString* tplusTrx;
  NSString* marginTrx;
  NSString* preopeningFlag;
}
- (BOOL) hasStockcode;
- (BOOL) hasCltype;
- (BOOL) hasRegularBoard;
- (BOOL) hasNegotiatedBoard;
- (BOOL) hasCashBoard;
- (BOOL) hasCrossingBoard;
- (BOOL) hasRegularTrx;
- (BOOL) hasTplusTrx;
- (BOOL) hasMarginTrx;
- (BOOL) hasPreopeningFlag;
@property (readonly, strong) NSString* stockcode;
@property (readonly, strong) NSString* cltype;
@property (readonly, strong) NSString* regularBoard;
@property (readonly, strong) NSString* negotiatedBoard;
@property (readonly, strong) NSString* cashBoard;
@property (readonly, strong) NSString* crossingBoard;
@property (readonly, strong) NSString* regularTrx;
@property (readonly, strong) NSString* tplusTrx;
@property (readonly, strong) NSString* marginTrx;
@property (readonly, strong) NSString* preopeningFlag;

+ (SharesInfo*) defaultInstance;
- (SharesInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SharesInfo_Builder*) builder;
+ (SharesInfo_Builder*) builder;
+ (SharesInfo_Builder*) builderWithPrototype:(SharesInfo*) prototype;
- (SharesInfo_Builder*) toBuilder;

+ (SharesInfo*) parseFromData:(NSData*) data;
+ (SharesInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SharesInfo*) parseFromInputStream:(NSInputStream*) input;
+ (SharesInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SharesInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SharesInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SharesInfo_Builder : PBGeneratedMessage_Builder {
@private
  SharesInfo* result;
}

- (SharesInfo*) defaultInstance;

- (SharesInfo_Builder*) clear;
- (SharesInfo_Builder*) clone;

- (SharesInfo*) build;
- (SharesInfo*) buildPartial;

- (SharesInfo_Builder*) mergeFrom:(SharesInfo*) other;
- (SharesInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SharesInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (SharesInfo_Builder*) setStockcode:(NSString*) value;
- (SharesInfo_Builder*) clearStockcode;

- (BOOL) hasCltype;
- (NSString*) cltype;
- (SharesInfo_Builder*) setCltype:(NSString*) value;
- (SharesInfo_Builder*) clearCltype;

- (BOOL) hasRegularBoard;
- (NSString*) regularBoard;
- (SharesInfo_Builder*) setRegularBoard:(NSString*) value;
- (SharesInfo_Builder*) clearRegularBoard;

- (BOOL) hasNegotiatedBoard;
- (NSString*) negotiatedBoard;
- (SharesInfo_Builder*) setNegotiatedBoard:(NSString*) value;
- (SharesInfo_Builder*) clearNegotiatedBoard;

- (BOOL) hasCashBoard;
- (NSString*) cashBoard;
- (SharesInfo_Builder*) setCashBoard:(NSString*) value;
- (SharesInfo_Builder*) clearCashBoard;

- (BOOL) hasCrossingBoard;
- (NSString*) crossingBoard;
- (SharesInfo_Builder*) setCrossingBoard:(NSString*) value;
- (SharesInfo_Builder*) clearCrossingBoard;

- (BOOL) hasRegularTrx;
- (NSString*) regularTrx;
- (SharesInfo_Builder*) setRegularTrx:(NSString*) value;
- (SharesInfo_Builder*) clearRegularTrx;

- (BOOL) hasTplusTrx;
- (NSString*) tplusTrx;
- (SharesInfo_Builder*) setTplusTrx:(NSString*) value;
- (SharesInfo_Builder*) clearTplusTrx;

- (BOOL) hasMarginTrx;
- (NSString*) marginTrx;
- (SharesInfo_Builder*) setMarginTrx:(NSString*) value;
- (SharesInfo_Builder*) clearMarginTrx;

- (BOOL) hasPreopeningFlag;
- (NSString*) preopeningFlag;
- (SharesInfo_Builder*) setPreopeningFlag:(NSString*) value;
- (SharesInfo_Builder*) clearPreopeningFlag;
@end

@interface LoginData : PBGeneratedMessage {
@private
  BOOL hasIsLogout_:1;
  BOOL hasLimitByValue_:1;
  BOOL hasLimitByQuantity_:1;
  BOOL hasLotSize_:1;
  BOOL hasAllowTrades_:1;
  BOOL hasAllowOrders_:1;
  BOOL hasGeneralMsg_:1;
  BOOL hasIpProxy_:1;
  BOOL hasIpTradeWebservice_:1;
  BOOL hasIpMarketWebservice_:1;
  BOOL hasUserPriv_:1;
  BOOL hasDownloadUpdate_:1;
  BOOL hasLoginStatus_:1;
  BOOL hasUserId_:1;
  BOOL hasIpTrade_:1;
  BOOL hasIpMarket_:1;
  BOOL hasSessionOl_:1;
  BOOL hasSessionMi_:1;
  BOOL hasUsertype_:1;
  BOOL hasFullname_:1;
  BOOL hasUsername_:1;
  BOOL hasChangePin_:1;
  BOOL hasChangePassword_:1;
  BOOL hasServerType_:1;
  BOOL isLogout_:1;
  Float64 limitByValue;
  Float64 limitByQuantity;
  int32_t lotSize;
  int32_t allowTrades;
  int32_t allowOrders;
  NSString* generalMsg;
  NSString* ipProxy;
  NSString* ipTradeWebservice;
  NSString* ipMarketWebservice;
  NSString* userPriv;
  NSString* downloadUpdate;
  NSString* loginStatus;
  NSString* userId;
  NSString* ipTrade;
  NSString* ipMarket;
  NSString* sessionOl;
  NSString* sessionMi;
  NSString* usertype;
  NSString* fullname;
  NSString* username;
  ChangePassword changePin;
  ChangePassword changePassword;
  ServerType serverType;
}
- (BOOL) hasUsername;
- (BOOL) hasFullname;
- (BOOL) hasUsertype;
- (BOOL) hasSessionMi;
- (BOOL) hasSessionOl;
- (BOOL) hasIpMarket;
- (BOOL) hasIpTrade;
- (BOOL) hasIsLogout;
- (BOOL) hasChangePassword;
- (BOOL) hasChangePin;
- (BOOL) hasUserId;
- (BOOL) hasLoginStatus;
- (BOOL) hasDownloadUpdate;
- (BOOL) hasLimitByQuantity;
- (BOOL) hasLimitByValue;
- (BOOL) hasUserPriv;
- (BOOL) hasAllowOrders;
- (BOOL) hasAllowTrades;
- (BOOL) hasServerType;
- (BOOL) hasIpMarketWebservice;
- (BOOL) hasIpTradeWebservice;
- (BOOL) hasLotSize;
- (BOOL) hasIpProxy;
- (BOOL) hasGeneralMsg;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* fullname;
@property (readonly, strong) NSString* usertype;
@property (readonly, strong) NSString* sessionMi;
@property (readonly, strong) NSString* sessionOl;
@property (readonly, strong) NSString* ipMarket;
@property (readonly, strong) NSString* ipTrade;
- (BOOL) isLogout;
@property (readonly) ChangePassword changePassword;
@property (readonly) ChangePassword changePin;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* loginStatus;
@property (readonly, strong) NSString* downloadUpdate;
@property (readonly) Float64 limitByQuantity;
@property (readonly) Float64 limitByValue;
@property (readonly, strong) NSString* userPriv;
@property (readonly) int32_t allowOrders;
@property (readonly) int32_t allowTrades;
@property (readonly) ServerType serverType;
@property (readonly, strong) NSString* ipMarketWebservice;
@property (readonly, strong) NSString* ipTradeWebservice;
@property (readonly) int32_t lotSize;
@property (readonly, strong) NSString* ipProxy;
@property (readonly, strong) NSString* generalMsg;

+ (LoginData*) defaultInstance;
- (LoginData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LoginData_Builder*) builder;
+ (LoginData_Builder*) builder;
+ (LoginData_Builder*) builderWithPrototype:(LoginData*) prototype;
- (LoginData_Builder*) toBuilder;

+ (LoginData*) parseFromData:(NSData*) data;
+ (LoginData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginData*) parseFromInputStream:(NSInputStream*) input;
+ (LoginData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LoginData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LoginData_Builder : PBGeneratedMessage_Builder {
@private
  LoginData* result;
}

- (LoginData*) defaultInstance;

- (LoginData_Builder*) clear;
- (LoginData_Builder*) clone;

- (LoginData*) build;
- (LoginData*) buildPartial;

- (LoginData_Builder*) mergeFrom:(LoginData*) other;
- (LoginData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LoginData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (LoginData_Builder*) setUsername:(NSString*) value;
- (LoginData_Builder*) clearUsername;

- (BOOL) hasFullname;
- (NSString*) fullname;
- (LoginData_Builder*) setFullname:(NSString*) value;
- (LoginData_Builder*) clearFullname;

- (BOOL) hasUsertype;
- (NSString*) usertype;
- (LoginData_Builder*) setUsertype:(NSString*) value;
- (LoginData_Builder*) clearUsertype;

- (BOOL) hasSessionMi;
- (NSString*) sessionMi;
- (LoginData_Builder*) setSessionMi:(NSString*) value;
- (LoginData_Builder*) clearSessionMi;

- (BOOL) hasSessionOl;
- (NSString*) sessionOl;
- (LoginData_Builder*) setSessionOl:(NSString*) value;
- (LoginData_Builder*) clearSessionOl;

- (BOOL) hasIpMarket;
- (NSString*) ipMarket;
- (LoginData_Builder*) setIpMarket:(NSString*) value;
- (LoginData_Builder*) clearIpMarket;

- (BOOL) hasIpTrade;
- (NSString*) ipTrade;
- (LoginData_Builder*) setIpTrade:(NSString*) value;
- (LoginData_Builder*) clearIpTrade;

- (BOOL) hasIsLogout;
- (BOOL) isLogout;
- (LoginData_Builder*) setIsLogout:(BOOL) value;
- (LoginData_Builder*) clearIsLogout;

- (BOOL) hasChangePassword;
- (ChangePassword) changePassword;
- (LoginData_Builder*) setChangePassword:(ChangePassword) value;
- (LoginData_Builder*) clearChangePassword;

- (BOOL) hasChangePin;
- (ChangePassword) changePin;
- (LoginData_Builder*) setChangePin:(ChangePassword) value;
- (LoginData_Builder*) clearChangePin;

- (BOOL) hasUserId;
- (NSString*) userId;
- (LoginData_Builder*) setUserId:(NSString*) value;
- (LoginData_Builder*) clearUserId;

- (BOOL) hasLoginStatus;
- (NSString*) loginStatus;
- (LoginData_Builder*) setLoginStatus:(NSString*) value;
- (LoginData_Builder*) clearLoginStatus;

- (BOOL) hasDownloadUpdate;
- (NSString*) downloadUpdate;
- (LoginData_Builder*) setDownloadUpdate:(NSString*) value;
- (LoginData_Builder*) clearDownloadUpdate;

- (BOOL) hasLimitByQuantity;
- (Float64) limitByQuantity;
- (LoginData_Builder*) setLimitByQuantity:(Float64) value;
- (LoginData_Builder*) clearLimitByQuantity;

- (BOOL) hasLimitByValue;
- (Float64) limitByValue;
- (LoginData_Builder*) setLimitByValue:(Float64) value;
- (LoginData_Builder*) clearLimitByValue;

- (BOOL) hasUserPriv;
- (NSString*) userPriv;
- (LoginData_Builder*) setUserPriv:(NSString*) value;
- (LoginData_Builder*) clearUserPriv;

- (BOOL) hasAllowOrders;
- (int32_t) allowOrders;
- (LoginData_Builder*) setAllowOrders:(int32_t) value;
- (LoginData_Builder*) clearAllowOrders;

- (BOOL) hasAllowTrades;
- (int32_t) allowTrades;
- (LoginData_Builder*) setAllowTrades:(int32_t) value;
- (LoginData_Builder*) clearAllowTrades;

- (BOOL) hasServerType;
- (ServerType) serverType;
- (LoginData_Builder*) setServerType:(ServerType) value;
- (LoginData_Builder*) clearServerType;

- (BOOL) hasIpMarketWebservice;
- (NSString*) ipMarketWebservice;
- (LoginData_Builder*) setIpMarketWebservice:(NSString*) value;
- (LoginData_Builder*) clearIpMarketWebservice;

- (BOOL) hasIpTradeWebservice;
- (NSString*) ipTradeWebservice;
- (LoginData_Builder*) setIpTradeWebservice:(NSString*) value;
- (LoginData_Builder*) clearIpTradeWebservice;

- (BOOL) hasLotSize;
- (int32_t) lotSize;
- (LoginData_Builder*) setLotSize:(int32_t) value;
- (LoginData_Builder*) clearLotSize;

- (BOOL) hasIpProxy;
- (NSString*) ipProxy;
- (LoginData_Builder*) setIpProxy:(NSString*) value;
- (LoginData_Builder*) clearIpProxy;

- (BOOL) hasGeneralMsg;
- (NSString*) generalMsg;
- (LoginData_Builder*) setGeneralMsg:(NSString*) value;
- (LoginData_Builder*) clearGeneralMsg;
@end

@interface MessageBroadcastData : PBGeneratedMessage {
@private
  BOOL hasMsgId_:1;
  BOOL hasTitle_:1;
  BOOL hasContent_:1;
  BOOL hasPublishedAt_:1;
  BOOL hasCreatedAt_:1;
  int32_t msgId;
  NSString* title;
  NSString* content;
  NSString* publishedAt;
  NSString* createdAt;
}
- (BOOL) hasMsgId;
- (BOOL) hasTitle;
- (BOOL) hasContent;
- (BOOL) hasPublishedAt;
- (BOOL) hasCreatedAt;
@property (readonly) int32_t msgId;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* content;
@property (readonly, strong) NSString* publishedAt;
@property (readonly, strong) NSString* createdAt;

+ (MessageBroadcastData*) defaultInstance;
- (MessageBroadcastData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MessageBroadcastData_Builder*) builder;
+ (MessageBroadcastData_Builder*) builder;
+ (MessageBroadcastData_Builder*) builderWithPrototype:(MessageBroadcastData*) prototype;
- (MessageBroadcastData_Builder*) toBuilder;

+ (MessageBroadcastData*) parseFromData:(NSData*) data;
+ (MessageBroadcastData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageBroadcastData*) parseFromInputStream:(NSInputStream*) input;
+ (MessageBroadcastData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageBroadcastData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MessageBroadcastData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MessageBroadcastData_Builder : PBGeneratedMessage_Builder {
@private
  MessageBroadcastData* result;
}

- (MessageBroadcastData*) defaultInstance;

- (MessageBroadcastData_Builder*) clear;
- (MessageBroadcastData_Builder*) clone;

- (MessageBroadcastData*) build;
- (MessageBroadcastData*) buildPartial;

- (MessageBroadcastData_Builder*) mergeFrom:(MessageBroadcastData*) other;
- (MessageBroadcastData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MessageBroadcastData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsgId;
- (int32_t) msgId;
- (MessageBroadcastData_Builder*) setMsgId:(int32_t) value;
- (MessageBroadcastData_Builder*) clearMsgId;

- (BOOL) hasTitle;
- (NSString*) title;
- (MessageBroadcastData_Builder*) setTitle:(NSString*) value;
- (MessageBroadcastData_Builder*) clearTitle;

- (BOOL) hasContent;
- (NSString*) content;
- (MessageBroadcastData_Builder*) setContent:(NSString*) value;
- (MessageBroadcastData_Builder*) clearContent;

- (BOOL) hasPublishedAt;
- (NSString*) publishedAt;
- (MessageBroadcastData_Builder*) setPublishedAt:(NSString*) value;
- (MessageBroadcastData_Builder*) clearPublishedAt;

- (BOOL) hasCreatedAt;
- (NSString*) createdAt;
- (MessageBroadcastData_Builder*) setCreatedAt:(NSString*) value;
- (MessageBroadcastData_Builder*) clearCreatedAt;
@end

@interface ClientList : PBGeneratedMessage {
@private
  BOOL hasIsMargin_:1;
  BOOL hasTradingLimit_:1;
  BOOL hasMinCommission_:1;
  BOOL hasRegCommission_:1;
  BOOL hasNegoBuyCommission_:1;
  BOOL hasNegoSellCommission_:1;
  BOOL hasRiskControl_:1;
  BOOL hasTypeName_:1;
  BOOL hasClientcode_:1;
  BOOL hasName_:1;
  BOOL hasSid_:1;
  BOOL hasForeigner_:1;
  BOOL hasGeneral_:1;
  BOOL isMargin_:1;
  Float64 tradingLimit;
  Float64 minCommission;
  Float64 regCommission;
  Float64 negoBuyCommission;
  Float64 negoSellCommission;
  int32_t riskControl;
  NSString* typeName;
  NSString* clientcode;
  NSString* name;
  NSString* sid;
  NSString* foreigner;
  NSString* general;
}
- (BOOL) hasTypeName;
- (BOOL) hasClientcode;
- (BOOL) hasName;
- (BOOL) hasSid;
- (BOOL) hasForeigner;
- (BOOL) hasIsMargin;
- (BOOL) hasTradingLimit;
- (BOOL) hasRiskControl;
- (BOOL) hasMinCommission;
- (BOOL) hasRegCommission;
- (BOOL) hasNegoBuyCommission;
- (BOOL) hasNegoSellCommission;
- (BOOL) hasGeneral;
@property (readonly, strong) NSString* typeName;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* sid;
@property (readonly, strong) NSString* foreigner;
- (BOOL) isMargin;
@property (readonly) Float64 tradingLimit;
@property (readonly) int32_t riskControl;
@property (readonly) Float64 minCommission;
@property (readonly) Float64 regCommission;
@property (readonly) Float64 negoBuyCommission;
@property (readonly) Float64 negoSellCommission;
@property (readonly, strong) NSString* general;

+ (ClientList*) defaultInstance;
- (ClientList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ClientList_Builder*) builder;
+ (ClientList_Builder*) builder;
+ (ClientList_Builder*) builderWithPrototype:(ClientList*) prototype;
- (ClientList_Builder*) toBuilder;

+ (ClientList*) parseFromData:(NSData*) data;
+ (ClientList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientList*) parseFromInputStream:(NSInputStream*) input;
+ (ClientList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ClientList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ClientList_Builder : PBGeneratedMessage_Builder {
@private
  ClientList* result;
}

- (ClientList*) defaultInstance;

- (ClientList_Builder*) clear;
- (ClientList_Builder*) clone;

- (ClientList*) build;
- (ClientList*) buildPartial;

- (ClientList_Builder*) mergeFrom:(ClientList*) other;
- (ClientList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ClientList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTypeName;
- (NSString*) typeName;
- (ClientList_Builder*) setTypeName:(NSString*) value;
- (ClientList_Builder*) clearTypeName;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (ClientList_Builder*) setClientcode:(NSString*) value;
- (ClientList_Builder*) clearClientcode;

- (BOOL) hasName;
- (NSString*) name;
- (ClientList_Builder*) setName:(NSString*) value;
- (ClientList_Builder*) clearName;

- (BOOL) hasSid;
- (NSString*) sid;
- (ClientList_Builder*) setSid:(NSString*) value;
- (ClientList_Builder*) clearSid;

- (BOOL) hasForeigner;
- (NSString*) foreigner;
- (ClientList_Builder*) setForeigner:(NSString*) value;
- (ClientList_Builder*) clearForeigner;

- (BOOL) hasIsMargin;
- (BOOL) isMargin;
- (ClientList_Builder*) setIsMargin:(BOOL) value;
- (ClientList_Builder*) clearIsMargin;

- (BOOL) hasTradingLimit;
- (Float64) tradingLimit;
- (ClientList_Builder*) setTradingLimit:(Float64) value;
- (ClientList_Builder*) clearTradingLimit;

- (BOOL) hasRiskControl;
- (int32_t) riskControl;
- (ClientList_Builder*) setRiskControl:(int32_t) value;
- (ClientList_Builder*) clearRiskControl;

- (BOOL) hasMinCommission;
- (Float64) minCommission;
- (ClientList_Builder*) setMinCommission:(Float64) value;
- (ClientList_Builder*) clearMinCommission;

- (BOOL) hasRegCommission;
- (Float64) regCommission;
- (ClientList_Builder*) setRegCommission:(Float64) value;
- (ClientList_Builder*) clearRegCommission;

- (BOOL) hasNegoBuyCommission;
- (Float64) negoBuyCommission;
- (ClientList_Builder*) setNegoBuyCommission:(Float64) value;
- (ClientList_Builder*) clearNegoBuyCommission;

- (BOOL) hasNegoSellCommission;
- (Float64) negoSellCommission;
- (ClientList_Builder*) setNegoSellCommission:(Float64) value;
- (ClientList_Builder*) clearNegoSellCommission;

- (BOOL) hasGeneral;
- (NSString*) general;
- (ClientList_Builder*) setGeneral:(NSString*) value;
- (ClientList_Builder*) clearGeneral;
@end

@interface RDNList : PBGeneratedMessage {
@private
  BOOL hasEffectiveDate_:1;
  BOOL hasClientcode_:1;
  BOOL hasRdn_:1;
  int32_t effectiveDate;
  NSString* clientcode;
  NSString* rdn;
}
- (BOOL) hasClientcode;
- (BOOL) hasRdn;
- (BOOL) hasEffectiveDate;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* rdn;
@property (readonly) int32_t effectiveDate;

+ (RDNList*) defaultInstance;
- (RDNList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RDNList_Builder*) builder;
+ (RDNList_Builder*) builder;
+ (RDNList_Builder*) builderWithPrototype:(RDNList*) prototype;
- (RDNList_Builder*) toBuilder;

+ (RDNList*) parseFromData:(NSData*) data;
+ (RDNList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RDNList*) parseFromInputStream:(NSInputStream*) input;
+ (RDNList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RDNList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RDNList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RDNList_Builder : PBGeneratedMessage_Builder {
@private
  RDNList* result;
}

- (RDNList*) defaultInstance;

- (RDNList_Builder*) clear;
- (RDNList_Builder*) clone;

- (RDNList*) build;
- (RDNList*) buildPartial;

- (RDNList_Builder*) mergeFrom:(RDNList*) other;
- (RDNList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RDNList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (RDNList_Builder*) setClientcode:(NSString*) value;
- (RDNList_Builder*) clearClientcode;

- (BOOL) hasRdn;
- (NSString*) rdn;
- (RDNList_Builder*) setRdn:(NSString*) value;
- (RDNList_Builder*) clearRdn;

- (BOOL) hasEffectiveDate;
- (int32_t) effectiveDate;
- (RDNList_Builder*) setEffectiveDate:(int32_t) value;
- (RDNList_Builder*) clearEffectiveDate;
@end

@interface Portfolio : PBGeneratedMessage {
@private
  BOOL hasLot_:1;
  BOOL hasStockInHand_:1;
  BOOL hasAvgPrice_:1;
  BOOL hasPotentialProfitLoss_:1;
  BOOL hasPotentialProfitLossPct_:1;
  BOOL hasOutstanding_:1;
  BOOL hasStockcode_:1;
  BOOL hasClientcode_:1;
  BOOL hasPrivileges_:1;
  Float64 lot;
  Float64 stockInHand;
  Float64 avgPrice;
  Float64 potentialProfitLoss;
  Float64 potentialProfitLossPct;
  Float64 outstanding;
  NSString* stockcode;
  NSString* clientcode;
  NSString* privileges;
}
- (BOOL) hasLot;
- (BOOL) hasStockInHand;
- (BOOL) hasAvgPrice;
- (BOOL) hasPotentialProfitLoss;
- (BOOL) hasPotentialProfitLossPct;
- (BOOL) hasStockcode;
- (BOOL) hasOutstanding;
- (BOOL) hasClientcode;
- (BOOL) hasPrivileges;
@property (readonly) Float64 lot;
@property (readonly) Float64 stockInHand;
@property (readonly) Float64 avgPrice;
@property (readonly) Float64 potentialProfitLoss;
@property (readonly) Float64 potentialProfitLossPct;
@property (readonly, strong) NSString* stockcode;
@property (readonly) Float64 outstanding;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* privileges;

+ (Portfolio*) defaultInstance;
- (Portfolio*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Portfolio_Builder*) builder;
+ (Portfolio_Builder*) builder;
+ (Portfolio_Builder*) builderWithPrototype:(Portfolio*) prototype;
- (Portfolio_Builder*) toBuilder;

+ (Portfolio*) parseFromData:(NSData*) data;
+ (Portfolio*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Portfolio*) parseFromInputStream:(NSInputStream*) input;
+ (Portfolio*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Portfolio*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Portfolio*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Portfolio_Builder : PBGeneratedMessage_Builder {
@private
  Portfolio* result;
}

- (Portfolio*) defaultInstance;

- (Portfolio_Builder*) clear;
- (Portfolio_Builder*) clone;

- (Portfolio*) build;
- (Portfolio*) buildPartial;

- (Portfolio_Builder*) mergeFrom:(Portfolio*) other;
- (Portfolio_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Portfolio_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLot;
- (Float64) lot;
- (Portfolio_Builder*) setLot:(Float64) value;
- (Portfolio_Builder*) clearLot;

- (BOOL) hasStockInHand;
- (Float64) stockInHand;
- (Portfolio_Builder*) setStockInHand:(Float64) value;
- (Portfolio_Builder*) clearStockInHand;

- (BOOL) hasAvgPrice;
- (Float64) avgPrice;
- (Portfolio_Builder*) setAvgPrice:(Float64) value;
- (Portfolio_Builder*) clearAvgPrice;

- (BOOL) hasPotentialProfitLoss;
- (Float64) potentialProfitLoss;
- (Portfolio_Builder*) setPotentialProfitLoss:(Float64) value;
- (Portfolio_Builder*) clearPotentialProfitLoss;

- (BOOL) hasPotentialProfitLossPct;
- (Float64) potentialProfitLossPct;
- (Portfolio_Builder*) setPotentialProfitLossPct:(Float64) value;
- (Portfolio_Builder*) clearPotentialProfitLossPct;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (Portfolio_Builder*) setStockcode:(NSString*) value;
- (Portfolio_Builder*) clearStockcode;

- (BOOL) hasOutstanding;
- (Float64) outstanding;
- (Portfolio_Builder*) setOutstanding:(Float64) value;
- (Portfolio_Builder*) clearOutstanding;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (Portfolio_Builder*) setClientcode:(NSString*) value;
- (Portfolio_Builder*) clearClientcode;

- (BOOL) hasPrivileges;
- (NSString*) privileges;
- (Portfolio_Builder*) setPrivileges:(NSString*) value;
- (Portfolio_Builder*) clearPrivileges;
@end

@interface CustomerPosition : PBGeneratedMessage {
@private
  BOOL hasNettProfitLossPct_:1;
  BOOL hasNettProfitLoss_:1;
  BOOL hasSellTradeValue_:1;
  BOOL hasBuyOrderValue_:1;
  BOOL hasBuyTradeValue_:1;
  BOOL hasOutstanding_:1;
  BOOL hasBuyingPower_:1;
  BOOL hasModifiedLoanValue_:1;
  BOOL hasModifiedMarketValue_:1;
  BOOL hasMarketValue_:1;
  BOOL hasLoanRatio_:1;
  BOOL hasTradingLimit_:1;
  BOOL hasLoanBalance_:1;
  BOOL hasOrderPower_:1;
  BOOL hasRating_:1;
  BOOL hasSid_:1;
  BOOL hasInvestorAcc_:1;
  BOOL hasType_:1;
  BOOL hasName_:1;
  BOOL hasClientcode_:1;
  Float64 nettProfitLossPct;
  Float64 nettProfitLoss;
  Float64 sellTradeValue;
  Float64 buyOrderValue;
  Float64 buyTradeValue;
  Float64 outstanding;
  Float64 buyingPower;
  Float64 modifiedLoanValue;
  Float64 modifiedMarketValue;
  Float64 marketValue;
  Float64 loanRatio;
  Float64 tradingLimit;
  Float64 loanBalance;
  Float64 orderPower;
  NSString* rating;
  NSString* sid;
  NSString* investorAcc;
  NSString* type;
  NSString* name;
  NSString* clientcode;
}
- (BOOL) hasClientcode;
- (BOOL) hasName;
- (BOOL) hasType;
- (BOOL) hasInvestorAcc;
- (BOOL) hasSid;
- (BOOL) hasOrderPower;
- (BOOL) hasLoanBalance;
- (BOOL) hasTradingLimit;
- (BOOL) hasLoanRatio;
- (BOOL) hasMarketValue;
- (BOOL) hasModifiedMarketValue;
- (BOOL) hasModifiedLoanValue;
- (BOOL) hasRating;
- (BOOL) hasBuyingPower;
- (BOOL) hasOutstanding;
- (BOOL) hasBuyTradeValue;
- (BOOL) hasBuyOrderValue;
- (BOOL) hasSellTradeValue;
- (BOOL) hasNettProfitLoss;
- (BOOL) hasNettProfitLossPct;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* investorAcc;
@property (readonly, strong) NSString* sid;
@property (readonly) Float64 orderPower;
@property (readonly) Float64 loanBalance;
@property (readonly) Float64 tradingLimit;
@property (readonly) Float64 loanRatio;
@property (readonly) Float64 marketValue;
@property (readonly) Float64 modifiedMarketValue;
@property (readonly) Float64 modifiedLoanValue;
@property (readonly, strong) NSString* rating;
@property (readonly) Float64 buyingPower;
@property (readonly) Float64 outstanding;
@property (readonly) Float64 buyTradeValue;
@property (readonly) Float64 buyOrderValue;
@property (readonly) Float64 sellTradeValue;
@property (readonly) Float64 nettProfitLoss;
@property (readonly) Float64 nettProfitLossPct;

+ (CustomerPosition*) defaultInstance;
- (CustomerPosition*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CustomerPosition_Builder*) builder;
+ (CustomerPosition_Builder*) builder;
+ (CustomerPosition_Builder*) builderWithPrototype:(CustomerPosition*) prototype;
- (CustomerPosition_Builder*) toBuilder;

+ (CustomerPosition*) parseFromData:(NSData*) data;
+ (CustomerPosition*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomerPosition*) parseFromInputStream:(NSInputStream*) input;
+ (CustomerPosition*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomerPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CustomerPosition*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CustomerPosition_Builder : PBGeneratedMessage_Builder {
@private
  CustomerPosition* result;
}

- (CustomerPosition*) defaultInstance;

- (CustomerPosition_Builder*) clear;
- (CustomerPosition_Builder*) clone;

- (CustomerPosition*) build;
- (CustomerPosition*) buildPartial;

- (CustomerPosition_Builder*) mergeFrom:(CustomerPosition*) other;
- (CustomerPosition_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CustomerPosition_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (CustomerPosition_Builder*) setClientcode:(NSString*) value;
- (CustomerPosition_Builder*) clearClientcode;

- (BOOL) hasName;
- (NSString*) name;
- (CustomerPosition_Builder*) setName:(NSString*) value;
- (CustomerPosition_Builder*) clearName;

- (BOOL) hasType;
- (NSString*) type;
- (CustomerPosition_Builder*) setType:(NSString*) value;
- (CustomerPosition_Builder*) clearType;

- (BOOL) hasInvestorAcc;
- (NSString*) investorAcc;
- (CustomerPosition_Builder*) setInvestorAcc:(NSString*) value;
- (CustomerPosition_Builder*) clearInvestorAcc;

- (BOOL) hasSid;
- (NSString*) sid;
- (CustomerPosition_Builder*) setSid:(NSString*) value;
- (CustomerPosition_Builder*) clearSid;

- (BOOL) hasOrderPower;
- (Float64) orderPower;
- (CustomerPosition_Builder*) setOrderPower:(Float64) value;
- (CustomerPosition_Builder*) clearOrderPower;

- (BOOL) hasLoanBalance;
- (Float64) loanBalance;
- (CustomerPosition_Builder*) setLoanBalance:(Float64) value;
- (CustomerPosition_Builder*) clearLoanBalance;

- (BOOL) hasTradingLimit;
- (Float64) tradingLimit;
- (CustomerPosition_Builder*) setTradingLimit:(Float64) value;
- (CustomerPosition_Builder*) clearTradingLimit;

- (BOOL) hasLoanRatio;
- (Float64) loanRatio;
- (CustomerPosition_Builder*) setLoanRatio:(Float64) value;
- (CustomerPosition_Builder*) clearLoanRatio;

- (BOOL) hasMarketValue;
- (Float64) marketValue;
- (CustomerPosition_Builder*) setMarketValue:(Float64) value;
- (CustomerPosition_Builder*) clearMarketValue;

- (BOOL) hasModifiedMarketValue;
- (Float64) modifiedMarketValue;
- (CustomerPosition_Builder*) setModifiedMarketValue:(Float64) value;
- (CustomerPosition_Builder*) clearModifiedMarketValue;

- (BOOL) hasModifiedLoanValue;
- (Float64) modifiedLoanValue;
- (CustomerPosition_Builder*) setModifiedLoanValue:(Float64) value;
- (CustomerPosition_Builder*) clearModifiedLoanValue;

- (BOOL) hasRating;
- (NSString*) rating;
- (CustomerPosition_Builder*) setRating:(NSString*) value;
- (CustomerPosition_Builder*) clearRating;

- (BOOL) hasBuyingPower;
- (Float64) buyingPower;
- (CustomerPosition_Builder*) setBuyingPower:(Float64) value;
- (CustomerPosition_Builder*) clearBuyingPower;

- (BOOL) hasOutstanding;
- (Float64) outstanding;
- (CustomerPosition_Builder*) setOutstanding:(Float64) value;
- (CustomerPosition_Builder*) clearOutstanding;

- (BOOL) hasBuyTradeValue;
- (Float64) buyTradeValue;
- (CustomerPosition_Builder*) setBuyTradeValue:(Float64) value;
- (CustomerPosition_Builder*) clearBuyTradeValue;

- (BOOL) hasBuyOrderValue;
- (Float64) buyOrderValue;
- (CustomerPosition_Builder*) setBuyOrderValue:(Float64) value;
- (CustomerPosition_Builder*) clearBuyOrderValue;

- (BOOL) hasSellTradeValue;
- (Float64) sellTradeValue;
- (CustomerPosition_Builder*) setSellTradeValue:(Float64) value;
- (CustomerPosition_Builder*) clearSellTradeValue;

- (BOOL) hasNettProfitLoss;
- (Float64) nettProfitLoss;
- (CustomerPosition_Builder*) setNettProfitLoss:(Float64) value;
- (CustomerPosition_Builder*) clearNettProfitLoss;

- (BOOL) hasNettProfitLossPct;
- (Float64) nettProfitLossPct;
- (CustomerPosition_Builder*) setNettProfitLossPct:(Float64) value;
- (CustomerPosition_Builder*) clearNettProfitLossPct;
@end

@interface CashFlow : PBGeneratedMessage {
@private
  BOOL hasT1_:1;
  BOOL hasT2_:1;
  BOOL hasT3_:1;
  BOOL hasT0_:1;
  BOOL hasDescription_:1;
  Float64 t1;
  Float64 t2;
  Float64 t3;
  Float64 t0;
  NSString* description;
}
- (BOOL) hasT1;
- (BOOL) hasT2;
- (BOOL) hasT3;
- (BOOL) hasDescription;
- (BOOL) hasT0;
@property (readonly) Float64 t1;
@property (readonly) Float64 t2;
@property (readonly) Float64 t3;
@property (readonly, strong) NSString* description;
@property (readonly) Float64 t0;

+ (CashFlow*) defaultInstance;
- (CashFlow*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CashFlow_Builder*) builder;
+ (CashFlow_Builder*) builder;
+ (CashFlow_Builder*) builderWithPrototype:(CashFlow*) prototype;
- (CashFlow_Builder*) toBuilder;

+ (CashFlow*) parseFromData:(NSData*) data;
+ (CashFlow*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashFlow*) parseFromInputStream:(NSInputStream*) input;
+ (CashFlow*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashFlow*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CashFlow*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CashFlow_Builder : PBGeneratedMessage_Builder {
@private
  CashFlow* result;
}

- (CashFlow*) defaultInstance;

- (CashFlow_Builder*) clear;
- (CashFlow_Builder*) clone;

- (CashFlow*) build;
- (CashFlow*) buildPartial;

- (CashFlow_Builder*) mergeFrom:(CashFlow*) other;
- (CashFlow_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CashFlow_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasT1;
- (Float64) t1;
- (CashFlow_Builder*) setT1:(Float64) value;
- (CashFlow_Builder*) clearT1;

- (BOOL) hasT2;
- (Float64) t2;
- (CashFlow_Builder*) setT2:(Float64) value;
- (CashFlow_Builder*) clearT2;

- (BOOL) hasT3;
- (Float64) t3;
- (CashFlow_Builder*) setT3:(Float64) value;
- (CashFlow_Builder*) clearT3;

- (BOOL) hasDescription;
- (NSString*) description;
- (CashFlow_Builder*) setDescription:(NSString*) value;
- (CashFlow_Builder*) clearDescription;

- (BOOL) hasT0;
- (Float64) t0;
- (CashFlow_Builder*) setT0:(Float64) value;
- (CashFlow_Builder*) clearT0;
@end

@interface CustomerExposure : PBGeneratedMessage {
@private
  BOOL hasQty_:1;
  BOOL hasClientname_:1;
  BOOL hasType_:1;
  BOOL hasStockcode_:1;
  BOOL hasOfficercode_:1;
  Float64 qty;
  NSString* clientname;
  NSString* type;
  NSString* stockcode;
  NSString* officercode;
}
- (BOOL) hasClientname;
- (BOOL) hasType;
- (BOOL) hasQty;
- (BOOL) hasStockcode;
- (BOOL) hasOfficercode;
@property (readonly, strong) NSString* clientname;
@property (readonly, strong) NSString* type;
@property (readonly) Float64 qty;
@property (readonly, strong) NSString* stockcode;
@property (readonly, strong) NSString* officercode;

+ (CustomerExposure*) defaultInstance;
- (CustomerExposure*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CustomerExposure_Builder*) builder;
+ (CustomerExposure_Builder*) builder;
+ (CustomerExposure_Builder*) builderWithPrototype:(CustomerExposure*) prototype;
- (CustomerExposure_Builder*) toBuilder;

+ (CustomerExposure*) parseFromData:(NSData*) data;
+ (CustomerExposure*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomerExposure*) parseFromInputStream:(NSInputStream*) input;
+ (CustomerExposure*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomerExposure*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CustomerExposure*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CustomerExposure_Builder : PBGeneratedMessage_Builder {
@private
  CustomerExposure* result;
}

- (CustomerExposure*) defaultInstance;

- (CustomerExposure_Builder*) clear;
- (CustomerExposure_Builder*) clone;

- (CustomerExposure*) build;
- (CustomerExposure*) buildPartial;

- (CustomerExposure_Builder*) mergeFrom:(CustomerExposure*) other;
- (CustomerExposure_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CustomerExposure_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (CustomerExposure_Builder*) setClientname:(NSString*) value;
- (CustomerExposure_Builder*) clearClientname;

- (BOOL) hasType;
- (NSString*) type;
- (CustomerExposure_Builder*) setType:(NSString*) value;
- (CustomerExposure_Builder*) clearType;

- (BOOL) hasQty;
- (Float64) qty;
- (CustomerExposure_Builder*) setQty:(Float64) value;
- (CustomerExposure_Builder*) clearQty;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (CustomerExposure_Builder*) setStockcode:(NSString*) value;
- (CustomerExposure_Builder*) clearStockcode;

- (BOOL) hasOfficercode;
- (NSString*) officercode;
- (CustomerExposure_Builder*) setOfficercode:(NSString*) value;
- (CustomerExposure_Builder*) clearOfficercode;
@end

@interface OrderMobile : PBGeneratedMessage {
@private
  BOOL hasTradeQty_:1;
  BOOL hasOrderQty_:1;
  BOOL hasLeavesQty_:1;
  BOOL hasCumQty_:1;
  BOOL hasTradePrice_:1;
  BOOL hasSequenceNo_:1;
  BOOL hasSide_:1;
  BOOL hasPrice_:1;
  BOOL hasTradeTime_:1;
  BOOL hasOrderId_:1;
  BOOL hasDescription_:1;
  BOOL hasCreatedTime_:1;
  BOOL hasSecurityCode_:1;
  BOOL hasBoard_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasClientName_:1;
  BOOL hasClientCode_:1;
  BOOL hasJatsOrderId_:1;
  Float64 tradeQty;
  Float64 orderQty;
  Float64 leavesQty;
  Float64 cumQty;
  int32_t tradePrice;
  int32_t sequenceNo;
  int32_t side;
  int32_t price;
  NSString* tradeTime;
  NSString* orderId;
  NSString* description;
  NSString* createdTime;
  NSString* securityCode;
  NSString* board;
  NSString* orderStatus;
  NSString* clientName;
  NSString* clientCode;
  NSString* jatsOrderId;
}
- (BOOL) hasJatsOrderId;
- (BOOL) hasClientCode;
- (BOOL) hasClientName;
- (BOOL) hasOrderStatus;
- (BOOL) hasBoard;
- (BOOL) hasSide;
- (BOOL) hasSecurityCode;
- (BOOL) hasOrderQty;
- (BOOL) hasPrice;
- (BOOL) hasLeavesQty;
- (BOOL) hasCumQty;
- (BOOL) hasCreatedTime;
- (BOOL) hasDescription;
- (BOOL) hasSequenceNo;
- (BOOL) hasOrderId;
- (BOOL) hasTradeQty;
- (BOOL) hasTradePrice;
- (BOOL) hasTradeTime;
@property (readonly, strong) NSString* jatsOrderId;
@property (readonly, strong) NSString* clientCode;
@property (readonly, strong) NSString* clientName;
@property (readonly, strong) NSString* orderStatus;
@property (readonly, strong) NSString* board;
@property (readonly) int32_t side;
@property (readonly, strong) NSString* securityCode;
@property (readonly) Float64 orderQty;
@property (readonly) int32_t price;
@property (readonly) Float64 leavesQty;
@property (readonly) Float64 cumQty;
@property (readonly, strong) NSString* createdTime;
@property (readonly, strong) NSString* description;
@property (readonly) int32_t sequenceNo;
@property (readonly, strong) NSString* orderId;
@property (readonly) Float64 tradeQty;
@property (readonly) int32_t tradePrice;
@property (readonly, strong) NSString* tradeTime;

+ (OrderMobile*) defaultInstance;
- (OrderMobile*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OrderMobile_Builder*) builder;
+ (OrderMobile_Builder*) builder;
+ (OrderMobile_Builder*) builderWithPrototype:(OrderMobile*) prototype;
- (OrderMobile_Builder*) toBuilder;

+ (OrderMobile*) parseFromData:(NSData*) data;
+ (OrderMobile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderMobile*) parseFromInputStream:(NSInputStream*) input;
+ (OrderMobile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderMobile*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OrderMobile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OrderMobile_Builder : PBGeneratedMessage_Builder {
@private
  OrderMobile* result;
}

- (OrderMobile*) defaultInstance;

- (OrderMobile_Builder*) clear;
- (OrderMobile_Builder*) clone;

- (OrderMobile*) build;
- (OrderMobile*) buildPartial;

- (OrderMobile_Builder*) mergeFrom:(OrderMobile*) other;
- (OrderMobile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OrderMobile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasJatsOrderId;
- (NSString*) jatsOrderId;
- (OrderMobile_Builder*) setJatsOrderId:(NSString*) value;
- (OrderMobile_Builder*) clearJatsOrderId;

- (BOOL) hasClientCode;
- (NSString*) clientCode;
- (OrderMobile_Builder*) setClientCode:(NSString*) value;
- (OrderMobile_Builder*) clearClientCode;

- (BOOL) hasClientName;
- (NSString*) clientName;
- (OrderMobile_Builder*) setClientName:(NSString*) value;
- (OrderMobile_Builder*) clearClientName;

- (BOOL) hasOrderStatus;
- (NSString*) orderStatus;
- (OrderMobile_Builder*) setOrderStatus:(NSString*) value;
- (OrderMobile_Builder*) clearOrderStatus;

- (BOOL) hasBoard;
- (NSString*) board;
- (OrderMobile_Builder*) setBoard:(NSString*) value;
- (OrderMobile_Builder*) clearBoard;

- (BOOL) hasSide;
- (int32_t) side;
- (OrderMobile_Builder*) setSide:(int32_t) value;
- (OrderMobile_Builder*) clearSide;

- (BOOL) hasSecurityCode;
- (NSString*) securityCode;
- (OrderMobile_Builder*) setSecurityCode:(NSString*) value;
- (OrderMobile_Builder*) clearSecurityCode;

- (BOOL) hasOrderQty;
- (Float64) orderQty;
- (OrderMobile_Builder*) setOrderQty:(Float64) value;
- (OrderMobile_Builder*) clearOrderQty;

- (BOOL) hasPrice;
- (int32_t) price;
- (OrderMobile_Builder*) setPrice:(int32_t) value;
- (OrderMobile_Builder*) clearPrice;

- (BOOL) hasLeavesQty;
- (Float64) leavesQty;
- (OrderMobile_Builder*) setLeavesQty:(Float64) value;
- (OrderMobile_Builder*) clearLeavesQty;

- (BOOL) hasCumQty;
- (Float64) cumQty;
- (OrderMobile_Builder*) setCumQty:(Float64) value;
- (OrderMobile_Builder*) clearCumQty;

- (BOOL) hasCreatedTime;
- (NSString*) createdTime;
- (OrderMobile_Builder*) setCreatedTime:(NSString*) value;
- (OrderMobile_Builder*) clearCreatedTime;

- (BOOL) hasDescription;
- (NSString*) description;
- (OrderMobile_Builder*) setDescription:(NSString*) value;
- (OrderMobile_Builder*) clearDescription;

- (BOOL) hasSequenceNo;
- (int32_t) sequenceNo;
- (OrderMobile_Builder*) setSequenceNo:(int32_t) value;
- (OrderMobile_Builder*) clearSequenceNo;

- (BOOL) hasOrderId;
- (NSString*) orderId;
- (OrderMobile_Builder*) setOrderId:(NSString*) value;
- (OrderMobile_Builder*) clearOrderId;

- (BOOL) hasTradeQty;
- (Float64) tradeQty;
- (OrderMobile_Builder*) setTradeQty:(Float64) value;
- (OrderMobile_Builder*) clearTradeQty;

- (BOOL) hasTradePrice;
- (int32_t) tradePrice;
- (OrderMobile_Builder*) setTradePrice:(int32_t) value;
- (OrderMobile_Builder*) clearTradePrice;

- (BOOL) hasTradeTime;
- (NSString*) tradeTime;
- (OrderMobile_Builder*) setTradeTime:(NSString*) value;
- (OrderMobile_Builder*) clearTradeTime;
@end

@interface OrderGtc : PBGeneratedMessage {
@private
  BOOL hasGtcStatus_:1;
  BOOL hasExecutionFlag_:1;
  BOOL hasExpiredFlag_:1;
  BOOL hasGtcId_:1;
  BOOL hasIsPooled_:1;
  BOOL hasMaintenanceDate_:1;
  BOOL hasDescription_:1;
  BOOL hasOrders_:1;
  int32_t gtcStatus;
  int32_t executionFlag;
  int32_t expiredFlag;
  NSString* gtcId;
  NSString* isPooled;
  NSString* maintenanceDate;
  NSString* description;
  TxOrder* orders;
}
- (BOOL) hasGtcId;
- (BOOL) hasGtcStatus;
- (BOOL) hasIsPooled;
- (BOOL) hasMaintenanceDate;
- (BOOL) hasExecutionFlag;
- (BOOL) hasExpiredFlag;
- (BOOL) hasOrders;
- (BOOL) hasDescription;
@property (readonly, strong) NSString* gtcId;
@property (readonly) int32_t gtcStatus;
@property (readonly, strong) NSString* isPooled;
@property (readonly, strong) NSString* maintenanceDate;
@property (readonly) int32_t executionFlag;
@property (readonly) int32_t expiredFlag;
@property (readonly, strong) TxOrder* orders;
@property (readonly, strong) NSString* description;

+ (OrderGtc*) defaultInstance;
- (OrderGtc*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OrderGtc_Builder*) builder;
+ (OrderGtc_Builder*) builder;
+ (OrderGtc_Builder*) builderWithPrototype:(OrderGtc*) prototype;
- (OrderGtc_Builder*) toBuilder;

+ (OrderGtc*) parseFromData:(NSData*) data;
+ (OrderGtc*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderGtc*) parseFromInputStream:(NSInputStream*) input;
+ (OrderGtc*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderGtc*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OrderGtc*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OrderGtc_Builder : PBGeneratedMessage_Builder {
@private
  OrderGtc* result;
}

- (OrderGtc*) defaultInstance;

- (OrderGtc_Builder*) clear;
- (OrderGtc_Builder*) clone;

- (OrderGtc*) build;
- (OrderGtc*) buildPartial;

- (OrderGtc_Builder*) mergeFrom:(OrderGtc*) other;
- (OrderGtc_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OrderGtc_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGtcId;
- (NSString*) gtcId;
- (OrderGtc_Builder*) setGtcId:(NSString*) value;
- (OrderGtc_Builder*) clearGtcId;

- (BOOL) hasGtcStatus;
- (int32_t) gtcStatus;
- (OrderGtc_Builder*) setGtcStatus:(int32_t) value;
- (OrderGtc_Builder*) clearGtcStatus;

- (BOOL) hasIsPooled;
- (NSString*) isPooled;
- (OrderGtc_Builder*) setIsPooled:(NSString*) value;
- (OrderGtc_Builder*) clearIsPooled;

- (BOOL) hasMaintenanceDate;
- (NSString*) maintenanceDate;
- (OrderGtc_Builder*) setMaintenanceDate:(NSString*) value;
- (OrderGtc_Builder*) clearMaintenanceDate;

- (BOOL) hasExecutionFlag;
- (int32_t) executionFlag;
- (OrderGtc_Builder*) setExecutionFlag:(int32_t) value;
- (OrderGtc_Builder*) clearExecutionFlag;

- (BOOL) hasExpiredFlag;
- (int32_t) expiredFlag;
- (OrderGtc_Builder*) setExpiredFlag:(int32_t) value;
- (OrderGtc_Builder*) clearExpiredFlag;

- (BOOL) hasOrders;
- (TxOrder*) orders;
- (OrderGtc_Builder*) setOrders:(TxOrder*) value;
- (OrderGtc_Builder*) setOrdersBuilder:(TxOrder_Builder*) builderForValue;
- (OrderGtc_Builder*) mergeOrders:(TxOrder*) value;
- (OrderGtc_Builder*) clearOrders;

- (BOOL) hasDescription;
- (NSString*) description;
- (OrderGtc_Builder*) setDescription:(NSString*) value;
- (OrderGtc_Builder*) clearDescription;
@end

@interface OrderConditional : PBGeneratedMessage {
@private
  BOOL hasOcid_:1;
  BOOL hasSide_:1;
  BOOL hasRules_:1;
  BOOL hasTrend_:1;
  BOOL hasPriceBound_:1;
  BOOL hasPrice_:1;
  BOOL hasQty_:1;
  BOOL hasPriceDiff_:1;
  BOOL hasStatus_:1;
  BOOL hasOrdstatus_:1;
  BOOL hasMatchqty_:1;
  BOOL hasGtdDate_:1;
  BOOL hasTimeBound_:1;
  BOOL hasLastUpdated_:1;
  BOOL hasCreatedDate_:1;
  BOOL hasTerminateAct_:1;
  BOOL hasOwnerid_:1;
  BOOL hasClordid_:1;
  BOOL hasWhencomp2_:1;
  BOOL hasWhen2_:1;
  BOOL hasWhencomp1_:1;
  BOOL hasWhen1_:1;
  BOOL hasStockcode_:1;
  BOOL hasOrders_:1;
  int32_t ocid;
  int32_t side;
  int32_t rules;
  int32_t trend;
  int32_t priceBound;
  int32_t price;
  int32_t qty;
  int32_t priceDiff;
  int32_t status;
  int32_t ordstatus;
  int32_t matchqty;
  NSString* gtdDate;
  NSString* timeBound;
  NSString* lastUpdated;
  NSString* createdDate;
  NSString* terminateAct;
  NSString* ownerid;
  NSString* clordid;
  NSString* whencomp2;
  NSString* when2;
  NSString* whencomp1;
  NSString* when1;
  NSString* stockcode;
  TxOrder* orders;
}
- (BOOL) hasOcid;
- (BOOL) hasStockcode;
- (BOOL) hasSide;
- (BOOL) hasRules;
- (BOOL) hasTrend;
- (BOOL) hasWhen1;
- (BOOL) hasWhencomp1;
- (BOOL) hasPrice;
- (BOOL) hasWhen2;
- (BOOL) hasWhencomp2;
- (BOOL) hasQty;
- (BOOL) hasPriceDiff;
- (BOOL) hasClordid;
- (BOOL) hasStatus;
- (BOOL) hasOrdstatus;
- (BOOL) hasMatchqty;
- (BOOL) hasOwnerid;
- (BOOL) hasTerminateAct;
- (BOOL) hasCreatedDate;
- (BOOL) hasLastUpdated;
- (BOOL) hasOrders;
- (BOOL) hasPriceBound;
- (BOOL) hasTimeBound;
- (BOOL) hasGtdDate;
@property (readonly) int32_t ocid;
@property (readonly, strong) NSString* stockcode;
@property (readonly) int32_t side;
@property (readonly) int32_t rules;
@property (readonly) int32_t trend;
@property (readonly, strong) NSString* when1;
@property (readonly, strong) NSString* whencomp1;
@property (readonly) int32_t price;
@property (readonly, strong) NSString* when2;
@property (readonly, strong) NSString* whencomp2;
@property (readonly) int32_t qty;
@property (readonly) int32_t priceDiff;
@property (readonly, strong) NSString* clordid;
@property (readonly) int32_t status;
@property (readonly) int32_t ordstatus;
@property (readonly) int32_t matchqty;
@property (readonly, strong) NSString* ownerid;
@property (readonly, strong) NSString* terminateAct;
@property (readonly, strong) NSString* createdDate;
@property (readonly, strong) NSString* lastUpdated;
@property (readonly, strong) TxOrder* orders;
@property (readonly) int32_t priceBound;
@property (readonly, strong) NSString* timeBound;
@property (readonly, strong) NSString* gtdDate;

+ (OrderConditional*) defaultInstance;
- (OrderConditional*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OrderConditional_Builder*) builder;
+ (OrderConditional_Builder*) builder;
+ (OrderConditional_Builder*) builderWithPrototype:(OrderConditional*) prototype;
- (OrderConditional_Builder*) toBuilder;

+ (OrderConditional*) parseFromData:(NSData*) data;
+ (OrderConditional*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderConditional*) parseFromInputStream:(NSInputStream*) input;
+ (OrderConditional*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderConditional*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OrderConditional*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OrderConditional_Builder : PBGeneratedMessage_Builder {
@private
  OrderConditional* result;
}

- (OrderConditional*) defaultInstance;

- (OrderConditional_Builder*) clear;
- (OrderConditional_Builder*) clone;

- (OrderConditional*) build;
- (OrderConditional*) buildPartial;

- (OrderConditional_Builder*) mergeFrom:(OrderConditional*) other;
- (OrderConditional_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OrderConditional_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOcid;
- (int32_t) ocid;
- (OrderConditional_Builder*) setOcid:(int32_t) value;
- (OrderConditional_Builder*) clearOcid;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (OrderConditional_Builder*) setStockcode:(NSString*) value;
- (OrderConditional_Builder*) clearStockcode;

- (BOOL) hasSide;
- (int32_t) side;
- (OrderConditional_Builder*) setSide:(int32_t) value;
- (OrderConditional_Builder*) clearSide;

- (BOOL) hasRules;
- (int32_t) rules;
- (OrderConditional_Builder*) setRules:(int32_t) value;
- (OrderConditional_Builder*) clearRules;

- (BOOL) hasTrend;
- (int32_t) trend;
- (OrderConditional_Builder*) setTrend:(int32_t) value;
- (OrderConditional_Builder*) clearTrend;

- (BOOL) hasWhen1;
- (NSString*) when1;
- (OrderConditional_Builder*) setWhen1:(NSString*) value;
- (OrderConditional_Builder*) clearWhen1;

- (BOOL) hasWhencomp1;
- (NSString*) whencomp1;
- (OrderConditional_Builder*) setWhencomp1:(NSString*) value;
- (OrderConditional_Builder*) clearWhencomp1;

- (BOOL) hasPrice;
- (int32_t) price;
- (OrderConditional_Builder*) setPrice:(int32_t) value;
- (OrderConditional_Builder*) clearPrice;

- (BOOL) hasWhen2;
- (NSString*) when2;
- (OrderConditional_Builder*) setWhen2:(NSString*) value;
- (OrderConditional_Builder*) clearWhen2;

- (BOOL) hasWhencomp2;
- (NSString*) whencomp2;
- (OrderConditional_Builder*) setWhencomp2:(NSString*) value;
- (OrderConditional_Builder*) clearWhencomp2;

- (BOOL) hasQty;
- (int32_t) qty;
- (OrderConditional_Builder*) setQty:(int32_t) value;
- (OrderConditional_Builder*) clearQty;

- (BOOL) hasPriceDiff;
- (int32_t) priceDiff;
- (OrderConditional_Builder*) setPriceDiff:(int32_t) value;
- (OrderConditional_Builder*) clearPriceDiff;

- (BOOL) hasClordid;
- (NSString*) clordid;
- (OrderConditional_Builder*) setClordid:(NSString*) value;
- (OrderConditional_Builder*) clearClordid;

- (BOOL) hasStatus;
- (int32_t) status;
- (OrderConditional_Builder*) setStatus:(int32_t) value;
- (OrderConditional_Builder*) clearStatus;

- (BOOL) hasOrdstatus;
- (int32_t) ordstatus;
- (OrderConditional_Builder*) setOrdstatus:(int32_t) value;
- (OrderConditional_Builder*) clearOrdstatus;

- (BOOL) hasMatchqty;
- (int32_t) matchqty;
- (OrderConditional_Builder*) setMatchqty:(int32_t) value;
- (OrderConditional_Builder*) clearMatchqty;

- (BOOL) hasOwnerid;
- (NSString*) ownerid;
- (OrderConditional_Builder*) setOwnerid:(NSString*) value;
- (OrderConditional_Builder*) clearOwnerid;

- (BOOL) hasTerminateAct;
- (NSString*) terminateAct;
- (OrderConditional_Builder*) setTerminateAct:(NSString*) value;
- (OrderConditional_Builder*) clearTerminateAct;

- (BOOL) hasCreatedDate;
- (NSString*) createdDate;
- (OrderConditional_Builder*) setCreatedDate:(NSString*) value;
- (OrderConditional_Builder*) clearCreatedDate;

- (BOOL) hasLastUpdated;
- (NSString*) lastUpdated;
- (OrderConditional_Builder*) setLastUpdated:(NSString*) value;
- (OrderConditional_Builder*) clearLastUpdated;

- (BOOL) hasOrders;
- (TxOrder*) orders;
- (OrderConditional_Builder*) setOrders:(TxOrder*) value;
- (OrderConditional_Builder*) setOrdersBuilder:(TxOrder_Builder*) builderForValue;
- (OrderConditional_Builder*) mergeOrders:(TxOrder*) value;
- (OrderConditional_Builder*) clearOrders;

- (BOOL) hasPriceBound;
- (int32_t) priceBound;
- (OrderConditional_Builder*) setPriceBound:(int32_t) value;
- (OrderConditional_Builder*) clearPriceBound;

- (BOOL) hasTimeBound;
- (NSString*) timeBound;
- (OrderConditional_Builder*) setTimeBound:(NSString*) value;
- (OrderConditional_Builder*) clearTimeBound;

- (BOOL) hasGtdDate;
- (NSString*) gtdDate;
- (OrderConditional_Builder*) setGtdDate:(NSString*) value;
- (OrderConditional_Builder*) clearGtdDate;
@end

@interface TradingTarget : PBGeneratedMessage {
@private
  BOOL hasOrderValue_:1;
  BOOL hasOrderPrice_:1;
  BOOL hasOrderShare_:1;
  BOOL hasInitialShare_:1;
  BOOL hasInitialPrice_:1;
  BOOL hasNextValue_:1;
  BOOL hasNextPrice_:1;
  BOOL hasInitialValue_:1;
  BOOL hasDoneShare_:1;
  BOOL hasDonePrice_:1;
  BOOL hasDoneValue_:1;
  BOOL hasNextShare_:1;
  BOOL hasIsAvgPrice_:1;
  BOOL hasTtid_:1;
  BOOL hasStatus_:1;
  BOOL hasSide_:1;
  BOOL hasClientname_:1;
  BOOL hasClientcode_:1;
  BOOL hasSecurityCode_:1;
  Float64 orderValue;
  Float64 orderPrice;
  Float64 orderShare;
  Float64 initialShare;
  Float64 initialPrice;
  Float64 nextValue;
  Float64 nextPrice;
  Float64 initialValue;
  Float64 doneShare;
  Float64 donePrice;
  Float64 doneValue;
  Float64 nextShare;
  int32_t isAvgPrice;
  int32_t ttid;
  int32_t status;
  int32_t side;
  NSString* clientname;
  NSString* clientcode;
  NSString* securityCode;
}
- (BOOL) hasSecurityCode;
- (BOOL) hasClientcode;
- (BOOL) hasClientname;
- (BOOL) hasSide;
- (BOOL) hasInitialShare;
- (BOOL) hasInitialPrice;
- (BOOL) hasStatus;
- (BOOL) hasTtid;
- (BOOL) hasInitialValue;
- (BOOL) hasDoneShare;
- (BOOL) hasDonePrice;
- (BOOL) hasDoneValue;
- (BOOL) hasNextShare;
- (BOOL) hasNextPrice;
- (BOOL) hasNextValue;
- (BOOL) hasOrderShare;
- (BOOL) hasOrderPrice;
- (BOOL) hasOrderValue;
- (BOOL) hasIsAvgPrice;
@property (readonly, strong) NSString* securityCode;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* clientname;
@property (readonly) int32_t side;
@property (readonly) Float64 initialShare;
@property (readonly) Float64 initialPrice;
@property (readonly) int32_t status;
@property (readonly) int32_t ttid;
@property (readonly) Float64 initialValue;
@property (readonly) Float64 doneShare;
@property (readonly) Float64 donePrice;
@property (readonly) Float64 doneValue;
@property (readonly) Float64 nextShare;
@property (readonly) Float64 nextPrice;
@property (readonly) Float64 nextValue;
@property (readonly) Float64 orderShare;
@property (readonly) Float64 orderPrice;
@property (readonly) Float64 orderValue;
@property (readonly) int32_t isAvgPrice;

+ (TradingTarget*) defaultInstance;
- (TradingTarget*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TradingTarget_Builder*) builder;
+ (TradingTarget_Builder*) builder;
+ (TradingTarget_Builder*) builderWithPrototype:(TradingTarget*) prototype;
- (TradingTarget_Builder*) toBuilder;

+ (TradingTarget*) parseFromData:(NSData*) data;
+ (TradingTarget*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradingTarget*) parseFromInputStream:(NSInputStream*) input;
+ (TradingTarget*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradingTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TradingTarget*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TradingTarget_Builder : PBGeneratedMessage_Builder {
@private
  TradingTarget* result;
}

- (TradingTarget*) defaultInstance;

- (TradingTarget_Builder*) clear;
- (TradingTarget_Builder*) clone;

- (TradingTarget*) build;
- (TradingTarget*) buildPartial;

- (TradingTarget_Builder*) mergeFrom:(TradingTarget*) other;
- (TradingTarget_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TradingTarget_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSecurityCode;
- (NSString*) securityCode;
- (TradingTarget_Builder*) setSecurityCode:(NSString*) value;
- (TradingTarget_Builder*) clearSecurityCode;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (TradingTarget_Builder*) setClientcode:(NSString*) value;
- (TradingTarget_Builder*) clearClientcode;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (TradingTarget_Builder*) setClientname:(NSString*) value;
- (TradingTarget_Builder*) clearClientname;

- (BOOL) hasSide;
- (int32_t) side;
- (TradingTarget_Builder*) setSide:(int32_t) value;
- (TradingTarget_Builder*) clearSide;

- (BOOL) hasInitialShare;
- (Float64) initialShare;
- (TradingTarget_Builder*) setInitialShare:(Float64) value;
- (TradingTarget_Builder*) clearInitialShare;

- (BOOL) hasInitialPrice;
- (Float64) initialPrice;
- (TradingTarget_Builder*) setInitialPrice:(Float64) value;
- (TradingTarget_Builder*) clearInitialPrice;

- (BOOL) hasStatus;
- (int32_t) status;
- (TradingTarget_Builder*) setStatus:(int32_t) value;
- (TradingTarget_Builder*) clearStatus;

- (BOOL) hasTtid;
- (int32_t) ttid;
- (TradingTarget_Builder*) setTtid:(int32_t) value;
- (TradingTarget_Builder*) clearTtid;

- (BOOL) hasInitialValue;
- (Float64) initialValue;
- (TradingTarget_Builder*) setInitialValue:(Float64) value;
- (TradingTarget_Builder*) clearInitialValue;

- (BOOL) hasDoneShare;
- (Float64) doneShare;
- (TradingTarget_Builder*) setDoneShare:(Float64) value;
- (TradingTarget_Builder*) clearDoneShare;

- (BOOL) hasDonePrice;
- (Float64) donePrice;
- (TradingTarget_Builder*) setDonePrice:(Float64) value;
- (TradingTarget_Builder*) clearDonePrice;

- (BOOL) hasDoneValue;
- (Float64) doneValue;
- (TradingTarget_Builder*) setDoneValue:(Float64) value;
- (TradingTarget_Builder*) clearDoneValue;

- (BOOL) hasNextShare;
- (Float64) nextShare;
- (TradingTarget_Builder*) setNextShare:(Float64) value;
- (TradingTarget_Builder*) clearNextShare;

- (BOOL) hasNextPrice;
- (Float64) nextPrice;
- (TradingTarget_Builder*) setNextPrice:(Float64) value;
- (TradingTarget_Builder*) clearNextPrice;

- (BOOL) hasNextValue;
- (Float64) nextValue;
- (TradingTarget_Builder*) setNextValue:(Float64) value;
- (TradingTarget_Builder*) clearNextValue;

- (BOOL) hasOrderShare;
- (Float64) orderShare;
- (TradingTarget_Builder*) setOrderShare:(Float64) value;
- (TradingTarget_Builder*) clearOrderShare;

- (BOOL) hasOrderPrice;
- (Float64) orderPrice;
- (TradingTarget_Builder*) setOrderPrice:(Float64) value;
- (TradingTarget_Builder*) clearOrderPrice;

- (BOOL) hasOrderValue;
- (Float64) orderValue;
- (TradingTarget_Builder*) setOrderValue:(Float64) value;
- (TradingTarget_Builder*) clearOrderValue;

- (BOOL) hasIsAvgPrice;
- (int32_t) isAvgPrice;
- (TradingTarget_Builder*) setIsAvgPrice:(int32_t) value;
- (TradingTarget_Builder*) clearIsAvgPrice;
@end

@interface OrderLifeCycle : PBGeneratedMessage {
@private
  BOOL hasTime_:1;
  BOOL hasEvent_:1;
  BOOL hasOrders_:1;
  NSString* time;
  NSString* event;
  TxOrder* orders;
}
- (BOOL) hasTime;
- (BOOL) hasEvent;
- (BOOL) hasOrders;
@property (readonly, strong) NSString* time;
@property (readonly, strong) NSString* event;
@property (readonly, strong) TxOrder* orders;

+ (OrderLifeCycle*) defaultInstance;
- (OrderLifeCycle*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OrderLifeCycle_Builder*) builder;
+ (OrderLifeCycle_Builder*) builder;
+ (OrderLifeCycle_Builder*) builderWithPrototype:(OrderLifeCycle*) prototype;
- (OrderLifeCycle_Builder*) toBuilder;

+ (OrderLifeCycle*) parseFromData:(NSData*) data;
+ (OrderLifeCycle*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderLifeCycle*) parseFromInputStream:(NSInputStream*) input;
+ (OrderLifeCycle*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OrderLifeCycle*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OrderLifeCycle*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OrderLifeCycle_Builder : PBGeneratedMessage_Builder {
@private
  OrderLifeCycle* result;
}

- (OrderLifeCycle*) defaultInstance;

- (OrderLifeCycle_Builder*) clear;
- (OrderLifeCycle_Builder*) clone;

- (OrderLifeCycle*) build;
- (OrderLifeCycle*) buildPartial;

- (OrderLifeCycle_Builder*) mergeFrom:(OrderLifeCycle*) other;
- (OrderLifeCycle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OrderLifeCycle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTime;
- (NSString*) time;
- (OrderLifeCycle_Builder*) setTime:(NSString*) value;
- (OrderLifeCycle_Builder*) clearTime;

- (BOOL) hasEvent;
- (NSString*) event;
- (OrderLifeCycle_Builder*) setEvent:(NSString*) value;
- (OrderLifeCycle_Builder*) clearEvent;

- (BOOL) hasOrders;
- (TxOrder*) orders;
- (OrderLifeCycle_Builder*) setOrders:(TxOrder*) value;
- (OrderLifeCycle_Builder*) setOrdersBuilder:(TxOrder_Builder*) builderForValue;
- (OrderLifeCycle_Builder*) mergeOrders:(TxOrder*) value;
- (OrderLifeCycle_Builder*) clearOrders;
@end

@interface TxTrade : PBGeneratedMessage {
@private
  BOOL hasSequenceNo_:1;
  BOOL hasPrice_:1;
  BOOL hasCumQty_:1;
  BOOL hasSide_:1;
  BOOL hasTradeId_:1;
  BOOL hasJatsOrderId_:1;
  BOOL hasOrderId_:1;
  BOOL hasTransactTime_:1;
  BOOL hasClordId_:1;
  BOOL hasContraTrader_:1;
  BOOL hasContraBroker_:1;
  BOOL hasClientId_:1;
  BOOL hasClientName_:1;
  BOOL hasStockcode_:1;
  BOOL hasSymbolSfx_:1;
  BOOL hasOwnerId_:1;
  Float64 sequenceNo;
  int32_t price;
  int32_t cumQty;
  int32_t side;
  NSString* tradeId;
  NSString* jatsOrderId;
  NSString* orderId;
  NSString* transactTime;
  NSString* clordId;
  NSString* contraTrader;
  NSString* contraBroker;
  NSString* clientId;
  NSString* clientName;
  NSString* stockcode;
  NSString* symbolSfx;
  NSString* ownerId;
}
- (BOOL) hasTradeId;
- (BOOL) hasJatsOrderId;
- (BOOL) hasOrderId;
- (BOOL) hasTransactTime;
- (BOOL) hasClordId;
- (BOOL) hasContraTrader;
- (BOOL) hasContraBroker;
- (BOOL) hasPrice;
- (BOOL) hasCumQty;
- (BOOL) hasSide;
- (BOOL) hasClientId;
- (BOOL) hasClientName;
- (BOOL) hasStockcode;
- (BOOL) hasSymbolSfx;
- (BOOL) hasOwnerId;
- (BOOL) hasSequenceNo;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* jatsOrderId;
@property (readonly, strong) NSString* orderId;
@property (readonly, strong) NSString* transactTime;
@property (readonly, strong) NSString* clordId;
@property (readonly, strong) NSString* contraTrader;
@property (readonly, strong) NSString* contraBroker;
@property (readonly) int32_t price;
@property (readonly) int32_t cumQty;
@property (readonly) int32_t side;
@property (readonly, strong) NSString* clientId;
@property (readonly, strong) NSString* clientName;
@property (readonly, strong) NSString* stockcode;
@property (readonly, strong) NSString* symbolSfx;
@property (readonly, strong) NSString* ownerId;
@property (readonly) Float64 sequenceNo;

+ (TxTrade*) defaultInstance;
- (TxTrade*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TxTrade_Builder*) builder;
+ (TxTrade_Builder*) builder;
+ (TxTrade_Builder*) builderWithPrototype:(TxTrade*) prototype;
- (TxTrade_Builder*) toBuilder;

+ (TxTrade*) parseFromData:(NSData*) data;
+ (TxTrade*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TxTrade*) parseFromInputStream:(NSInputStream*) input;
+ (TxTrade*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TxTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TxTrade*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TxTrade_Builder : PBGeneratedMessage_Builder {
@private
  TxTrade* result;
}

- (TxTrade*) defaultInstance;

- (TxTrade_Builder*) clear;
- (TxTrade_Builder*) clone;

- (TxTrade*) build;
- (TxTrade*) buildPartial;

- (TxTrade_Builder*) mergeFrom:(TxTrade*) other;
- (TxTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TxTrade_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (TxTrade_Builder*) setTradeId:(NSString*) value;
- (TxTrade_Builder*) clearTradeId;

- (BOOL) hasJatsOrderId;
- (NSString*) jatsOrderId;
- (TxTrade_Builder*) setJatsOrderId:(NSString*) value;
- (TxTrade_Builder*) clearJatsOrderId;

- (BOOL) hasOrderId;
- (NSString*) orderId;
- (TxTrade_Builder*) setOrderId:(NSString*) value;
- (TxTrade_Builder*) clearOrderId;

- (BOOL) hasTransactTime;
- (NSString*) transactTime;
- (TxTrade_Builder*) setTransactTime:(NSString*) value;
- (TxTrade_Builder*) clearTransactTime;

- (BOOL) hasClordId;
- (NSString*) clordId;
- (TxTrade_Builder*) setClordId:(NSString*) value;
- (TxTrade_Builder*) clearClordId;

- (BOOL) hasContraTrader;
- (NSString*) contraTrader;
- (TxTrade_Builder*) setContraTrader:(NSString*) value;
- (TxTrade_Builder*) clearContraTrader;

- (BOOL) hasContraBroker;
- (NSString*) contraBroker;
- (TxTrade_Builder*) setContraBroker:(NSString*) value;
- (TxTrade_Builder*) clearContraBroker;

- (BOOL) hasPrice;
- (int32_t) price;
- (TxTrade_Builder*) setPrice:(int32_t) value;
- (TxTrade_Builder*) clearPrice;

- (BOOL) hasCumQty;
- (int32_t) cumQty;
- (TxTrade_Builder*) setCumQty:(int32_t) value;
- (TxTrade_Builder*) clearCumQty;

- (BOOL) hasSide;
- (int32_t) side;
- (TxTrade_Builder*) setSide:(int32_t) value;
- (TxTrade_Builder*) clearSide;

- (BOOL) hasClientId;
- (NSString*) clientId;
- (TxTrade_Builder*) setClientId:(NSString*) value;
- (TxTrade_Builder*) clearClientId;

- (BOOL) hasClientName;
- (NSString*) clientName;
- (TxTrade_Builder*) setClientName:(NSString*) value;
- (TxTrade_Builder*) clearClientName;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (TxTrade_Builder*) setStockcode:(NSString*) value;
- (TxTrade_Builder*) clearStockcode;

- (BOOL) hasSymbolSfx;
- (NSString*) symbolSfx;
- (TxTrade_Builder*) setSymbolSfx:(NSString*) value;
- (TxTrade_Builder*) clearSymbolSfx;

- (BOOL) hasOwnerId;
- (NSString*) ownerId;
- (TxTrade_Builder*) setOwnerId:(NSString*) value;
- (TxTrade_Builder*) clearOwnerId;

- (BOOL) hasSequenceNo;
- (Float64) sequenceNo;
- (TxTrade_Builder*) setSequenceNo:(Float64) value;
- (TxTrade_Builder*) clearSequenceNo;
@end

@interface TxOrder : PBGeneratedMessage {
@private
  BOOL hasTotalValue_:1;
  BOOL hasTradeQty_:1;
  BOOL hasWeightAvg_:1;
  BOOL hasOrderQty_:1;
  BOOL hasLeavesQty_:1;
  BOOL hasCumQty_:1;
  BOOL hasTradePrice_:1;
  BOOL hasBroadcastType_:1;
  BOOL hasOrderBufferType_:1;
  BOOL hasSide_:1;
  BOOL hasPrice_:1;
  BOOL hasBulkid_:1;
  BOOL hasSequenceNo_:1;
  BOOL hasBatchId_:1;
  BOOL hasGtcOrderType_:1;
  BOOL hasOrderParentId_:1;
  BOOL hasCparty_:1;
  BOOL hasIsRenew_:1;
  BOOL hasHandInst_:1;
  BOOL hasBatchTime_:1;
  BOOL hasTradeTime_:1;
  BOOL hasUpdatedBy_:1;
  BOOL hasFutsetdate_:1;
  BOOL hasOrigclorid_:1;
  BOOL hasSenderid_:1;
  BOOL hasOfficername_:1;
  BOOL hasComplianceId_:1;
  BOOL hasJatsOrderId_:1;
  BOOL hasClientCode_:1;
  BOOL hasClientName_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasAccount_:1;
  BOOL hasBoard_:1;
  BOOL hasSecurityCode_:1;
  BOOL hasExpiredDate_:1;
  BOOL hasCreatedTime_:1;
  BOOL hasUpdatedTime_:1;
  BOOL hasSource_:1;
  BOOL hasOwnerId_:1;
  BOOL hasOrderType_:1;
  BOOL hasGtdDate_:1;
  BOOL hasDescription_:1;
  BOOL hasOrderId_:1;
  BOOL hasReasonText_:1;
  BOOL hasClientId_:1;
  BOOL hasTradeId_:1;
  BOOL hasCounterTrader_:1;
  BOOL hasCounterBroker_:1;
  Float64 totalValue;
  Float64 tradeQty;
  Float64 weightAvg;
  Float64 orderQty;
  Float64 leavesQty;
  Float64 cumQty;
  int32_t tradePrice;
  int32_t broadcastType;
  int32_t orderBufferType;
  int32_t side;
  int32_t price;
  int32_t bulkid;
  int32_t sequenceNo;
  NSString* batchId;
  NSString* gtcOrderType;
  NSString* orderParentId;
  NSString* cparty;
  NSString* isRenew;
  NSString* handInst;
  NSString* batchTime;
  NSString* tradeTime;
  NSString* updatedBy;
  NSString* futsetdate;
  NSString* origclorid;
  NSString* senderid;
  NSString* officername;
  NSString* complianceId;
  NSString* jatsOrderId;
  NSString* clientCode;
  NSString* clientName;
  NSString* orderStatus;
  NSString* account;
  NSString* board;
  NSString* securityCode;
  NSString* expiredDate;
  NSString* createdTime;
  NSString* updatedTime;
  NSString* source;
  NSString* ownerId;
  NSString* orderType;
  NSString* gtdDate;
  NSString* description;
  NSString* orderId;
  NSString* reasonText;
  NSString* clientId;
  NSString* tradeId;
  NSString* counterTrader;
  NSString* counterBroker;
}
- (BOOL) hasJatsOrderId;
- (BOOL) hasClientCode;
- (BOOL) hasClientName;
- (BOOL) hasOrderStatus;
- (BOOL) hasAccount;
- (BOOL) hasBoard;
- (BOOL) hasSide;
- (BOOL) hasSecurityCode;
- (BOOL) hasOrderQty;
- (BOOL) hasPrice;
- (BOOL) hasExpiredDate;
- (BOOL) hasLeavesQty;
- (BOOL) hasCumQty;
- (BOOL) hasCreatedTime;
- (BOOL) hasUpdatedTime;
- (BOOL) hasSource;
- (BOOL) hasOwnerId;
- (BOOL) hasOrderType;
- (BOOL) hasGtdDate;
- (BOOL) hasDescription;
- (BOOL) hasOrderBufferType;
- (BOOL) hasSequenceNo;
- (BOOL) hasOrderId;
- (BOOL) hasReasonText;
- (BOOL) hasClientId;
- (BOOL) hasTradeId;
- (BOOL) hasCounterTrader;
- (BOOL) hasCounterBroker;
- (BOOL) hasHandInst;
- (BOOL) hasIsRenew;
- (BOOL) hasCparty;
- (BOOL) hasOrderParentId;
- (BOOL) hasGtcOrderType;
- (BOOL) hasBatchId;
- (BOOL) hasBatchTime;
- (BOOL) hasTradeQty;
- (BOOL) hasTradePrice;
- (BOOL) hasTradeTime;
- (BOOL) hasUpdatedBy;
- (BOOL) hasFutsetdate;
- (BOOL) hasBulkid;
- (BOOL) hasWeightAvg;
- (BOOL) hasOrigclorid;
- (BOOL) hasBroadcastType;
- (BOOL) hasSenderid;
- (BOOL) hasOfficername;
- (BOOL) hasTotalValue;
- (BOOL) hasComplianceId;
@property (readonly, strong) NSString* jatsOrderId;
@property (readonly, strong) NSString* clientCode;
@property (readonly, strong) NSString* clientName;
@property (readonly, strong) NSString* orderStatus;
@property (readonly, strong) NSString* account;
@property (readonly, strong) NSString* board;
@property (readonly) int32_t side;
@property (readonly, strong) NSString* securityCode;
@property (readonly) Float64 orderQty;
@property (readonly) int32_t price;
@property (readonly, strong) NSString* expiredDate;
@property (readonly) Float64 leavesQty;
@property (readonly) Float64 cumQty;
@property (readonly, strong) NSString* createdTime;
@property (readonly, strong) NSString* updatedTime;
@property (readonly, strong) NSString* source;
@property (readonly, strong) NSString* ownerId;
@property (readonly, strong) NSString* orderType;
@property (readonly, strong) NSString* gtdDate;
@property (readonly, strong) NSString* description;
@property (readonly) int32_t orderBufferType;
@property (readonly) int32_t sequenceNo;
@property (readonly, strong) NSString* orderId;
@property (readonly, strong) NSString* reasonText;
@property (readonly, strong) NSString* clientId;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* counterTrader;
@property (readonly, strong) NSString* counterBroker;
@property (readonly, strong) NSString* handInst;
@property (readonly, strong) NSString* isRenew;
@property (readonly, strong) NSString* cparty;
@property (readonly, strong) NSString* orderParentId;
@property (readonly, strong) NSString* gtcOrderType;
@property (readonly, strong) NSString* batchId;
@property (readonly, strong) NSString* batchTime;
@property (readonly) Float64 tradeQty;
@property (readonly) int32_t tradePrice;
@property (readonly, strong) NSString* tradeTime;
@property (readonly, strong) NSString* updatedBy;
@property (readonly, strong) NSString* futsetdate;
@property (readonly) int32_t bulkid;
@property (readonly) Float64 weightAvg;
@property (readonly, strong) NSString* origclorid;
@property (readonly) int32_t broadcastType;
@property (readonly, strong) NSString* senderid;
@property (readonly, strong) NSString* officername;
@property (readonly) Float64 totalValue;
@property (readonly, strong) NSString* complianceId;

+ (TxOrder*) defaultInstance;
- (TxOrder*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TxOrder_Builder*) builder;
+ (TxOrder_Builder*) builder;
+ (TxOrder_Builder*) builderWithPrototype:(TxOrder*) prototype;
- (TxOrder_Builder*) toBuilder;

+ (TxOrder*) parseFromData:(NSData*) data;
+ (TxOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TxOrder*) parseFromInputStream:(NSInputStream*) input;
+ (TxOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TxOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TxOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TxOrder_Builder : PBGeneratedMessage_Builder {
@private
  TxOrder* result;
}

- (TxOrder*) defaultInstance;

- (TxOrder_Builder*) clear;
- (TxOrder_Builder*) clone;

- (TxOrder*) build;
- (TxOrder*) buildPartial;

- (TxOrder_Builder*) mergeFrom:(TxOrder*) other;
- (TxOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TxOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasJatsOrderId;
- (NSString*) jatsOrderId;
- (TxOrder_Builder*) setJatsOrderId:(NSString*) value;
- (TxOrder_Builder*) clearJatsOrderId;

- (BOOL) hasClientCode;
- (NSString*) clientCode;
- (TxOrder_Builder*) setClientCode:(NSString*) value;
- (TxOrder_Builder*) clearClientCode;

- (BOOL) hasClientName;
- (NSString*) clientName;
- (TxOrder_Builder*) setClientName:(NSString*) value;
- (TxOrder_Builder*) clearClientName;

- (BOOL) hasOrderStatus;
- (NSString*) orderStatus;
- (TxOrder_Builder*) setOrderStatus:(NSString*) value;
- (TxOrder_Builder*) clearOrderStatus;

- (BOOL) hasAccount;
- (NSString*) account;
- (TxOrder_Builder*) setAccount:(NSString*) value;
- (TxOrder_Builder*) clearAccount;

- (BOOL) hasBoard;
- (NSString*) board;
- (TxOrder_Builder*) setBoard:(NSString*) value;
- (TxOrder_Builder*) clearBoard;

- (BOOL) hasSide;
- (int32_t) side;
- (TxOrder_Builder*) setSide:(int32_t) value;
- (TxOrder_Builder*) clearSide;

- (BOOL) hasSecurityCode;
- (NSString*) securityCode;
- (TxOrder_Builder*) setSecurityCode:(NSString*) value;
- (TxOrder_Builder*) clearSecurityCode;

- (BOOL) hasOrderQty;
- (Float64) orderQty;
- (TxOrder_Builder*) setOrderQty:(Float64) value;
- (TxOrder_Builder*) clearOrderQty;

- (BOOL) hasPrice;
- (int32_t) price;
- (TxOrder_Builder*) setPrice:(int32_t) value;
- (TxOrder_Builder*) clearPrice;

- (BOOL) hasExpiredDate;
- (NSString*) expiredDate;
- (TxOrder_Builder*) setExpiredDate:(NSString*) value;
- (TxOrder_Builder*) clearExpiredDate;

- (BOOL) hasLeavesQty;
- (Float64) leavesQty;
- (TxOrder_Builder*) setLeavesQty:(Float64) value;
- (TxOrder_Builder*) clearLeavesQty;

- (BOOL) hasCumQty;
- (Float64) cumQty;
- (TxOrder_Builder*) setCumQty:(Float64) value;
- (TxOrder_Builder*) clearCumQty;

- (BOOL) hasCreatedTime;
- (NSString*) createdTime;
- (TxOrder_Builder*) setCreatedTime:(NSString*) value;
- (TxOrder_Builder*) clearCreatedTime;

- (BOOL) hasUpdatedTime;
- (NSString*) updatedTime;
- (TxOrder_Builder*) setUpdatedTime:(NSString*) value;
- (TxOrder_Builder*) clearUpdatedTime;

- (BOOL) hasSource;
- (NSString*) source;
- (TxOrder_Builder*) setSource:(NSString*) value;
- (TxOrder_Builder*) clearSource;

- (BOOL) hasOwnerId;
- (NSString*) ownerId;
- (TxOrder_Builder*) setOwnerId:(NSString*) value;
- (TxOrder_Builder*) clearOwnerId;

- (BOOL) hasOrderType;
- (NSString*) orderType;
- (TxOrder_Builder*) setOrderType:(NSString*) value;
- (TxOrder_Builder*) clearOrderType;

- (BOOL) hasGtdDate;
- (NSString*) gtdDate;
- (TxOrder_Builder*) setGtdDate:(NSString*) value;
- (TxOrder_Builder*) clearGtdDate;

- (BOOL) hasDescription;
- (NSString*) description;
- (TxOrder_Builder*) setDescription:(NSString*) value;
- (TxOrder_Builder*) clearDescription;

- (BOOL) hasOrderBufferType;
- (int32_t) orderBufferType;
- (TxOrder_Builder*) setOrderBufferType:(int32_t) value;
- (TxOrder_Builder*) clearOrderBufferType;

- (BOOL) hasSequenceNo;
- (int32_t) sequenceNo;
- (TxOrder_Builder*) setSequenceNo:(int32_t) value;
- (TxOrder_Builder*) clearSequenceNo;

- (BOOL) hasOrderId;
- (NSString*) orderId;
- (TxOrder_Builder*) setOrderId:(NSString*) value;
- (TxOrder_Builder*) clearOrderId;

- (BOOL) hasReasonText;
- (NSString*) reasonText;
- (TxOrder_Builder*) setReasonText:(NSString*) value;
- (TxOrder_Builder*) clearReasonText;

- (BOOL) hasClientId;
- (NSString*) clientId;
- (TxOrder_Builder*) setClientId:(NSString*) value;
- (TxOrder_Builder*) clearClientId;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (TxOrder_Builder*) setTradeId:(NSString*) value;
- (TxOrder_Builder*) clearTradeId;

- (BOOL) hasCounterTrader;
- (NSString*) counterTrader;
- (TxOrder_Builder*) setCounterTrader:(NSString*) value;
- (TxOrder_Builder*) clearCounterTrader;

- (BOOL) hasCounterBroker;
- (NSString*) counterBroker;
- (TxOrder_Builder*) setCounterBroker:(NSString*) value;
- (TxOrder_Builder*) clearCounterBroker;

- (BOOL) hasHandInst;
- (NSString*) handInst;
- (TxOrder_Builder*) setHandInst:(NSString*) value;
- (TxOrder_Builder*) clearHandInst;

- (BOOL) hasIsRenew;
- (NSString*) isRenew;
- (TxOrder_Builder*) setIsRenew:(NSString*) value;
- (TxOrder_Builder*) clearIsRenew;

- (BOOL) hasCparty;
- (NSString*) cparty;
- (TxOrder_Builder*) setCparty:(NSString*) value;
- (TxOrder_Builder*) clearCparty;

- (BOOL) hasOrderParentId;
- (NSString*) orderParentId;
- (TxOrder_Builder*) setOrderParentId:(NSString*) value;
- (TxOrder_Builder*) clearOrderParentId;

- (BOOL) hasGtcOrderType;
- (NSString*) gtcOrderType;
- (TxOrder_Builder*) setGtcOrderType:(NSString*) value;
- (TxOrder_Builder*) clearGtcOrderType;

- (BOOL) hasBatchId;
- (NSString*) batchId;
- (TxOrder_Builder*) setBatchId:(NSString*) value;
- (TxOrder_Builder*) clearBatchId;

- (BOOL) hasBatchTime;
- (NSString*) batchTime;
- (TxOrder_Builder*) setBatchTime:(NSString*) value;
- (TxOrder_Builder*) clearBatchTime;

- (BOOL) hasTradeQty;
- (Float64) tradeQty;
- (TxOrder_Builder*) setTradeQty:(Float64) value;
- (TxOrder_Builder*) clearTradeQty;

- (BOOL) hasTradePrice;
- (int32_t) tradePrice;
- (TxOrder_Builder*) setTradePrice:(int32_t) value;
- (TxOrder_Builder*) clearTradePrice;

- (BOOL) hasTradeTime;
- (NSString*) tradeTime;
- (TxOrder_Builder*) setTradeTime:(NSString*) value;
- (TxOrder_Builder*) clearTradeTime;

- (BOOL) hasUpdatedBy;
- (NSString*) updatedBy;
- (TxOrder_Builder*) setUpdatedBy:(NSString*) value;
- (TxOrder_Builder*) clearUpdatedBy;

- (BOOL) hasFutsetdate;
- (NSString*) futsetdate;
- (TxOrder_Builder*) setFutsetdate:(NSString*) value;
- (TxOrder_Builder*) clearFutsetdate;

- (BOOL) hasBulkid;
- (int32_t) bulkid;
- (TxOrder_Builder*) setBulkid:(int32_t) value;
- (TxOrder_Builder*) clearBulkid;

- (BOOL) hasWeightAvg;
- (Float64) weightAvg;
- (TxOrder_Builder*) setWeightAvg:(Float64) value;
- (TxOrder_Builder*) clearWeightAvg;

- (BOOL) hasOrigclorid;
- (NSString*) origclorid;
- (TxOrder_Builder*) setOrigclorid:(NSString*) value;
- (TxOrder_Builder*) clearOrigclorid;

- (BOOL) hasBroadcastType;
- (int32_t) broadcastType;
- (TxOrder_Builder*) setBroadcastType:(int32_t) value;
- (TxOrder_Builder*) clearBroadcastType;

- (BOOL) hasSenderid;
- (NSString*) senderid;
- (TxOrder_Builder*) setSenderid:(NSString*) value;
- (TxOrder_Builder*) clearSenderid;

- (BOOL) hasOfficername;
- (NSString*) officername;
- (TxOrder_Builder*) setOfficername:(NSString*) value;
- (TxOrder_Builder*) clearOfficername;

- (BOOL) hasTotalValue;
- (Float64) totalValue;
- (TxOrder_Builder*) setTotalValue:(Float64) value;
- (TxOrder_Builder*) clearTotalValue;

- (BOOL) hasComplianceId;
- (NSString*) complianceId;
- (TxOrder_Builder*) setComplianceId:(NSString*) value;
- (TxOrder_Builder*) clearComplianceId;
@end

@interface TradeDetail : PBGeneratedMessage {
@private
  BOOL hasPrice_:1;
  BOOL hasQty_:1;
  BOOL hasTime_:1;
  BOOL hasTradeNo_:1;
  BOOL hasJatsId_:1;
  int32_t price;
  int32_t qty;
  NSString* time;
  NSString* tradeNo;
  NSString* jatsId;
}
- (BOOL) hasTime;
- (BOOL) hasTradeNo;
- (BOOL) hasJatsId;
- (BOOL) hasPrice;
- (BOOL) hasQty;
@property (readonly, strong) NSString* time;
@property (readonly, strong) NSString* tradeNo;
@property (readonly, strong) NSString* jatsId;
@property (readonly) int32_t price;
@property (readonly) int32_t qty;

+ (TradeDetail*) defaultInstance;
- (TradeDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TradeDetail_Builder*) builder;
+ (TradeDetail_Builder*) builder;
+ (TradeDetail_Builder*) builderWithPrototype:(TradeDetail*) prototype;
- (TradeDetail_Builder*) toBuilder;

+ (TradeDetail*) parseFromData:(NSData*) data;
+ (TradeDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradeDetail*) parseFromInputStream:(NSInputStream*) input;
+ (TradeDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TradeDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TradeDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TradeDetail_Builder : PBGeneratedMessage_Builder {
@private
  TradeDetail* result;
}

- (TradeDetail*) defaultInstance;

- (TradeDetail_Builder*) clear;
- (TradeDetail_Builder*) clone;

- (TradeDetail*) build;
- (TradeDetail*) buildPartial;

- (TradeDetail_Builder*) mergeFrom:(TradeDetail*) other;
- (TradeDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TradeDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTime;
- (NSString*) time;
- (TradeDetail_Builder*) setTime:(NSString*) value;
- (TradeDetail_Builder*) clearTime;

- (BOOL) hasTradeNo;
- (NSString*) tradeNo;
- (TradeDetail_Builder*) setTradeNo:(NSString*) value;
- (TradeDetail_Builder*) clearTradeNo;

- (BOOL) hasJatsId;
- (NSString*) jatsId;
- (TradeDetail_Builder*) setJatsId:(NSString*) value;
- (TradeDetail_Builder*) clearJatsId;

- (BOOL) hasPrice;
- (int32_t) price;
- (TradeDetail_Builder*) setPrice:(int32_t) value;
- (TradeDetail_Builder*) clearPrice;

- (BOOL) hasQty;
- (int32_t) qty;
- (TradeDetail_Builder*) setQty:(int32_t) value;
- (TradeDetail_Builder*) clearQty;
@end

@interface AccountInfo : PBGeneratedMessage {
@private
  BOOL hasClientcode_:1;
  BOOL hasName_:1;
  BOOL hasAddress_:1;
  BOOL hasCity_:1;
  BOOL hasZipcode_:1;
  BOOL hasProvince_:1;
  BOOL hasPhone_:1;
  BOOL hasFax_:1;
  BOOL hasMobilePhone_:1;
  BOOL hasSid_:1;
  BOOL hasSubRek_:1;
  BOOL hasRdiAccountName_:1;
  BOOL hasRdiAccountNo_:1;
  BOOL hasBankAccount_:1;
  BOOL hasBankAccountNo_:1;
  NSString* clientcode;
  NSString* name;
  NSString* address;
  NSString* city;
  NSString* zipcode;
  NSString* province;
  NSString* phone;
  NSString* fax;
  NSString* mobilePhone;
  NSString* sid;
  NSString* subRek;
  NSString* rdiAccountName;
  NSString* rdiAccountNo;
  NSString* bankAccount;
  NSString* bankAccountNo;
}
- (BOOL) hasClientcode;
- (BOOL) hasName;
- (BOOL) hasAddress;
- (BOOL) hasCity;
- (BOOL) hasZipcode;
- (BOOL) hasProvince;
- (BOOL) hasPhone;
- (BOOL) hasFax;
- (BOOL) hasMobilePhone;
- (BOOL) hasSid;
- (BOOL) hasSubRek;
- (BOOL) hasRdiAccountName;
- (BOOL) hasRdiAccountNo;
- (BOOL) hasBankAccount;
- (BOOL) hasBankAccountNo;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* address;
@property (readonly, strong) NSString* city;
@property (readonly, strong) NSString* zipcode;
@property (readonly, strong) NSString* province;
@property (readonly, strong) NSString* phone;
@property (readonly, strong) NSString* fax;
@property (readonly, strong) NSString* mobilePhone;
@property (readonly, strong) NSString* sid;
@property (readonly, strong) NSString* subRek;
@property (readonly, strong) NSString* rdiAccountName;
@property (readonly, strong) NSString* rdiAccountNo;
@property (readonly, strong) NSString* bankAccount;
@property (readonly, strong) NSString* bankAccountNo;

+ (AccountInfo*) defaultInstance;
- (AccountInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AccountInfo_Builder*) builder;
+ (AccountInfo_Builder*) builder;
+ (AccountInfo_Builder*) builderWithPrototype:(AccountInfo*) prototype;
- (AccountInfo_Builder*) toBuilder;

+ (AccountInfo*) parseFromData:(NSData*) data;
+ (AccountInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AccountInfo*) parseFromInputStream:(NSInputStream*) input;
+ (AccountInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AccountInfo_Builder : PBGeneratedMessage_Builder {
@private
  AccountInfo* result;
}

- (AccountInfo*) defaultInstance;

- (AccountInfo_Builder*) clear;
- (AccountInfo_Builder*) clone;

- (AccountInfo*) build;
- (AccountInfo*) buildPartial;

- (AccountInfo_Builder*) mergeFrom:(AccountInfo*) other;
- (AccountInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AccountInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (AccountInfo_Builder*) setClientcode:(NSString*) value;
- (AccountInfo_Builder*) clearClientcode;

- (BOOL) hasName;
- (NSString*) name;
- (AccountInfo_Builder*) setName:(NSString*) value;
- (AccountInfo_Builder*) clearName;

- (BOOL) hasAddress;
- (NSString*) address;
- (AccountInfo_Builder*) setAddress:(NSString*) value;
- (AccountInfo_Builder*) clearAddress;

- (BOOL) hasCity;
- (NSString*) city;
- (AccountInfo_Builder*) setCity:(NSString*) value;
- (AccountInfo_Builder*) clearCity;

- (BOOL) hasZipcode;
- (NSString*) zipcode;
- (AccountInfo_Builder*) setZipcode:(NSString*) value;
- (AccountInfo_Builder*) clearZipcode;

- (BOOL) hasProvince;
- (NSString*) province;
- (AccountInfo_Builder*) setProvince:(NSString*) value;
- (AccountInfo_Builder*) clearProvince;

- (BOOL) hasPhone;
- (NSString*) phone;
- (AccountInfo_Builder*) setPhone:(NSString*) value;
- (AccountInfo_Builder*) clearPhone;

- (BOOL) hasFax;
- (NSString*) fax;
- (AccountInfo_Builder*) setFax:(NSString*) value;
- (AccountInfo_Builder*) clearFax;

- (BOOL) hasMobilePhone;
- (NSString*) mobilePhone;
- (AccountInfo_Builder*) setMobilePhone:(NSString*) value;
- (AccountInfo_Builder*) clearMobilePhone;

- (BOOL) hasSid;
- (NSString*) sid;
- (AccountInfo_Builder*) setSid:(NSString*) value;
- (AccountInfo_Builder*) clearSid;

- (BOOL) hasSubRek;
- (NSString*) subRek;
- (AccountInfo_Builder*) setSubRek:(NSString*) value;
- (AccountInfo_Builder*) clearSubRek;

- (BOOL) hasRdiAccountName;
- (NSString*) rdiAccountName;
- (AccountInfo_Builder*) setRdiAccountName:(NSString*) value;
- (AccountInfo_Builder*) clearRdiAccountName;

- (BOOL) hasRdiAccountNo;
- (NSString*) rdiAccountNo;
- (AccountInfo_Builder*) setRdiAccountNo:(NSString*) value;
- (AccountInfo_Builder*) clearRdiAccountNo;

- (BOOL) hasBankAccount;
- (NSString*) bankAccount;
- (AccountInfo_Builder*) setBankAccount:(NSString*) value;
- (AccountInfo_Builder*) clearBankAccount;

- (BOOL) hasBankAccountNo;
- (NSString*) bankAccountNo;
- (AccountInfo_Builder*) setBankAccountNo:(NSString*) value;
- (AccountInfo_Builder*) clearBankAccountNo;
@end

@interface BuyingPower : PBGeneratedMessage {
@private
  BOOL hasOrderPower_:1;
  BOOL hasSellTradeValue_:1;
  BOOL hasBuyTradeValue_:1;
  BOOL hasModifiedLoanRatio_:1;
  BOOL hasModifiedMarketValue_:1;
  BOOL hasMarketValue_:1;
  BOOL hasLoanRatio_:1;
  BOOL hasTradingLimit_:1;
  BOOL hasLoanBalance_:1;
  BOOL hasOutstandingBov_:1;
  BOOL hasBuyingPower_:1;
  BOOL hasClientTypeCode_:1;
  BOOL hasAutomaticShortsell_:1;
  BOOL hasClientRating_:1;
  BOOL hasRiskControl_:1;
  BOOL hasPrivilleges_:1;
  BOOL hasUserType_:1;
  Float64 orderPower;
  Float64 sellTradeValue;
  Float64 buyTradeValue;
  Float64 modifiedLoanRatio;
  Float64 modifiedMarketValue;
  Float64 marketValue;
  Float64 loanRatio;
  Float64 tradingLimit;
  Float64 loanBalance;
  Float64 outstandingBov;
  Float64 buyingPower;
  int32_t clientTypeCode;
  int32_t automaticShortsell;
  NSString* clientRating;
  NSString* riskControl;
  NSString* privilleges;
  NSString* userType;
}
- (BOOL) hasBuyingPower;
- (BOOL) hasOutstandingBov;
- (BOOL) hasRiskControl;
- (BOOL) hasLoanBalance;
- (BOOL) hasClientRating;
- (BOOL) hasClientTypeCode;
- (BOOL) hasTradingLimit;
- (BOOL) hasLoanRatio;
- (BOOL) hasMarketValue;
- (BOOL) hasModifiedMarketValue;
- (BOOL) hasModifiedLoanRatio;
- (BOOL) hasBuyTradeValue;
- (BOOL) hasSellTradeValue;
- (BOOL) hasPrivilleges;
- (BOOL) hasOrderPower;
- (BOOL) hasAutomaticShortsell;
- (BOOL) hasUserType;
@property (readonly) Float64 buyingPower;
@property (readonly) Float64 outstandingBov;
@property (readonly, strong) NSString* riskControl;
@property (readonly) Float64 loanBalance;
@property (readonly, strong) NSString* clientRating;
@property (readonly) int32_t clientTypeCode;
@property (readonly) Float64 tradingLimit;
@property (readonly) Float64 loanRatio;
@property (readonly) Float64 marketValue;
@property (readonly) Float64 modifiedMarketValue;
@property (readonly) Float64 modifiedLoanRatio;
@property (readonly) Float64 buyTradeValue;
@property (readonly) Float64 sellTradeValue;
@property (readonly, strong) NSString* privilleges;
@property (readonly) Float64 orderPower;
@property (readonly) int32_t automaticShortsell;
@property (readonly, strong) NSString* userType;

+ (BuyingPower*) defaultInstance;
- (BuyingPower*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BuyingPower_Builder*) builder;
+ (BuyingPower_Builder*) builder;
+ (BuyingPower_Builder*) builderWithPrototype:(BuyingPower*) prototype;
- (BuyingPower_Builder*) toBuilder;

+ (BuyingPower*) parseFromData:(NSData*) data;
+ (BuyingPower*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BuyingPower*) parseFromInputStream:(NSInputStream*) input;
+ (BuyingPower*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BuyingPower*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BuyingPower*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BuyingPower_Builder : PBGeneratedMessage_Builder {
@private
  BuyingPower* result;
}

- (BuyingPower*) defaultInstance;

- (BuyingPower_Builder*) clear;
- (BuyingPower_Builder*) clone;

- (BuyingPower*) build;
- (BuyingPower*) buildPartial;

- (BuyingPower_Builder*) mergeFrom:(BuyingPower*) other;
- (BuyingPower_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BuyingPower_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBuyingPower;
- (Float64) buyingPower;
- (BuyingPower_Builder*) setBuyingPower:(Float64) value;
- (BuyingPower_Builder*) clearBuyingPower;

- (BOOL) hasOutstandingBov;
- (Float64) outstandingBov;
- (BuyingPower_Builder*) setOutstandingBov:(Float64) value;
- (BuyingPower_Builder*) clearOutstandingBov;

- (BOOL) hasRiskControl;
- (NSString*) riskControl;
- (BuyingPower_Builder*) setRiskControl:(NSString*) value;
- (BuyingPower_Builder*) clearRiskControl;

- (BOOL) hasLoanBalance;
- (Float64) loanBalance;
- (BuyingPower_Builder*) setLoanBalance:(Float64) value;
- (BuyingPower_Builder*) clearLoanBalance;

- (BOOL) hasClientRating;
- (NSString*) clientRating;
- (BuyingPower_Builder*) setClientRating:(NSString*) value;
- (BuyingPower_Builder*) clearClientRating;

- (BOOL) hasClientTypeCode;
- (int32_t) clientTypeCode;
- (BuyingPower_Builder*) setClientTypeCode:(int32_t) value;
- (BuyingPower_Builder*) clearClientTypeCode;

- (BOOL) hasTradingLimit;
- (Float64) tradingLimit;
- (BuyingPower_Builder*) setTradingLimit:(Float64) value;
- (BuyingPower_Builder*) clearTradingLimit;

- (BOOL) hasLoanRatio;
- (Float64) loanRatio;
- (BuyingPower_Builder*) setLoanRatio:(Float64) value;
- (BuyingPower_Builder*) clearLoanRatio;

- (BOOL) hasMarketValue;
- (Float64) marketValue;
- (BuyingPower_Builder*) setMarketValue:(Float64) value;
- (BuyingPower_Builder*) clearMarketValue;

- (BOOL) hasModifiedMarketValue;
- (Float64) modifiedMarketValue;
- (BuyingPower_Builder*) setModifiedMarketValue:(Float64) value;
- (BuyingPower_Builder*) clearModifiedMarketValue;

- (BOOL) hasModifiedLoanRatio;
- (Float64) modifiedLoanRatio;
- (BuyingPower_Builder*) setModifiedLoanRatio:(Float64) value;
- (BuyingPower_Builder*) clearModifiedLoanRatio;

- (BOOL) hasBuyTradeValue;
- (Float64) buyTradeValue;
- (BuyingPower_Builder*) setBuyTradeValue:(Float64) value;
- (BuyingPower_Builder*) clearBuyTradeValue;

- (BOOL) hasSellTradeValue;
- (Float64) sellTradeValue;
- (BuyingPower_Builder*) setSellTradeValue:(Float64) value;
- (BuyingPower_Builder*) clearSellTradeValue;

- (BOOL) hasPrivilleges;
- (NSString*) privilleges;
- (BuyingPower_Builder*) setPrivilleges:(NSString*) value;
- (BuyingPower_Builder*) clearPrivilleges;

- (BOOL) hasOrderPower;
- (Float64) orderPower;
- (BuyingPower_Builder*) setOrderPower:(Float64) value;
- (BuyingPower_Builder*) clearOrderPower;

- (BOOL) hasAutomaticShortsell;
- (int32_t) automaticShortsell;
- (BuyingPower_Builder*) setAutomaticShortsell:(int32_t) value;
- (BuyingPower_Builder*) clearAutomaticShortsell;

- (BOOL) hasUserType;
- (NSString*) userType;
- (BuyingPower_Builder*) setUserType:(NSString*) value;
- (BuyingPower_Builder*) clearUserType;
@end

@interface MarginAlert : PBGeneratedMessage {
@private
  BOOL hasRatio_:1;
  BOOL hasDays_:1;
  BOOL hasCode_:1;
  BOOL hasName_:1;
  BOOL hasStatus_:1;
  int32_t ratio;
  int32_t days;
  NSString* code;
  NSString* name;
  NSString* status;
}
- (BOOL) hasCode;
- (BOOL) hasName;
- (BOOL) hasRatio;
- (BOOL) hasDays;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* code;
@property (readonly, strong) NSString* name;
@property (readonly) int32_t ratio;
@property (readonly) int32_t days;
@property (readonly, strong) NSString* status;

+ (MarginAlert*) defaultInstance;
- (MarginAlert*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MarginAlert_Builder*) builder;
+ (MarginAlert_Builder*) builder;
+ (MarginAlert_Builder*) builderWithPrototype:(MarginAlert*) prototype;
- (MarginAlert_Builder*) toBuilder;

+ (MarginAlert*) parseFromData:(NSData*) data;
+ (MarginAlert*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarginAlert*) parseFromInputStream:(NSInputStream*) input;
+ (MarginAlert*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MarginAlert*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MarginAlert*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MarginAlert_Builder : PBGeneratedMessage_Builder {
@private
  MarginAlert* result;
}

- (MarginAlert*) defaultInstance;

- (MarginAlert_Builder*) clear;
- (MarginAlert_Builder*) clone;

- (MarginAlert*) build;
- (MarginAlert*) buildPartial;

- (MarginAlert_Builder*) mergeFrom:(MarginAlert*) other;
- (MarginAlert_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MarginAlert_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (NSString*) code;
- (MarginAlert_Builder*) setCode:(NSString*) value;
- (MarginAlert_Builder*) clearCode;

- (BOOL) hasName;
- (NSString*) name;
- (MarginAlert_Builder*) setName:(NSString*) value;
- (MarginAlert_Builder*) clearName;

- (BOOL) hasRatio;
- (int32_t) ratio;
- (MarginAlert_Builder*) setRatio:(int32_t) value;
- (MarginAlert_Builder*) clearRatio;

- (BOOL) hasDays;
- (int32_t) days;
- (MarginAlert_Builder*) setDays:(int32_t) value;
- (MarginAlert_Builder*) clearDays;

- (BOOL) hasStatus;
- (NSString*) status;
- (MarginAlert_Builder*) setStatus:(NSString*) value;
- (MarginAlert_Builder*) clearStatus;
@end

@interface CashMutation : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasAddress_:1;
  BOOL hasCiptadanaAccount_:1;
  BOOL hasBankAccount_:1;
  BOOL hasBankName_:1;
  BOOL hasBankBranch_:1;
  BOOL hasBankNo_:1;
  BOOL hasSendcashStatus_:1;
  NSString* name;
  NSString* address;
  NSString* ciptadanaAccount;
  NSString* bankAccount;
  NSString* bankName;
  NSString* bankBranch;
  NSString* bankNo;
  NSString* sendcashStatus;
}
- (BOOL) hasName;
- (BOOL) hasAddress;
- (BOOL) hasCiptadanaAccount;
- (BOOL) hasBankAccount;
- (BOOL) hasBankName;
- (BOOL) hasBankBranch;
- (BOOL) hasBankNo;
- (BOOL) hasSendcashStatus;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* address;
@property (readonly, strong) NSString* ciptadanaAccount;
@property (readonly, strong) NSString* bankAccount;
@property (readonly, strong) NSString* bankName;
@property (readonly, strong) NSString* bankBranch;
@property (readonly, strong) NSString* bankNo;
@property (readonly, strong) NSString* sendcashStatus;

+ (CashMutation*) defaultInstance;
- (CashMutation*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CashMutation_Builder*) builder;
+ (CashMutation_Builder*) builder;
+ (CashMutation_Builder*) builderWithPrototype:(CashMutation*) prototype;
- (CashMutation_Builder*) toBuilder;

+ (CashMutation*) parseFromData:(NSData*) data;
+ (CashMutation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashMutation*) parseFromInputStream:(NSInputStream*) input;
+ (CashMutation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashMutation*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CashMutation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CashMutation_Builder : PBGeneratedMessage_Builder {
@private
  CashMutation* result;
}

- (CashMutation*) defaultInstance;

- (CashMutation_Builder*) clear;
- (CashMutation_Builder*) clone;

- (CashMutation*) build;
- (CashMutation*) buildPartial;

- (CashMutation_Builder*) mergeFrom:(CashMutation*) other;
- (CashMutation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CashMutation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (CashMutation_Builder*) setName:(NSString*) value;
- (CashMutation_Builder*) clearName;

- (BOOL) hasAddress;
- (NSString*) address;
- (CashMutation_Builder*) setAddress:(NSString*) value;
- (CashMutation_Builder*) clearAddress;

- (BOOL) hasCiptadanaAccount;
- (NSString*) ciptadanaAccount;
- (CashMutation_Builder*) setCiptadanaAccount:(NSString*) value;
- (CashMutation_Builder*) clearCiptadanaAccount;

- (BOOL) hasBankAccount;
- (NSString*) bankAccount;
- (CashMutation_Builder*) setBankAccount:(NSString*) value;
- (CashMutation_Builder*) clearBankAccount;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (CashMutation_Builder*) setBankName:(NSString*) value;
- (CashMutation_Builder*) clearBankName;

- (BOOL) hasBankBranch;
- (NSString*) bankBranch;
- (CashMutation_Builder*) setBankBranch:(NSString*) value;
- (CashMutation_Builder*) clearBankBranch;

- (BOOL) hasBankNo;
- (NSString*) bankNo;
- (CashMutation_Builder*) setBankNo:(NSString*) value;
- (CashMutation_Builder*) clearBankNo;

- (BOOL) hasSendcashStatus;
- (NSString*) sendcashStatus;
- (CashMutation_Builder*) setSendcashStatus:(NSString*) value;
- (CashMutation_Builder*) clearSendcashStatus;
@end

@interface SubmitOrder : PBGeneratedMessage {
@private
  BOOL hasOrigGtc_:1;
  BOOL hasTextNegoDeal_:1;
  BOOL hasOrigClordid_:1;
  BOOL hasJatsId_:1;
  BOOL hasSettlementDate_:1;
  BOOL hasClientcode_:1;
  BOOL hasComplianceId_:1;
  BOOL hasExpireDate_:1;
  BOOL hasTimeInForce_:1;
  BOOL hasPrice_:1;
  BOOL hasOrderQty_:1;
  BOOL hasSide_:1;
  BOOL hasBoard_:1;
  BOOL hasSecuritycode_:1;
  BOOL hasHandInst_:1;
  BOOL hasAccount_:1;
  BOOL hasSendingTime_:1;
  BOOL hasAppSource_:1;
  BOOL hasUserType_:1;
  BOOL hasUsername_:1;
  BOOL hasTypeCode_:1;
  NSString* origGtc;
  NSString* textNegoDeal;
  NSString* origClordid;
  NSString* jatsId;
  NSString* settlementDate;
  NSString* clientcode;
  NSString* complianceId;
  NSString* expireDate;
  NSString* timeInForce;
  NSString* price;
  NSString* orderQty;
  NSString* side;
  NSString* board;
  NSString* securitycode;
  NSString* handInst;
  NSString* account;
  NSString* sendingTime;
  NSString* appSource;
  NSString* userType;
  NSString* username;
  NSString* typeCode;
}
- (BOOL) hasTypeCode;
- (BOOL) hasUsername;
- (BOOL) hasUserType;
- (BOOL) hasAppSource;
- (BOOL) hasSendingTime;
- (BOOL) hasAccount;
- (BOOL) hasHandInst;
- (BOOL) hasSecuritycode;
- (BOOL) hasBoard;
- (BOOL) hasSide;
- (BOOL) hasOrderQty;
- (BOOL) hasPrice;
- (BOOL) hasTimeInForce;
- (BOOL) hasExpireDate;
- (BOOL) hasComplianceId;
- (BOOL) hasClientcode;
- (BOOL) hasSettlementDate;
- (BOOL) hasJatsId;
- (BOOL) hasOrigClordid;
- (BOOL) hasTextNegoDeal;
- (BOOL) hasOrigGtc;
@property (readonly, strong) NSString* typeCode;
@property (readonly, strong) NSString* username;
@property (readonly, strong) NSString* userType;
@property (readonly, strong) NSString* appSource;
@property (readonly, strong) NSString* sendingTime;
@property (readonly, strong) NSString* account;
@property (readonly, strong) NSString* handInst;
@property (readonly, strong) NSString* securitycode;
@property (readonly, strong) NSString* board;
@property (readonly, strong) NSString* side;
@property (readonly, strong) NSString* orderQty;
@property (readonly, strong) NSString* price;
@property (readonly, strong) NSString* timeInForce;
@property (readonly, strong) NSString* expireDate;
@property (readonly, strong) NSString* complianceId;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* settlementDate;
@property (readonly, strong) NSString* jatsId;
@property (readonly, strong) NSString* origClordid;
@property (readonly, strong) NSString* textNegoDeal;
@property (readonly, strong) NSString* origGtc;

+ (SubmitOrder*) defaultInstance;
- (SubmitOrder*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SubmitOrder_Builder*) builder;
+ (SubmitOrder_Builder*) builder;
+ (SubmitOrder_Builder*) builderWithPrototype:(SubmitOrder*) prototype;
- (SubmitOrder_Builder*) toBuilder;

+ (SubmitOrder*) parseFromData:(NSData*) data;
+ (SubmitOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SubmitOrder*) parseFromInputStream:(NSInputStream*) input;
+ (SubmitOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SubmitOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SubmitOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SubmitOrder_Builder : PBGeneratedMessage_Builder {
@private
  SubmitOrder* result;
}

- (SubmitOrder*) defaultInstance;

- (SubmitOrder_Builder*) clear;
- (SubmitOrder_Builder*) clone;

- (SubmitOrder*) build;
- (SubmitOrder*) buildPartial;

- (SubmitOrder_Builder*) mergeFrom:(SubmitOrder*) other;
- (SubmitOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SubmitOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTypeCode;
- (NSString*) typeCode;
- (SubmitOrder_Builder*) setTypeCode:(NSString*) value;
- (SubmitOrder_Builder*) clearTypeCode;

- (BOOL) hasUsername;
- (NSString*) username;
- (SubmitOrder_Builder*) setUsername:(NSString*) value;
- (SubmitOrder_Builder*) clearUsername;

- (BOOL) hasUserType;
- (NSString*) userType;
- (SubmitOrder_Builder*) setUserType:(NSString*) value;
- (SubmitOrder_Builder*) clearUserType;

- (BOOL) hasAppSource;
- (NSString*) appSource;
- (SubmitOrder_Builder*) setAppSource:(NSString*) value;
- (SubmitOrder_Builder*) clearAppSource;

- (BOOL) hasSendingTime;
- (NSString*) sendingTime;
- (SubmitOrder_Builder*) setSendingTime:(NSString*) value;
- (SubmitOrder_Builder*) clearSendingTime;

- (BOOL) hasAccount;
- (NSString*) account;
- (SubmitOrder_Builder*) setAccount:(NSString*) value;
- (SubmitOrder_Builder*) clearAccount;

- (BOOL) hasHandInst;
- (NSString*) handInst;
- (SubmitOrder_Builder*) setHandInst:(NSString*) value;
- (SubmitOrder_Builder*) clearHandInst;

- (BOOL) hasSecuritycode;
- (NSString*) securitycode;
- (SubmitOrder_Builder*) setSecuritycode:(NSString*) value;
- (SubmitOrder_Builder*) clearSecuritycode;

- (BOOL) hasBoard;
- (NSString*) board;
- (SubmitOrder_Builder*) setBoard:(NSString*) value;
- (SubmitOrder_Builder*) clearBoard;

- (BOOL) hasSide;
- (NSString*) side;
- (SubmitOrder_Builder*) setSide:(NSString*) value;
- (SubmitOrder_Builder*) clearSide;

- (BOOL) hasOrderQty;
- (NSString*) orderQty;
- (SubmitOrder_Builder*) setOrderQty:(NSString*) value;
- (SubmitOrder_Builder*) clearOrderQty;

- (BOOL) hasPrice;
- (NSString*) price;
- (SubmitOrder_Builder*) setPrice:(NSString*) value;
- (SubmitOrder_Builder*) clearPrice;

- (BOOL) hasTimeInForce;
- (NSString*) timeInForce;
- (SubmitOrder_Builder*) setTimeInForce:(NSString*) value;
- (SubmitOrder_Builder*) clearTimeInForce;

- (BOOL) hasExpireDate;
- (NSString*) expireDate;
- (SubmitOrder_Builder*) setExpireDate:(NSString*) value;
- (SubmitOrder_Builder*) clearExpireDate;

- (BOOL) hasComplianceId;
- (NSString*) complianceId;
- (SubmitOrder_Builder*) setComplianceId:(NSString*) value;
- (SubmitOrder_Builder*) clearComplianceId;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (SubmitOrder_Builder*) setClientcode:(NSString*) value;
- (SubmitOrder_Builder*) clearClientcode;

- (BOOL) hasSettlementDate;
- (NSString*) settlementDate;
- (SubmitOrder_Builder*) setSettlementDate:(NSString*) value;
- (SubmitOrder_Builder*) clearSettlementDate;

- (BOOL) hasJatsId;
- (NSString*) jatsId;
- (SubmitOrder_Builder*) setJatsId:(NSString*) value;
- (SubmitOrder_Builder*) clearJatsId;

- (BOOL) hasOrigClordid;
- (NSString*) origClordid;
- (SubmitOrder_Builder*) setOrigClordid:(NSString*) value;
- (SubmitOrder_Builder*) clearOrigClordid;

- (BOOL) hasTextNegoDeal;
- (NSString*) textNegoDeal;
- (SubmitOrder_Builder*) setTextNegoDeal:(NSString*) value;
- (SubmitOrder_Builder*) clearTextNegoDeal;

- (BOOL) hasOrigGtc;
- (NSString*) origGtc;
- (SubmitOrder_Builder*) setOrigGtc:(NSString*) value;
- (SubmitOrder_Builder*) clearOrigGtc;
@end

@interface GroupOrder : PBGeneratedMessage {
@private
  BOOL hasTotalClien_:1;
  BOOL hasGroupId_:1;
  BOOL hasGroupCode_:1;
  BOOL hasGroupName_:1;
  BOOL hasTypeCode_:1;
  BOOL hasSide_:1;
  BOOL hasLastupdated_:1;
  BOOL hasSecurityCode_:1;
  int32_t totalClien;
  NSString* groupId;
  NSString* groupCode;
  NSString* groupName;
  NSString* typeCode;
  NSString* side;
  NSString* lastupdated;
  NSString* securityCode;
}
- (BOOL) hasGroupId;
- (BOOL) hasGroupCode;
- (BOOL) hasGroupName;
- (BOOL) hasTypeCode;
- (BOOL) hasSide;
- (BOOL) hasTotalClien;
- (BOOL) hasLastupdated;
- (BOOL) hasSecurityCode;
@property (readonly, strong) NSString* groupId;
@property (readonly, strong) NSString* groupCode;
@property (readonly, strong) NSString* groupName;
@property (readonly, strong) NSString* typeCode;
@property (readonly, strong) NSString* side;
@property (readonly) int32_t totalClien;
@property (readonly, strong) NSString* lastupdated;
@property (readonly, strong) NSString* securityCode;

+ (GroupOrder*) defaultInstance;
- (GroupOrder*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GroupOrder_Builder*) builder;
+ (GroupOrder_Builder*) builder;
+ (GroupOrder_Builder*) builderWithPrototype:(GroupOrder*) prototype;
- (GroupOrder_Builder*) toBuilder;

+ (GroupOrder*) parseFromData:(NSData*) data;
+ (GroupOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupOrder*) parseFromInputStream:(NSInputStream*) input;
+ (GroupOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GroupOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GroupOrder_Builder : PBGeneratedMessage_Builder {
@private
  GroupOrder* result;
}

- (GroupOrder*) defaultInstance;

- (GroupOrder_Builder*) clear;
- (GroupOrder_Builder*) clone;

- (GroupOrder*) build;
- (GroupOrder*) buildPartial;

- (GroupOrder_Builder*) mergeFrom:(GroupOrder*) other;
- (GroupOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GroupOrder_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (NSString*) groupId;
- (GroupOrder_Builder*) setGroupId:(NSString*) value;
- (GroupOrder_Builder*) clearGroupId;

- (BOOL) hasGroupCode;
- (NSString*) groupCode;
- (GroupOrder_Builder*) setGroupCode:(NSString*) value;
- (GroupOrder_Builder*) clearGroupCode;

- (BOOL) hasGroupName;
- (NSString*) groupName;
- (GroupOrder_Builder*) setGroupName:(NSString*) value;
- (GroupOrder_Builder*) clearGroupName;

- (BOOL) hasTypeCode;
- (NSString*) typeCode;
- (GroupOrder_Builder*) setTypeCode:(NSString*) value;
- (GroupOrder_Builder*) clearTypeCode;

- (BOOL) hasSide;
- (NSString*) side;
- (GroupOrder_Builder*) setSide:(NSString*) value;
- (GroupOrder_Builder*) clearSide;

- (BOOL) hasTotalClien;
- (int32_t) totalClien;
- (GroupOrder_Builder*) setTotalClien:(int32_t) value;
- (GroupOrder_Builder*) clearTotalClien;

- (BOOL) hasLastupdated;
- (NSString*) lastupdated;
- (GroupOrder_Builder*) setLastupdated:(NSString*) value;
- (GroupOrder_Builder*) clearLastupdated;

- (BOOL) hasSecurityCode;
- (NSString*) securityCode;
- (GroupOrder_Builder*) setSecurityCode:(NSString*) value;
- (GroupOrder_Builder*) clearSecurityCode;
@end

@interface GroupOrderDetail : PBGeneratedMessage {
@private
  BOOL hasLots_:1;
  BOOL hasRemaining_:1;
  BOOL hasLotsPct_:1;
  BOOL hasTradinglimit_:1;
  BOOL hasRemainingBulk_:1;
  BOOL hasTotalBulk_:1;
  BOOL hasClientcode_:1;
  BOOL hasClientname_:1;
  BOOL hasPrivileges_:1;
  BOOL hasSid_:1;
  BOOL hasForeigner_:1;
  Float64 lots;
  Float64 remaining;
  Float64 lotsPct;
  Float64 tradinglimit;
  Float64 remainingBulk;
  Float64 totalBulk;
  NSString* clientcode;
  NSString* clientname;
  NSString* privileges;
  NSString* sid;
  NSString* foreigner;
}
- (BOOL) hasClientcode;
- (BOOL) hasClientname;
- (BOOL) hasPrivileges;
- (BOOL) hasSid;
- (BOOL) hasForeigner;
- (BOOL) hasLots;
- (BOOL) hasRemaining;
- (BOOL) hasLotsPct;
- (BOOL) hasTradinglimit;
- (BOOL) hasRemainingBulk;
- (BOOL) hasTotalBulk;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* clientname;
@property (readonly, strong) NSString* privileges;
@property (readonly, strong) NSString* sid;
@property (readonly, strong) NSString* foreigner;
@property (readonly) Float64 lots;
@property (readonly) Float64 remaining;
@property (readonly) Float64 lotsPct;
@property (readonly) Float64 tradinglimit;
@property (readonly) Float64 remainingBulk;
@property (readonly) Float64 totalBulk;

+ (GroupOrderDetail*) defaultInstance;
- (GroupOrderDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GroupOrderDetail_Builder*) builder;
+ (GroupOrderDetail_Builder*) builder;
+ (GroupOrderDetail_Builder*) builderWithPrototype:(GroupOrderDetail*) prototype;
- (GroupOrderDetail_Builder*) toBuilder;

+ (GroupOrderDetail*) parseFromData:(NSData*) data;
+ (GroupOrderDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupOrderDetail*) parseFromInputStream:(NSInputStream*) input;
+ (GroupOrderDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupOrderDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GroupOrderDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GroupOrderDetail_Builder : PBGeneratedMessage_Builder {
@private
  GroupOrderDetail* result;
}

- (GroupOrderDetail*) defaultInstance;

- (GroupOrderDetail_Builder*) clear;
- (GroupOrderDetail_Builder*) clone;

- (GroupOrderDetail*) build;
- (GroupOrderDetail*) buildPartial;

- (GroupOrderDetail_Builder*) mergeFrom:(GroupOrderDetail*) other;
- (GroupOrderDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GroupOrderDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (GroupOrderDetail_Builder*) setClientcode:(NSString*) value;
- (GroupOrderDetail_Builder*) clearClientcode;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (GroupOrderDetail_Builder*) setClientname:(NSString*) value;
- (GroupOrderDetail_Builder*) clearClientname;

- (BOOL) hasPrivileges;
- (NSString*) privileges;
- (GroupOrderDetail_Builder*) setPrivileges:(NSString*) value;
- (GroupOrderDetail_Builder*) clearPrivileges;

- (BOOL) hasSid;
- (NSString*) sid;
- (GroupOrderDetail_Builder*) setSid:(NSString*) value;
- (GroupOrderDetail_Builder*) clearSid;

- (BOOL) hasForeigner;
- (NSString*) foreigner;
- (GroupOrderDetail_Builder*) setForeigner:(NSString*) value;
- (GroupOrderDetail_Builder*) clearForeigner;

- (BOOL) hasLots;
- (Float64) lots;
- (GroupOrderDetail_Builder*) setLots:(Float64) value;
- (GroupOrderDetail_Builder*) clearLots;

- (BOOL) hasRemaining;
- (Float64) remaining;
- (GroupOrderDetail_Builder*) setRemaining:(Float64) value;
- (GroupOrderDetail_Builder*) clearRemaining;

- (BOOL) hasLotsPct;
- (Float64) lotsPct;
- (GroupOrderDetail_Builder*) setLotsPct:(Float64) value;
- (GroupOrderDetail_Builder*) clearLotsPct;

- (BOOL) hasTradinglimit;
- (Float64) tradinglimit;
- (GroupOrderDetail_Builder*) setTradinglimit:(Float64) value;
- (GroupOrderDetail_Builder*) clearTradinglimit;

- (BOOL) hasRemainingBulk;
- (Float64) remainingBulk;
- (GroupOrderDetail_Builder*) setRemainingBulk:(Float64) value;
- (GroupOrderDetail_Builder*) clearRemainingBulk;

- (BOOL) hasTotalBulk;
- (Float64) totalBulk;
- (GroupOrderDetail_Builder*) setTotalBulk:(Float64) value;
- (GroupOrderDetail_Builder*) clearTotalBulk;
@end

@interface ClientOverdue : PBGeneratedMessage {
@private
  BOOL hasClientcode_:1;
  BOOL hasClientname_:1;
  BOOL hasDuedate_:1;
  BOOL hasSubaccount_:1;
  BOOL hasAmount_:1;
  NSString* clientcode;
  NSString* clientname;
  NSString* duedate;
  NSString* subaccount;
  NSString* amount;
}
- (BOOL) hasClientcode;
- (BOOL) hasClientname;
- (BOOL) hasDuedate;
- (BOOL) hasSubaccount;
- (BOOL) hasAmount;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* clientname;
@property (readonly, strong) NSString* duedate;
@property (readonly, strong) NSString* subaccount;
@property (readonly, strong) NSString* amount;

+ (ClientOverdue*) defaultInstance;
- (ClientOverdue*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ClientOverdue_Builder*) builder;
+ (ClientOverdue_Builder*) builder;
+ (ClientOverdue_Builder*) builderWithPrototype:(ClientOverdue*) prototype;
- (ClientOverdue_Builder*) toBuilder;

+ (ClientOverdue*) parseFromData:(NSData*) data;
+ (ClientOverdue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientOverdue*) parseFromInputStream:(NSInputStream*) input;
+ (ClientOverdue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientOverdue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ClientOverdue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ClientOverdue_Builder : PBGeneratedMessage_Builder {
@private
  ClientOverdue* result;
}

- (ClientOverdue*) defaultInstance;

- (ClientOverdue_Builder*) clear;
- (ClientOverdue_Builder*) clone;

- (ClientOverdue*) build;
- (ClientOverdue*) buildPartial;

- (ClientOverdue_Builder*) mergeFrom:(ClientOverdue*) other;
- (ClientOverdue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ClientOverdue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (ClientOverdue_Builder*) setClientcode:(NSString*) value;
- (ClientOverdue_Builder*) clearClientcode;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (ClientOverdue_Builder*) setClientname:(NSString*) value;
- (ClientOverdue_Builder*) clearClientname;

- (BOOL) hasDuedate;
- (NSString*) duedate;
- (ClientOverdue_Builder*) setDuedate:(NSString*) value;
- (ClientOverdue_Builder*) clearDuedate;

- (BOOL) hasSubaccount;
- (NSString*) subaccount;
- (ClientOverdue_Builder*) setSubaccount:(NSString*) value;
- (ClientOverdue_Builder*) clearSubaccount;

- (BOOL) hasAmount;
- (NSString*) amount;
- (ClientOverdue_Builder*) setAmount:(NSString*) value;
- (ClientOverdue_Builder*) clearAmount;
@end

@interface PotonganPajak : PBGeneratedMessage {
@private
  BOOL hasQty_:1;
  BOOL hasPrice_:1;
  BOOL hasVal_:1;
  BOOL hasPph_:1;
  BOOL hasCommission_:1;
  BOOL hasMinCommission_:1;
  BOOL hasSide_:1;
  BOOL hasTrxDate_:1;
  BOOL hasSecuritycode_:1;
  BOOL hasPeriod_:1;
  BOOL hasClientname_:1;
  BOOL hasBranch_:1;
  Float64 qty;
  Float64 price;
  Float64 val;
  Float64 pph;
  Float64 commission;
  Float64 minCommission;
  int32_t side;
  NSString* trxDate;
  NSString* securitycode;
  NSString* period;
  NSString* clientname;
  NSString* branch;
}
- (BOOL) hasTrxDate;
- (BOOL) hasSecuritycode;
- (BOOL) hasQty;
- (BOOL) hasPrice;
- (BOOL) hasVal;
- (BOOL) hasPph;
- (BOOL) hasPeriod;
- (BOOL) hasClientname;
- (BOOL) hasSide;
- (BOOL) hasCommission;
- (BOOL) hasMinCommission;
- (BOOL) hasBranch;
@property (readonly, strong) NSString* trxDate;
@property (readonly, strong) NSString* securitycode;
@property (readonly) Float64 qty;
@property (readonly) Float64 price;
@property (readonly) Float64 val;
@property (readonly) Float64 pph;
@property (readonly, strong) NSString* period;
@property (readonly, strong) NSString* clientname;
@property (readonly) int32_t side;
@property (readonly) Float64 commission;
@property (readonly) Float64 minCommission;
@property (readonly, strong) NSString* branch;

+ (PotonganPajak*) defaultInstance;
- (PotonganPajak*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PotonganPajak_Builder*) builder;
+ (PotonganPajak_Builder*) builder;
+ (PotonganPajak_Builder*) builderWithPrototype:(PotonganPajak*) prototype;
- (PotonganPajak_Builder*) toBuilder;

+ (PotonganPajak*) parseFromData:(NSData*) data;
+ (PotonganPajak*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PotonganPajak*) parseFromInputStream:(NSInputStream*) input;
+ (PotonganPajak*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PotonganPajak*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PotonganPajak*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PotonganPajak_Builder : PBGeneratedMessage_Builder {
@private
  PotonganPajak* result;
}

- (PotonganPajak*) defaultInstance;

- (PotonganPajak_Builder*) clear;
- (PotonganPajak_Builder*) clone;

- (PotonganPajak*) build;
- (PotonganPajak*) buildPartial;

- (PotonganPajak_Builder*) mergeFrom:(PotonganPajak*) other;
- (PotonganPajak_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PotonganPajak_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTrxDate;
- (NSString*) trxDate;
- (PotonganPajak_Builder*) setTrxDate:(NSString*) value;
- (PotonganPajak_Builder*) clearTrxDate;

- (BOOL) hasSecuritycode;
- (NSString*) securitycode;
- (PotonganPajak_Builder*) setSecuritycode:(NSString*) value;
- (PotonganPajak_Builder*) clearSecuritycode;

- (BOOL) hasQty;
- (Float64) qty;
- (PotonganPajak_Builder*) setQty:(Float64) value;
- (PotonganPajak_Builder*) clearQty;

- (BOOL) hasPrice;
- (Float64) price;
- (PotonganPajak_Builder*) setPrice:(Float64) value;
- (PotonganPajak_Builder*) clearPrice;

- (BOOL) hasVal;
- (Float64) val;
- (PotonganPajak_Builder*) setVal:(Float64) value;
- (PotonganPajak_Builder*) clearVal;

- (BOOL) hasPph;
- (Float64) pph;
- (PotonganPajak_Builder*) setPph:(Float64) value;
- (PotonganPajak_Builder*) clearPph;

- (BOOL) hasPeriod;
- (NSString*) period;
- (PotonganPajak_Builder*) setPeriod:(NSString*) value;
- (PotonganPajak_Builder*) clearPeriod;

- (BOOL) hasClientname;
- (NSString*) clientname;
- (PotonganPajak_Builder*) setClientname:(NSString*) value;
- (PotonganPajak_Builder*) clearClientname;

- (BOOL) hasSide;
- (int32_t) side;
- (PotonganPajak_Builder*) setSide:(int32_t) value;
- (PotonganPajak_Builder*) clearSide;

- (BOOL) hasCommission;
- (Float64) commission;
- (PotonganPajak_Builder*) setCommission:(Float64) value;
- (PotonganPajak_Builder*) clearCommission;

- (BOOL) hasMinCommission;
- (Float64) minCommission;
- (PotonganPajak_Builder*) setMinCommission:(Float64) value;
- (PotonganPajak_Builder*) clearMinCommission;

- (BOOL) hasBranch;
- (NSString*) branch;
- (PotonganPajak_Builder*) setBranch:(NSString*) value;
- (PotonganPajak_Builder*) clearBranch;
@end

@interface UnregularStocklist : PBGeneratedMessage {
@private
  BOOL hasClientcode_:1;
  BOOL hasStockcode_:1;
  BOOL hasMessage_:1;
  NSString* clientcode;
  NSString* stockcode;
  NSString* message;
}
- (BOOL) hasClientcode;
- (BOOL) hasStockcode;
- (BOOL) hasMessage;
@property (readonly, strong) NSString* clientcode;
@property (readonly, strong) NSString* stockcode;
@property (readonly, strong) NSString* message;

+ (UnregularStocklist*) defaultInstance;
- (UnregularStocklist*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnregularStocklist_Builder*) builder;
+ (UnregularStocklist_Builder*) builder;
+ (UnregularStocklist_Builder*) builderWithPrototype:(UnregularStocklist*) prototype;
- (UnregularStocklist_Builder*) toBuilder;

+ (UnregularStocklist*) parseFromData:(NSData*) data;
+ (UnregularStocklist*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnregularStocklist*) parseFromInputStream:(NSInputStream*) input;
+ (UnregularStocklist*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnregularStocklist*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnregularStocklist*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnregularStocklist_Builder : PBGeneratedMessage_Builder {
@private
  UnregularStocklist* result;
}

- (UnregularStocklist*) defaultInstance;

- (UnregularStocklist_Builder*) clear;
- (UnregularStocklist_Builder*) clone;

- (UnregularStocklist*) build;
- (UnregularStocklist*) buildPartial;

- (UnregularStocklist_Builder*) mergeFrom:(UnregularStocklist*) other;
- (UnregularStocklist_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnregularStocklist_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientcode;
- (NSString*) clientcode;
- (UnregularStocklist_Builder*) setClientcode:(NSString*) value;
- (UnregularStocklist_Builder*) clearClientcode;

- (BOOL) hasStockcode;
- (NSString*) stockcode;
- (UnregularStocklist_Builder*) setStockcode:(NSString*) value;
- (UnregularStocklist_Builder*) clearStockcode;

- (BOOL) hasMessage;
- (NSString*) message;
- (UnregularStocklist_Builder*) setMessage:(NSString*) value;
- (UnregularStocklist_Builder*) clearMessage;
@end

@interface CashWithdraw : PBGeneratedMessage {
@private
  BOOL hasCurrentCash_:1;
  BOOL hasAmount_:1;
  BOOL hasId_:1;
  BOOL hasTransferTo_:1;
  BOOL hasTradingPin_:1;
  BOOL hasType_:1;
  BOOL hasStatusAgrement_:1;
  BOOL hasReqDate_:1;
  BOOL hasReqStatus_:1;
  Float32 currentCash;
  Float32 amount;
  NSString* id;
  NSString* transferTo;
  NSString* tradingPin;
  NSString* type;
  NSString* statusAgrement;
  NSString* reqDate;
  NSString* reqStatus;
}
- (BOOL) hasId;
- (BOOL) hasCurrentCash;
- (BOOL) hasTransferTo;
- (BOOL) hasAmount;
- (BOOL) hasTradingPin;
- (BOOL) hasType;
- (BOOL) hasStatusAgrement;
- (BOOL) hasReqDate;
- (BOOL) hasReqStatus;
@property (readonly, strong) NSString* id;
@property (readonly) Float32 currentCash;
@property (readonly, strong) NSString* transferTo;
@property (readonly) Float32 amount;
@property (readonly, strong) NSString* tradingPin;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* statusAgrement;
@property (readonly, strong) NSString* reqDate;
@property (readonly, strong) NSString* reqStatus;

+ (CashWithdraw*) defaultInstance;
- (CashWithdraw*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CashWithdraw_Builder*) builder;
+ (CashWithdraw_Builder*) builder;
+ (CashWithdraw_Builder*) builderWithPrototype:(CashWithdraw*) prototype;
- (CashWithdraw_Builder*) toBuilder;

+ (CashWithdraw*) parseFromData:(NSData*) data;
+ (CashWithdraw*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashWithdraw*) parseFromInputStream:(NSInputStream*) input;
+ (CashWithdraw*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CashWithdraw*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CashWithdraw*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CashWithdraw_Builder : PBGeneratedMessage_Builder {
@private
  CashWithdraw* result;
}

- (CashWithdraw*) defaultInstance;

- (CashWithdraw_Builder*) clear;
- (CashWithdraw_Builder*) clone;

- (CashWithdraw*) build;
- (CashWithdraw*) buildPartial;

- (CashWithdraw_Builder*) mergeFrom:(CashWithdraw*) other;
- (CashWithdraw_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CashWithdraw_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (CashWithdraw_Builder*) setId:(NSString*) value;
- (CashWithdraw_Builder*) clearId;

- (BOOL) hasCurrentCash;
- (Float32) currentCash;
- (CashWithdraw_Builder*) setCurrentCash:(Float32) value;
- (CashWithdraw_Builder*) clearCurrentCash;

- (BOOL) hasTransferTo;
- (NSString*) transferTo;
- (CashWithdraw_Builder*) setTransferTo:(NSString*) value;
- (CashWithdraw_Builder*) clearTransferTo;

- (BOOL) hasAmount;
- (Float32) amount;
- (CashWithdraw_Builder*) setAmount:(Float32) value;
- (CashWithdraw_Builder*) clearAmount;

- (BOOL) hasTradingPin;
- (NSString*) tradingPin;
- (CashWithdraw_Builder*) setTradingPin:(NSString*) value;
- (CashWithdraw_Builder*) clearTradingPin;

- (BOOL) hasType;
- (NSString*) type;
- (CashWithdraw_Builder*) setType:(NSString*) value;
- (CashWithdraw_Builder*) clearType;

- (BOOL) hasStatusAgrement;
- (NSString*) statusAgrement;
- (CashWithdraw_Builder*) setStatusAgrement:(NSString*) value;
- (CashWithdraw_Builder*) clearStatusAgrement;

- (BOOL) hasReqDate;
- (NSString*) reqDate;
- (CashWithdraw_Builder*) setReqDate:(NSString*) value;
- (CashWithdraw_Builder*) clearReqDate;

- (BOOL) hasReqStatus;
- (NSString*) reqStatus;
- (CashWithdraw_Builder*) setReqStatus:(NSString*) value;
- (CashWithdraw_Builder*) clearReqStatus;
@end

